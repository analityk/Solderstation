
Lutownica.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000bc6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000b52  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000002c  00800100  00800100  00000bc6  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000bc6  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000bf8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000e8  00000000  00000000  00000c38  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001adf  00000000  00000000  00000d20  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000c5b  00000000  00000000  000027ff  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000738  00000000  00000000  0000345a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002c0  00000000  00000000  00003b94  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000006d9  00000000  00000000  00003e54  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000ec5  00000000  00000000  0000452d  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000b8  00000000  00000000  000053f2  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 35 00 	jmp	0x6a	; 0x6a <__ctors_end>
   4:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
   8:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
   c:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  10:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  14:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  18:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  1c:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  20:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  24:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  28:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  2c:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  30:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  34:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  38:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  3c:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  40:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  44:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  48:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  4c:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  50:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  54:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  58:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  5c:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  60:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  64:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>

00000068 <__ctors_start>:
  68:	39 03       	fmul	r19, r17

0000006a <__ctors_end>:
  6a:	11 24       	eor	r1, r1
  6c:	1f be       	out	0x3f, r1	; 63
  6e:	cf ef       	ldi	r28, 0xFF	; 255
  70:	d8 e0       	ldi	r29, 0x08	; 8
  72:	de bf       	out	0x3e, r29	; 62
  74:	cd bf       	out	0x3d, r28	; 61

00000076 <__do_clear_bss>:
  76:	21 e0       	ldi	r18, 0x01	; 1
  78:	a0 e0       	ldi	r26, 0x00	; 0
  7a:	b1 e0       	ldi	r27, 0x01	; 1
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	ac 32       	cpi	r26, 0x2C	; 44
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>

00000086 <__do_global_ctors>:
  86:	10 e0       	ldi	r17, 0x00	; 0
  88:	c5 e3       	ldi	r28, 0x35	; 53
  8a:	d0 e0       	ldi	r29, 0x00	; 0
  8c:	04 c0       	rjmp	.+8      	; 0x96 <__do_global_ctors+0x10>
  8e:	21 97       	sbiw	r28, 0x01	; 1
  90:	fe 01       	movw	r30, r28
  92:	0e 94 6c 05 	call	0xad8	; 0xad8 <__tablejump2__>
  96:	c4 33       	cpi	r28, 0x34	; 52
  98:	d1 07       	cpc	r29, r17
  9a:	c9 f7       	brne	.-14     	; 0x8e <__do_global_ctors+0x8>
  9c:	0e 94 37 02 	call	0x46e	; 0x46e <main>
  a0:	0c 94 a7 05 	jmp	0xb4e	; 0xb4e <_exit>

000000a4 <__bad_interrupt>:
  a4:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a8 <_ZN3LCD5DelayEj>:
		WriteCGR((uint8_t)(str[i]));
	};
};

void LCD::WriteChar(char c)
{
  a8:	cf 93       	push	r28
  aa:	df 93       	push	r29
  ac:	00 d0       	rcall	.+0      	; 0xae <_ZN3LCD5DelayEj+0x6>
  ae:	cd b7       	in	r28, 0x3d	; 61
  b0:	de b7       	in	r29, 0x3e	; 62
  b2:	7a 83       	std	Y+2, r23	; 0x02
  b4:	69 83       	std	Y+1, r22	; 0x01
  b6:	89 81       	ldd	r24, Y+1	; 0x01
  b8:	9a 81       	ldd	r25, Y+2	; 0x02
  ba:	9c 01       	movw	r18, r24
  bc:	21 50       	subi	r18, 0x01	; 1
  be:	31 09       	sbc	r19, r1
  c0:	3a 83       	std	Y+2, r19	; 0x02
  c2:	29 83       	std	Y+1, r18	; 0x01
  c4:	89 2b       	or	r24, r25
  c6:	b9 f7       	brne	.-18     	; 0xb6 <_ZN3LCD5DelayEj+0xe>
  c8:	0f 90       	pop	r0
  ca:	0f 90       	pop	r0
  cc:	df 91       	pop	r29
  ce:	cf 91       	pop	r28
  d0:	08 95       	ret

000000d2 <_ZN3LCD7CommandEh>:
  d2:	5a 98       	cbi	0x0b, 2	; 11
  d4:	2b b1       	in	r18, 0x0b	; 11
  d6:	2f 71       	andi	r18, 0x1F	; 31
  d8:	2b b9       	out	0x0b, r18	; 11
  da:	4b b1       	in	r20, 0x0b	; 11
  dc:	50 e2       	ldi	r21, 0x20	; 32
  de:	65 9f       	mul	r22, r21
  e0:	90 01       	movw	r18, r0
  e2:	11 24       	eor	r1, r1
  e4:	24 2b       	or	r18, r20
  e6:	2b b9       	out	0x0b, r18	; 11
  e8:	66 95       	lsr	r22
  ea:	66 95       	lsr	r22
  ec:	66 95       	lsr	r22
  ee:	25 b1       	in	r18, 0x05	; 5
  f0:	20 7e       	andi	r18, 0xE0	; 224
  f2:	25 b9       	out	0x05, r18	; 5
  f4:	65 b9       	out	0x05, r22	; 5
  f6:	5c 9a       	sbi	0x0b, 4	; 11
  f8:	6f ef       	ldi	r22, 0xFF	; 255
  fa:	70 e0       	ldi	r23, 0x00	; 0
  fc:	0e 94 54 00 	call	0xa8	; 0xa8 <_ZN3LCD5DelayEj>
 100:	5c 98       	cbi	0x0b, 4	; 11
 102:	08 95       	ret

00000104 <_ZN3LCD8WriteCGREh>:
 104:	5a 9a       	sbi	0x0b, 2	; 11
 106:	2b b1       	in	r18, 0x0b	; 11
 108:	2f 71       	andi	r18, 0x1F	; 31
 10a:	2b b9       	out	0x0b, r18	; 11
 10c:	4b b1       	in	r20, 0x0b	; 11
 10e:	50 e2       	ldi	r21, 0x20	; 32
 110:	65 9f       	mul	r22, r21
 112:	90 01       	movw	r18, r0
 114:	11 24       	eor	r1, r1
 116:	24 2b       	or	r18, r20
 118:	2b b9       	out	0x0b, r18	; 11
 11a:	66 95       	lsr	r22
 11c:	66 95       	lsr	r22
 11e:	66 95       	lsr	r22
 120:	25 b1       	in	r18, 0x05	; 5
 122:	20 7e       	andi	r18, 0xE0	; 224
 124:	25 b9       	out	0x05, r18	; 5
 126:	65 b9       	out	0x05, r22	; 5
 128:	5c 9a       	sbi	0x0b, 4	; 11
 12a:	6f ef       	ldi	r22, 0xFF	; 255
 12c:	70 e0       	ldi	r23, 0x00	; 0
 12e:	0e 94 54 00 	call	0xa8	; 0xa8 <_ZN3LCD5DelayEj>
 132:	5c 98       	cbi	0x0b, 4	; 11
 134:	5a 98       	cbi	0x0b, 2	; 11
 136:	08 95       	ret

00000138 <_ZN3LCD4InitEv>:
 138:	cf 93       	push	r28
 13a:	df 93       	push	r29
 13c:	ec 01       	movw	r28, r24
 13e:	8a b1       	in	r24, 0x0a	; 10
 140:	8c 61       	ori	r24, 0x1C	; 28
 142:	8a b9       	out	0x0a, r24	; 10
 144:	8b b1       	in	r24, 0x0b	; 11
 146:	83 7e       	andi	r24, 0xE3	; 227
 148:	8b b9       	out	0x0b, r24	; 11
 14a:	8a b1       	in	r24, 0x0a	; 10
 14c:	80 6e       	ori	r24, 0xE0	; 224
 14e:	8a b9       	out	0x0a, r24	; 10
 150:	8b b1       	in	r24, 0x0b	; 11
 152:	8f 71       	andi	r24, 0x1F	; 31
 154:	8b b9       	out	0x0b, r24	; 11
 156:	84 b1       	in	r24, 0x04	; 4
 158:	8f 61       	ori	r24, 0x1F	; 31
 15a:	84 b9       	out	0x04, r24	; 4
 15c:	85 b1       	in	r24, 0x05	; 5
 15e:	80 7e       	andi	r24, 0xE0	; 224
 160:	85 b9       	out	0x05, r24	; 5
 162:	85 b1       	in	r24, 0x05	; 5
 164:	87 60       	ori	r24, 0x07	; 7
 166:	85 b9       	out	0x05, r24	; 5
 168:	5c 9a       	sbi	0x0b, 4	; 11
 16a:	6f ef       	ldi	r22, 0xFF	; 255
 16c:	7f ef       	ldi	r23, 0xFF	; 255
 16e:	ce 01       	movw	r24, r28
 170:	0e 94 54 00 	call	0xa8	; 0xa8 <_ZN3LCD5DelayEj>
 174:	5c 98       	cbi	0x0b, 4	; 11
 176:	85 b1       	in	r24, 0x05	; 5
 178:	89 7f       	andi	r24, 0xF9	; 249
 17a:	85 b9       	out	0x05, r24	; 5
 17c:	8b b1       	in	r24, 0x0b	; 11
 17e:	80 6c       	ori	r24, 0xC0	; 192
 180:	8b b9       	out	0x0b, r24	; 11
 182:	5c 9a       	sbi	0x0b, 4	; 11
 184:	6f ef       	ldi	r22, 0xFF	; 255
 186:	7f e0       	ldi	r23, 0x0F	; 15
 188:	ce 01       	movw	r24, r28
 18a:	0e 94 54 00 	call	0xa8	; 0xa8 <_ZN3LCD5DelayEj>
 18e:	5c 98       	cbi	0x0b, 4	; 11
 190:	5c 9a       	sbi	0x0b, 4	; 11
 192:	6f ef       	ldi	r22, 0xFF	; 255
 194:	7f e0       	ldi	r23, 0x0F	; 15
 196:	ce 01       	movw	r24, r28
 198:	0e 94 54 00 	call	0xa8	; 0xa8 <_ZN3LCD5DelayEj>
 19c:	5c 98       	cbi	0x0b, 4	; 11
 19e:	8b b1       	in	r24, 0x0b	; 11
 1a0:	8f 73       	andi	r24, 0x3F	; 63
 1a2:	8b b9       	out	0x0b, r24	; 11
 1a4:	28 98       	cbi	0x05, 0	; 5
 1a6:	61 e0       	ldi	r22, 0x01	; 1
 1a8:	ce 01       	movw	r24, r28
 1aa:	0e 94 69 00 	call	0xd2	; 0xd2 <_ZN3LCD7CommandEh>
 1ae:	62 e0       	ldi	r22, 0x02	; 2
 1b0:	ce 01       	movw	r24, r28
 1b2:	0e 94 69 00 	call	0xd2	; 0xd2 <_ZN3LCD7CommandEh>
 1b6:	66 e0       	ldi	r22, 0x06	; 6
 1b8:	ce 01       	movw	r24, r28
 1ba:	0e 94 69 00 	call	0xd2	; 0xd2 <_ZN3LCD7CommandEh>
 1be:	6f e0       	ldi	r22, 0x0F	; 15
 1c0:	ce 01       	movw	r24, r28
 1c2:	0e 94 69 00 	call	0xd2	; 0xd2 <_ZN3LCD7CommandEh>
 1c6:	64 e1       	ldi	r22, 0x14	; 20
 1c8:	ce 01       	movw	r24, r28
 1ca:	0e 94 69 00 	call	0xd2	; 0xd2 <_ZN3LCD7CommandEh>
 1ce:	62 e0       	ldi	r22, 0x02	; 2
 1d0:	ce 01       	movw	r24, r28
 1d2:	0e 94 69 00 	call	0xd2	; 0xd2 <_ZN3LCD7CommandEh>
 1d6:	df 91       	pop	r29
 1d8:	cf 91       	pop	r28
 1da:	08 95       	ret

000001dc <_ZN3LCD11WriteStringEPc>:
 1dc:	bf 92       	push	r11
 1de:	cf 92       	push	r12
 1e0:	df 92       	push	r13
 1e2:	ef 92       	push	r14
 1e4:	ff 92       	push	r15
 1e6:	0f 93       	push	r16
 1e8:	1f 93       	push	r17
 1ea:	cf 93       	push	r28
 1ec:	df 93       	push	r29
 1ee:	7c 01       	movw	r14, r24
 1f0:	8b 01       	movw	r16, r22
 1f2:	d4 e1       	ldi	r29, 0x14	; 20
 1f4:	0f 2e       	mov	r0, r31
 1f6:	f4 e1       	ldi	r31, 0x14	; 20
 1f8:	bf 2e       	mov	r11, r31
 1fa:	f0 2d       	mov	r31, r0
 1fc:	68 01       	movw	r12, r16
 1fe:	f8 01       	movw	r30, r16
 200:	80 81       	ld	r24, Z
 202:	8a 30       	cpi	r24, 0x0A	; 10
 204:	71 f4       	brne	.+28     	; 0x222 <_ZN3LCD11WriteStringEPc+0x46>
 206:	8b 2d       	mov	r24, r11
 208:	8d 1b       	sub	r24, r29
 20a:	84 31       	cpi	r24, 0x14	; 20
 20c:	50 f4       	brcc	.+20     	; 0x222 <_ZN3LCD11WriteStringEPc+0x46>
 20e:	dd 23       	and	r29, r29
 210:	91 f0       	breq	.+36     	; 0x236 <_ZN3LCD11WriteStringEPc+0x5a>
 212:	c0 e0       	ldi	r28, 0x00	; 0
 214:	60 e2       	ldi	r22, 0x20	; 32
 216:	c7 01       	movw	r24, r14
 218:	0e 94 82 00 	call	0x104	; 0x104 <_ZN3LCD8WriteCGREh>
 21c:	cf 5f       	subi	r28, 0xFF	; 255
 21e:	dc 13       	cpse	r29, r28
 220:	f9 cf       	rjmp	.-14     	; 0x214 <_ZN3LCD11WriteStringEPc+0x38>
 222:	0f 5f       	subi	r16, 0xFF	; 255
 224:	1f 4f       	sbci	r17, 0xFF	; 255
 226:	f6 01       	movw	r30, r12
 228:	60 81       	ld	r22, Z
 22a:	c7 01       	movw	r24, r14
 22c:	0e 94 82 00 	call	0x104	; 0x104 <_ZN3LCD8WriteCGREh>
 230:	d1 50       	subi	r29, 0x01	; 1
 232:	21 f7       	brne	.-56     	; 0x1fc <_ZN3LCD11WriteStringEPc+0x20>
 234:	09 c0       	rjmp	.+18     	; 0x248 <_ZN3LCD11WriteStringEPc+0x6c>
 236:	0f 5f       	subi	r16, 0xFF	; 255
 238:	1f 4f       	sbci	r17, 0xFF	; 255
 23a:	f6 01       	movw	r30, r12
 23c:	60 81       	ld	r22, Z
 23e:	c7 01       	movw	r24, r14
 240:	0e 94 82 00 	call	0x104	; 0x104 <_ZN3LCD8WriteCGREh>
 244:	d1 50       	subi	r29, 0x01	; 1
 246:	da cf       	rjmp	.-76     	; 0x1fc <_ZN3LCD11WriteStringEPc+0x20>
 248:	df 91       	pop	r29
 24a:	cf 91       	pop	r28
 24c:	1f 91       	pop	r17
 24e:	0f 91       	pop	r16
 250:	ff 90       	pop	r15
 252:	ef 90       	pop	r14
 254:	df 90       	pop	r13
 256:	cf 90       	pop	r12
 258:	bf 90       	pop	r11
 25a:	08 95       	ret

0000025c <_ZN3LCD13GoToFirstLineEv>:
	
};

void LCD::GoToFirstLine(void)
{
	Command(LCD_SET_DDRAM_ADDR| 0);
 25c:	60 e8       	ldi	r22, 0x80	; 128
 25e:	0e 94 69 00 	call	0xd2	; 0xd2 <_ZN3LCD7CommandEh>
 262:	08 95       	ret

00000264 <_ZN3LCD14GoToSecondLineEv>:
};

void LCD::GoToSecondLine(void)
{
	Command(LCD_SET_DDRAM_ADDR| 40);
 264:	68 ea       	ldi	r22, 0xA8	; 168
 266:	0e 94 69 00 	call	0xd2	; 0xd2 <_ZN3LCD7CommandEh>
 26a:	08 95       	ret

0000026c <_ZN3PID7ComputeEv>:
{
	this->kp = kp;
	this->ki = ki;
	this->kd = kd;
	this->kt = dt;
};
 26c:	4f 92       	push	r4
 26e:	5f 92       	push	r5
 270:	6f 92       	push	r6
 272:	7f 92       	push	r7
 274:	8f 92       	push	r8
 276:	9f 92       	push	r9
 278:	af 92       	push	r10
 27a:	bf 92       	push	r11
 27c:	cf 92       	push	r12
 27e:	df 92       	push	r13
 280:	ef 92       	push	r14
 282:	ff 92       	push	r15
 284:	cf 93       	push	r28
 286:	df 93       	push	r29
 288:	00 d0       	rcall	.+0      	; 0x28a <_ZN3PID7ComputeEv+0x1e>
 28a:	00 d0       	rcall	.+0      	; 0x28c <_ZN3PID7ComputeEv+0x20>
 28c:	00 d0       	rcall	.+0      	; 0x28e <_ZN3PID7ComputeEv+0x22>
 28e:	cd b7       	in	r28, 0x3d	; 61
 290:	de b7       	in	r29, 0x3e	; 62
 292:	9e 83       	std	Y+6, r25	; 0x06
 294:	8d 83       	std	Y+5, r24	; 0x05
 296:	fc 01       	movw	r30, r24
 298:	24 a1       	ldd	r18, Z+36	; 0x24
 29a:	35 a1       	ldd	r19, Z+37	; 0x25
 29c:	46 a1       	ldd	r20, Z+38	; 0x26
 29e:	57 a1       	ldd	r21, Z+39	; 0x27
 2a0:	60 a5       	ldd	r22, Z+40	; 0x28
 2a2:	71 a5       	ldd	r23, Z+41	; 0x29
 2a4:	82 a5       	ldd	r24, Z+42	; 0x2a
 2a6:	93 a5       	ldd	r25, Z+43	; 0x2b
 2a8:	0e 94 5c 03 	call	0x6b8	; 0x6b8 <__subsf3>
 2ac:	6b 01       	movw	r12, r22
 2ae:	7c 01       	movw	r14, r24
 2b0:	ed 81       	ldd	r30, Y+5	; 0x05
 2b2:	fe 81       	ldd	r31, Y+6	; 0x06
 2b4:	60 83       	st	Z, r22
 2b6:	71 83       	std	Z+1, r23	; 0x01
 2b8:	82 83       	std	Z+2, r24	; 0x02
 2ba:	93 83       	std	Z+3, r25	; 0x03
 2bc:	84 88       	ldd	r8, Z+20	; 0x14
 2be:	95 88       	ldd	r9, Z+21	; 0x15
 2c0:	a6 88       	ldd	r10, Z+22	; 0x16
 2c2:	b7 88       	ldd	r11, Z+23	; 0x17
 2c4:	a5 01       	movw	r20, r10
 2c6:	94 01       	movw	r18, r8
 2c8:	0e 94 ff 04 	call	0x9fe	; 0x9fe <__mulsf3>
 2cc:	ed 81       	ldd	r30, Y+5	; 0x05
 2ce:	fe 81       	ldd	r31, Y+6	; 0x06
 2d0:	24 85       	ldd	r18, Z+12	; 0x0c
 2d2:	35 85       	ldd	r19, Z+13	; 0x0d
 2d4:	46 85       	ldd	r20, Z+14	; 0x0e
 2d6:	57 85       	ldd	r21, Z+15	; 0x0f
 2d8:	0e 94 5d 03 	call	0x6ba	; 0x6ba <__addsf3>
 2dc:	2b 01       	movw	r4, r22
 2de:	3c 01       	movw	r6, r24
 2e0:	ed 81       	ldd	r30, Y+5	; 0x05
 2e2:	fe 81       	ldd	r31, Y+6	; 0x06
 2e4:	64 87       	std	Z+12, r22	; 0x0c
 2e6:	75 87       	std	Z+13, r23	; 0x0d
 2e8:	86 87       	std	Z+14, r24	; 0x0e
 2ea:	97 87       	std	Z+15, r25	; 0x0f
 2ec:	24 81       	ldd	r18, Z+4	; 0x04
 2ee:	35 81       	ldd	r19, Z+5	; 0x05
 2f0:	46 81       	ldd	r20, Z+6	; 0x06
 2f2:	57 81       	ldd	r21, Z+7	; 0x07
 2f4:	c7 01       	movw	r24, r14
 2f6:	b6 01       	movw	r22, r12
 2f8:	0e 94 5c 03 	call	0x6b8	; 0x6b8 <__subsf3>
 2fc:	a5 01       	movw	r20, r10
 2fe:	94 01       	movw	r18, r8
 300:	0e 94 c9 03 	call	0x792	; 0x792 <__divsf3>
 304:	4b 01       	movw	r8, r22
 306:	5c 01       	movw	r10, r24
 308:	ed 81       	ldd	r30, Y+5	; 0x05
 30a:	fe 81       	ldd	r31, Y+6	; 0x06
 30c:	60 87       	std	Z+8, r22	; 0x08
 30e:	71 87       	std	Z+9, r23	; 0x09
 310:	82 87       	std	Z+10, r24	; 0x0a
 312:	93 87       	std	Z+11, r25	; 0x0b
 314:	20 8d       	ldd	r18, Z+24	; 0x18
 316:	31 8d       	ldd	r19, Z+25	; 0x19
 318:	42 8d       	ldd	r20, Z+26	; 0x1a
 31a:	53 8d       	ldd	r21, Z+27	; 0x1b
 31c:	c7 01       	movw	r24, r14
 31e:	b6 01       	movw	r22, r12
 320:	0e 94 ff 04 	call	0x9fe	; 0x9fe <__mulsf3>
 324:	69 83       	std	Y+1, r22	; 0x01
 326:	7a 83       	std	Y+2, r23	; 0x02
 328:	8b 83       	std	Y+3, r24	; 0x03
 32a:	9c 83       	std	Y+4, r25	; 0x04
 32c:	ed 81       	ldd	r30, Y+5	; 0x05
 32e:	fe 81       	ldd	r31, Y+6	; 0x06
 330:	24 8d       	ldd	r18, Z+28	; 0x1c
 332:	35 8d       	ldd	r19, Z+29	; 0x1d
 334:	46 8d       	ldd	r20, Z+30	; 0x1e
 336:	57 8d       	ldd	r21, Z+31	; 0x1f
 338:	c3 01       	movw	r24, r6
 33a:	b2 01       	movw	r22, r4
 33c:	0e 94 ff 04 	call	0x9fe	; 0x9fe <__mulsf3>
 340:	9b 01       	movw	r18, r22
 342:	ac 01       	movw	r20, r24
 344:	69 81       	ldd	r22, Y+1	; 0x01
 346:	7a 81       	ldd	r23, Y+2	; 0x02
 348:	8b 81       	ldd	r24, Y+3	; 0x03
 34a:	9c 81       	ldd	r25, Y+4	; 0x04
 34c:	0e 94 5d 03 	call	0x6ba	; 0x6ba <__addsf3>
 350:	2b 01       	movw	r4, r22
 352:	3c 01       	movw	r6, r24
 354:	ed 81       	ldd	r30, Y+5	; 0x05
 356:	fe 81       	ldd	r31, Y+6	; 0x06
 358:	20 a1       	ldd	r18, Z+32	; 0x20
 35a:	31 a1       	ldd	r19, Z+33	; 0x21
 35c:	42 a1       	ldd	r20, Z+34	; 0x22
 35e:	53 a1       	ldd	r21, Z+35	; 0x23
 360:	c5 01       	movw	r24, r10
 362:	b4 01       	movw	r22, r8
 364:	0e 94 ff 04 	call	0x9fe	; 0x9fe <__mulsf3>
 368:	9b 01       	movw	r18, r22
 36a:	ac 01       	movw	r20, r24
 36c:	c3 01       	movw	r24, r6
 36e:	b2 01       	movw	r22, r4
 370:	0e 94 5d 03 	call	0x6ba	; 0x6ba <__addsf3>
 374:	ed 81       	ldd	r30, Y+5	; 0x05
 376:	fe 81       	ldd	r31, Y+6	; 0x06
 378:	60 8b       	std	Z+16, r22	; 0x10
 37a:	71 8b       	std	Z+17, r23	; 0x11
 37c:	82 8b       	std	Z+18, r24	; 0x12
 37e:	93 8b       	std	Z+19, r25	; 0x13
 380:	c4 82       	std	Z+4, r12	; 0x04
 382:	d5 82       	std	Z+5, r13	; 0x05
 384:	e6 82       	std	Z+6, r14	; 0x06
 386:	f7 82       	std	Z+7, r15	; 0x07
 388:	26 96       	adiw	r28, 0x06	; 6
 38a:	0f b6       	in	r0, 0x3f	; 63
 38c:	f8 94       	cli
 38e:	de bf       	out	0x3e, r29	; 62
 390:	0f be       	out	0x3f, r0	; 63
 392:	cd bf       	out	0x3d, r28	; 61
 394:	df 91       	pop	r29
 396:	cf 91       	pop	r28
 398:	ff 90       	pop	r15
 39a:	ef 90       	pop	r14
 39c:	df 90       	pop	r13
 39e:	cf 90       	pop	r12
 3a0:	bf 90       	pop	r11
 3a2:	af 90       	pop	r10
 3a4:	9f 90       	pop	r9
 3a6:	8f 90       	pop	r8
 3a8:	7f 90       	pop	r7
 3aa:	6f 90       	pop	r6
 3ac:	5f 90       	pop	r5
 3ae:	4f 90       	pop	r4
 3b0:	08 95       	ret

000003b2 <_ZN3PID11SetSetpointEf>:

void PID::SetSetpoint(float setpoint)
{
	this->setpoint = setpoint;
 3b2:	fc 01       	movw	r30, r24
 3b4:	40 a7       	std	Z+40, r20	; 0x28
 3b6:	51 a7       	std	Z+41, r21	; 0x29
 3b8:	62 a7       	std	Z+42, r22	; 0x2a
 3ba:	73 a7       	std	Z+43, r23	; 0x2b
 3bc:	08 95       	ret

000003be <_ZN3PID4FeedEf>:
};

void PID::Feed(float val)
{
	this->measure = val;
 3be:	fc 01       	movw	r30, r24
 3c0:	44 a3       	std	Z+36, r20	; 0x24
 3c2:	55 a3       	std	Z+37, r21	; 0x25
 3c4:	66 a3       	std	Z+38, r22	; 0x26
 3c6:	77 a3       	std	Z+39, r23	; 0x27
 3c8:	08 95       	ret

000003ca <_ZN3PID6OutputEv>:
};

float PID::Output(void)
{
	return output;
 3ca:	fc 01       	movw	r30, r24
 3cc:	60 89       	ldd	r22, Z+16	; 0x10
 3ce:	71 89       	ldd	r23, Z+17	; 0x11
 3d0:	82 89       	ldd	r24, Z+18	; 0x12
 3d2:	93 89       	ldd	r25, Z+19	; 0x13
};
 3d4:	08 95       	ret

000003d6 <_Z5delaym>:
	float units = (float)(x - a);
	float result = (units * dd) + (float)c;
	return (int32_t)(result);
};

void delay(uint32_t volatile t){
 3d6:	cf 93       	push	r28
 3d8:	df 93       	push	r29
 3da:	00 d0       	rcall	.+0      	; 0x3dc <_Z5delaym+0x6>
 3dc:	00 d0       	rcall	.+0      	; 0x3de <_Z5delaym+0x8>
 3de:	cd b7       	in	r28, 0x3d	; 61
 3e0:	de b7       	in	r29, 0x3e	; 62
 3e2:	69 83       	std	Y+1, r22	; 0x01
 3e4:	7a 83       	std	Y+2, r23	; 0x02
 3e6:	8b 83       	std	Y+3, r24	; 0x03
 3e8:	9c 83       	std	Y+4, r25	; 0x04
	while(t--){};
 3ea:	89 81       	ldd	r24, Y+1	; 0x01
 3ec:	9a 81       	ldd	r25, Y+2	; 0x02
 3ee:	ab 81       	ldd	r26, Y+3	; 0x03
 3f0:	bc 81       	ldd	r27, Y+4	; 0x04
 3f2:	ac 01       	movw	r20, r24
 3f4:	bd 01       	movw	r22, r26
 3f6:	41 50       	subi	r20, 0x01	; 1
 3f8:	51 09       	sbc	r21, r1
 3fa:	61 09       	sbc	r22, r1
 3fc:	71 09       	sbc	r23, r1
 3fe:	49 83       	std	Y+1, r20	; 0x01
 400:	5a 83       	std	Y+2, r21	; 0x02
 402:	6b 83       	std	Y+3, r22	; 0x03
 404:	7c 83       	std	Y+4, r23	; 0x04
 406:	89 2b       	or	r24, r25
 408:	8a 2b       	or	r24, r26
 40a:	8b 2b       	or	r24, r27
 40c:	71 f7       	brne	.-36     	; 0x3ea <_Z5delaym+0x14>
};
 40e:	0f 90       	pop	r0
 410:	0f 90       	pop	r0
 412:	0f 90       	pop	r0
 414:	0f 90       	pop	r0
 416:	df 91       	pop	r29
 418:	cf 91       	pop	r28
 41a:	08 95       	ret

0000041c <_Z8adc_readh>:

uint16_t adc_read(uint8_t pinc){
	ADMUX = (0<<REFS1)|(1<<REFS0)|pinc;
 41c:	80 64       	ori	r24, 0x40	; 64
 41e:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
	ADCSRA |= (1<<ADSC);
 422:	ea e7       	ldi	r30, 0x7A	; 122
 424:	f0 e0       	ldi	r31, 0x00	; 0
 426:	80 81       	ld	r24, Z
 428:	80 64       	ori	r24, 0x40	; 64
 42a:	80 83       	st	Z, r24
	while( ADCSRA & (1 << ADSC )){};
 42c:	80 81       	ld	r24, Z
 42e:	86 fd       	sbrc	r24, 6
 430:	fd cf       	rjmp	.-6      	; 0x42c <_Z8adc_readh+0x10>
	uint8_t lsb = ADCL;
 432:	20 91 78 00 	lds	r18, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
	uint8_t msb = ADCH;
 436:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
	uint16_t t = lsb + (msb<<8);
	return t;
 43a:	90 e0       	ldi	r25, 0x00	; 0
 43c:	98 2f       	mov	r25, r24
 43e:	88 27       	eor	r24, r24
};
 440:	82 0f       	add	r24, r18
 442:	91 1d       	adc	r25, r1
 444:	08 95       	ret

00000446 <_Z4cstrPc>:

void cstr(char* t){
 446:	fc 01       	movw	r30, r24
 448:	9c 01       	movw	r18, r24
 44a:	21 50       	subi	r18, 0x01	; 1
 44c:	3f 4f       	sbci	r19, 0xFF	; 255
	for(uint8_t i=0; i<255; i++){
		if(! (((t[i] >= 48) && (t[i] <=59 )) || (t[i] == '.') || (t[i] == '-')) ){
 44e:	df 01       	movw	r26, r30
 450:	81 91       	ld	r24, Z+
 452:	90 ed       	ldi	r25, 0xD0	; 208
 454:	98 0f       	add	r25, r24
 456:	9c 30       	cpi	r25, 0x0C	; 12
 458:	30 f0       	brcs	.+12     	; 0x466 <_Z4cstrPc+0x20>
 45a:	8d 52       	subi	r24, 0x2D	; 45
 45c:	82 30       	cpi	r24, 0x02	; 2
 45e:	18 f0       	brcs	.+6      	; 0x466 <_Z4cstrPc+0x20>
			t[i] = '\n';
 460:	8a e0       	ldi	r24, 0x0A	; 10
 462:	8c 93       	st	X, r24
			break;
 464:	08 95       	ret
	uint16_t t = lsb + (msb<<8);
	return t;
};

void cstr(char* t){
	for(uint8_t i=0; i<255; i++){
 466:	e2 17       	cp	r30, r18
 468:	f3 07       	cpc	r31, r19
 46a:	89 f7       	brne	.-30     	; 0x44e <_Z4cstrPc+0x8>
 46c:	08 95       	ret

0000046e <main>:
		};
	};
};

int main(void)
{
 46e:	cf 93       	push	r28
 470:	df 93       	push	r29
 472:	cd b7       	in	r28, 0x3d	; 61
 474:	de b7       	in	r29, 0x3e	; 62
 476:	e5 97       	sbiw	r28, 0x35	; 53
 478:	0f b6       	in	r0, 0x3f	; 63
 47a:	f8 94       	cli
 47c:	de bf       	out	0x3e, r29	; 62
 47e:	0f be       	out	0x3f, r0	; 63
 480:	cd bf       	out	0x3d, r28	; 61
	LCD lcd;
	lcd.Init();
 482:	ce 01       	movw	r24, r28
 484:	01 96       	adiw	r24, 0x01	; 1
 486:	0e 94 9c 00 	call	0x138	; 0x138 <_ZN3LCD4InitEv>

	lcd.Command(1);
 48a:	61 e0       	ldi	r22, 0x01	; 1
 48c:	ce 01       	movw	r24, r28
 48e:	01 96       	adiw	r24, 0x01	; 1
 490:	0e 94 69 00 	call	0xd2	; 0xd2 <_ZN3LCD7CommandEh>
	lcd.Command(2);
 494:	62 e0       	ldi	r22, 0x02	; 2
 496:	ce 01       	movw	r24, r28
 498:	01 96       	adiw	r24, 0x01	; 1
 49a:	0e 94 69 00 	call	0xd2	; 0xd2 <_ZN3LCD7CommandEh>
	lcd.Command(0x0C);
 49e:	6c e0       	ldi	r22, 0x0C	; 12
 4a0:	ce 01       	movw	r24, r28
 4a2:	01 96       	adiw	r24, 0x01	; 1
 4a4:	0e 94 69 00 	call	0xd2	; 0xd2 <_ZN3LCD7CommandEh>

	char str1[20];
	char str2[20];
	char str3[20];

	ADCSRA = (1<<ADEN)|(1<<ADPS2)|(1<<ADPS1)|(1<<ADPS0);
 4a8:	87 e8       	ldi	r24, 0x87	; 135
 4aa:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
	
	TCCR1B = (1<<CS12)|(1<<CS10);
 4ae:	85 e0       	ldi	r24, 0x05	; 5
 4b0:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
	TCNT1 = 0;
 4b4:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 4b8:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
	
	uint16_t t_adc[4];
	uint16_t tavg = 0;
	uint8_t tcnt = 0;

	pid.SetSetpoint(work_point);
 4bc:	40 e0       	ldi	r20, 0x00	; 0
 4be:	50 e8       	ldi	r21, 0x80	; 128
 4c0:	62 e2       	ldi	r22, 0x22	; 34
 4c2:	74 e4       	ldi	r23, 0x44	; 68
 4c4:	80 e0       	ldi	r24, 0x00	; 0
 4c6:	91 e0       	ldi	r25, 0x01	; 1
 4c8:	0e 94 d9 01 	call	0x3b2	; 0x3b2 <_ZN3PID11SetSetpointEf>
	TCCR1B = (1<<CS12)|(1<<CS10);
	TCNT1 = 0;
	
	uint16_t t_adc[4];
	uint16_t tavg = 0;
	uint8_t tcnt = 0;
 4cc:	b1 2c       	mov	r11, r1
		r = pid.Output();
		
		int32_t time = mmap(r, -20000, 20000, -drv_time, drv_time);
		
		if( time >= drv_time ){
			time = drv_time;
 4ce:	0f 2e       	mov	r0, r31
 4d0:	f0 e7       	ldi	r31, 0x70	; 112
 4d2:	4f 2e       	mov	r4, r31
 4d4:	f1 e1       	ldi	r31, 0x11	; 17
 4d6:	5f 2e       	mov	r5, r31
 4d8:	66 24       	eor	r6, r6
 4da:	63 94       	inc	r6
 4dc:	71 2c       	mov	r7, r1
 4de:	f0 2d       	mov	r31, r0
		};
		
		if( time <= -drv_time ){
			time = -drv_time;
 4e0:	0f 2e       	mov	r0, r31
 4e2:	f0 e9       	ldi	r31, 0x90	; 144
 4e4:	af 2e       	mov	r10, r31
 4e6:	f0 2d       	mov	r31, r0
 4e8:	0f 2e       	mov	r0, r31
 4ea:	fe ee       	ldi	r31, 0xEE	; 238
 4ec:	9f 2e       	mov	r9, r31
 4ee:	f0 2d       	mov	r31, r0
 4f0:	0f 2e       	mov	r0, r31
 4f2:	fe ef       	ldi	r31, 0xFE	; 254
 4f4:	8f 2e       	mov	r8, r31
 4f6:	f0 2d       	mov	r31, r0
 4f8:	33 24       	eor	r3, r3
 4fa:	3a 94       	dec	r3
	
	int32_t drv_time = 70000;
	
	while (1)
	{
		CLR_T0;
 4fc:	3a 9a       	sbi	0x07, 2	; 7
 4fe:	42 98       	cbi	0x08, 2	; 8
		
		while(adc_read(1) > 700){};
 500:	81 e0       	ldi	r24, 0x01	; 1
 502:	0e 94 0e 02 	call	0x41c	; 0x41c <_Z8adc_readh>
 506:	8d 3b       	cpi	r24, 0xBD	; 189
 508:	92 40       	sbci	r25, 0x02	; 2
 50a:	d0 f7       	brcc	.-12     	; 0x500 <main+0x92>
		
		t_adc[tcnt] = adc_read(1);
 50c:	81 e0       	ldi	r24, 0x01	; 1
 50e:	0e 94 0e 02 	call	0x41c	; 0x41c <_Z8adc_readh>
 512:	eb 2d       	mov	r30, r11
 514:	f0 e0       	ldi	r31, 0x00	; 0
 516:	ee 0f       	add	r30, r30
 518:	ff 1f       	adc	r31, r31
 51a:	21 e0       	ldi	r18, 0x01	; 1
 51c:	30 e0       	ldi	r19, 0x00	; 0
 51e:	2c 0f       	add	r18, r28
 520:	3d 1f       	adc	r19, r29
 522:	e2 0f       	add	r30, r18
 524:	f3 1f       	adc	r31, r19
 526:	92 a7       	std	Z+42, r25	; 0x2a
 528:	81 a7       	std	Z+41, r24	; 0x29
		tcnt++;
 52a:	b3 94       	inc	r11
		if(tcnt>4){
 52c:	34 e0       	ldi	r19, 0x04	; 4
 52e:	3b 15       	cp	r19, r11
 530:	08 f4       	brcc	.+2      	; 0x534 <main+0xc6>
			tcnt = 0;
 532:	b1 2c       	mov	r11, r1
		};
		
		tavg = t_adc[0] + t_adc[1] + t_adc[2] + t_adc[3];
 534:	0a a5       	ldd	r16, Y+42	; 0x2a
 536:	1b a5       	ldd	r17, Y+43	; 0x2b
 538:	8c a5       	ldd	r24, Y+44	; 0x2c
 53a:	9d a5       	ldd	r25, Y+45	; 0x2d
 53c:	08 0f       	add	r16, r24
 53e:	19 1f       	adc	r17, r25
 540:	8e a5       	ldd	r24, Y+46	; 0x2e
 542:	9f a5       	ldd	r25, Y+47	; 0x2f
 544:	08 0f       	add	r16, r24
 546:	19 1f       	adc	r17, r25
 548:	88 a9       	ldd	r24, Y+48	; 0x30
 54a:	99 a9       	ldd	r25, Y+49	; 0x31
 54c:	08 0f       	add	r16, r24
 54e:	19 1f       	adc	r17, r25
		tavg /= 4;
 550:	16 95       	lsr	r17
 552:	07 95       	ror	r16
 554:	16 95       	lsr	r17
 556:	07 95       	ror	r16
		
		float r = 0;
		
		pid.Feed((float)(tavg));
 558:	b8 01       	movw	r22, r16
 55a:	80 e0       	ldi	r24, 0x00	; 0
 55c:	90 e0       	ldi	r25, 0x00	; 0
 55e:	0e 94 71 04 	call	0x8e2	; 0x8e2 <__floatunsisf>
 562:	ab 01       	movw	r20, r22
 564:	bc 01       	movw	r22, r24
 566:	80 e0       	ldi	r24, 0x00	; 0
 568:	91 e0       	ldi	r25, 0x01	; 1
 56a:	0e 94 df 01 	call	0x3be	; 0x3be <_ZN3PID4FeedEf>
		pid.Compute();
 56e:	80 e0       	ldi	r24, 0x00	; 0
 570:	91 e0       	ldi	r25, 0x01	; 1
 572:	0e 94 36 01 	call	0x26c	; 0x26c <_ZN3PID7ComputeEv>
		r = pid.Output();
 576:	80 e0       	ldi	r24, 0x00	; 0
 578:	91 e0       	ldi	r25, 0x01	; 1
 57a:	0e 94 e5 01 	call	0x3ca	; 0x3ca <_ZN3PID6OutputEv>
 57e:	6a ab       	std	Y+50, r22	; 0x32
 580:	7b ab       	std	Y+51, r23	; 0x33
 582:	8c ab       	std	Y+52, r24	; 0x34
 584:	9d ab       	std	Y+53, r25	; 0x35
	float da = (float)(b) - (float)(a);
	float dc = (float)(d) - (float)(c);
	float dd = dc / da;
	float units = (float)(x - a);
	float result = (units * dd) + (float)c;
	return (int32_t)(result);
 586:	20 e0       	ldi	r18, 0x00	; 0
 588:	30 e4       	ldi	r19, 0x40	; 64
 58a:	4c e9       	ldi	r20, 0x9C	; 156
 58c:	56 e4       	ldi	r21, 0x46	; 70
 58e:	0e 94 5d 03 	call	0x6ba	; 0x6ba <__addsf3>
 592:	20 e0       	ldi	r18, 0x00	; 0
 594:	30 e0       	ldi	r19, 0x00	; 0
 596:	40 e6       	ldi	r20, 0x60	; 96
 598:	50 e4       	ldi	r21, 0x40	; 64
 59a:	0e 94 ff 04 	call	0x9fe	; 0x9fe <__mulsf3>
 59e:	20 e0       	ldi	r18, 0x00	; 0
 5a0:	38 eb       	ldi	r19, 0xB8	; 184
 5a2:	48 e8       	ldi	r20, 0x88	; 136
 5a4:	57 e4       	ldi	r21, 0x47	; 71
 5a6:	0e 94 5c 03 	call	0x6b8	; 0x6b8 <__subsf3>
 5aa:	0e 94 3b 04 	call	0x876	; 0x876 <__fixsfsi>
 5ae:	6b 01       	movw	r12, r22
 5b0:	7c 01       	movw	r14, r24
		pid.Compute();
		r = pid.Output();
		
		int32_t time = mmap(r, -20000, 20000, -drv_time, drv_time);
		
		if( time >= drv_time ){
 5b2:	80 e7       	ldi	r24, 0x70	; 112
 5b4:	c8 16       	cp	r12, r24
 5b6:	81 e1       	ldi	r24, 0x11	; 17
 5b8:	d8 06       	cpc	r13, r24
 5ba:	81 e0       	ldi	r24, 0x01	; 1
 5bc:	e8 06       	cpc	r14, r24
 5be:	f1 04       	cpc	r15, r1
 5c0:	74 f4       	brge	.+28     	; 0x5de <main+0x170>
			time = drv_time;
		};
		
		if( time <= -drv_time ){
 5c2:	21 e9       	ldi	r18, 0x91	; 145
 5c4:	c2 16       	cp	r12, r18
 5c6:	2e ee       	ldi	r18, 0xEE	; 238
 5c8:	d2 06       	cpc	r13, r18
 5ca:	2e ef       	ldi	r18, 0xFE	; 254
 5cc:	e2 06       	cpc	r14, r18
 5ce:	2f ef       	ldi	r18, 0xFF	; 255
 5d0:	f2 06       	cpc	r15, r18
 5d2:	3c f4       	brge	.+14     	; 0x5e2 <main+0x174>
			time = -drv_time;
 5d4:	ca 2c       	mov	r12, r10
 5d6:	d9 2c       	mov	r13, r9
 5d8:	e8 2c       	mov	r14, r8
 5da:	f3 2c       	mov	r15, r3
 5dc:	02 c0       	rjmp	.+4      	; 0x5e2 <main+0x174>
		r = pid.Output();
		
		int32_t time = mmap(r, -20000, 20000, -drv_time, drv_time);
		
		if( time >= drv_time ){
			time = drv_time;
 5de:	73 01       	movw	r14, r6
 5e0:	62 01       	movw	r12, r4
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
 5e2:	6a a9       	ldd	r22, Y+50	; 0x32
 5e4:	7b a9       	ldd	r23, Y+51	; 0x33
 5e6:	8c a9       	ldd	r24, Y+52	; 0x34
 5e8:	9d a9       	ldd	r25, Y+53	; 0x35
 5ea:	0e 94 3b 04 	call	0x876	; 0x876 <__fixsfsi>
 5ee:	dc 01       	movw	r26, r24
 5f0:	cb 01       	movw	r24, r22
 5f2:	4a e0       	ldi	r20, 0x0A	; 10
 5f4:	be 01       	movw	r22, r28
 5f6:	6e 5f       	subi	r22, 0xFE	; 254
 5f8:	7f 4f       	sbci	r23, 0xFF	; 255
 5fa:	0e 94 72 05 	call	0xae4	; 0xae4 <__itoa_ncheck>
		if( time <= -drv_time ){
			time = -drv_time;
		};
		
		itoa(r, str1, 10);
		cstr(str1);
 5fe:	ce 01       	movw	r24, r28
 600:	02 96       	adiw	r24, 0x02	; 2
 602:	0e 94 23 02 	call	0x446	; 0x446 <_Z4cstrPc>
		
		lcd.GoToFirstLine();
 606:	ce 01       	movw	r24, r28
 608:	01 96       	adiw	r24, 0x01	; 1
 60a:	0e 94 2e 01 	call	0x25c	; 0x25c <_ZN3LCD13GoToFirstLineEv>
		lcd.WriteString(str1);
 60e:	be 01       	movw	r22, r28
 610:	6e 5f       	subi	r22, 0xFE	; 254
 612:	7f 4f       	sbci	r23, 0xFF	; 255
 614:	ce 01       	movw	r24, r28
 616:	01 96       	adiw	r24, 0x01	; 1
 618:	0e 94 ee 00 	call	0x1dc	; 0x1dc <_ZN3LCD11WriteStringEPc>
 61c:	4a e0       	ldi	r20, 0x0A	; 10
 61e:	be 01       	movw	r22, r28
 620:	6a 5e       	subi	r22, 0xEA	; 234
 622:	7f 4f       	sbci	r23, 0xFF	; 255
 624:	c8 01       	movw	r24, r16
 626:	0e 94 72 05 	call	0xae4	; 0xae4 <__itoa_ncheck>
		
		itoa((uint16_t)(tavg), str2, 10);
		cstr(str2);
 62a:	ce 01       	movw	r24, r28
 62c:	46 96       	adiw	r24, 0x16	; 22
 62e:	0e 94 23 02 	call	0x446	; 0x446 <_Z4cstrPc>
		
		lcd.GoToSecondLine();
 632:	ce 01       	movw	r24, r28
 634:	01 96       	adiw	r24, 0x01	; 1
 636:	0e 94 32 01 	call	0x264	; 0x264 <_ZN3LCD14GoToSecondLineEv>
		lcd.WriteString(str2);
 63a:	be 01       	movw	r22, r28
 63c:	6a 5e       	subi	r22, 0xEA	; 234
 63e:	7f 4f       	sbci	r23, 0xFF	; 255
 640:	ce 01       	movw	r24, r28
 642:	01 96       	adiw	r24, 0x01	; 1
 644:	0e 94 ee 00 	call	0x1dc	; 0x1dc <_ZN3LCD11WriteStringEPc>
		
		CLR_T0;
 648:	3a 9a       	sbi	0x07, 2	; 7
 64a:	42 98       	cbi	0x08, 2	; 8
		delay(drv_time-time);
 64c:	c3 01       	movw	r24, r6
 64e:	b2 01       	movw	r22, r4
 650:	6c 19       	sub	r22, r12
 652:	7d 09       	sbc	r23, r13
 654:	8e 09       	sbc	r24, r14
 656:	9f 09       	sbc	r25, r15
 658:	0e 94 eb 01 	call	0x3d6	; 0x3d6 <_Z5delaym>
		SET_T0;
 65c:	3a 9a       	sbi	0x07, 2	; 7
 65e:	42 9a       	sbi	0x08, 2	; 8
		delay(drv_time+time);
 660:	c7 01       	movw	r24, r14
 662:	b6 01       	movw	r22, r12
 664:	60 59       	subi	r22, 0x90	; 144
 666:	7e 4e       	sbci	r23, 0xEE	; 238
 668:	8e 4f       	sbci	r24, 0xFE	; 254
 66a:	9f 4f       	sbci	r25, 0xFF	; 255
 66c:	0e 94 eb 01 	call	0x3d6	; 0x3d6 <_Z5delaym>

	pid.SetSetpoint(work_point);
	
	int32_t drv_time = 70000;
	
	while (1)
 670:	45 cf       	rjmp	.-374    	; 0x4fc <main+0x8e>

00000672 <_GLOBAL__sub_I_pid>:
	float measure;
public:

	float setpoint;
	PID(float _kt, float _kp, float _ki, float _kd, float _val)
	:kt(_kt), kp(_kp), ki(_ki), kd(_kd), setpoint(_val) {};
 672:	e0 e0       	ldi	r30, 0x00	; 0
 674:	f1 e0       	ldi	r31, 0x01	; 1
 676:	87 e3       	ldi	r24, 0x37	; 55
 678:	99 e8       	ldi	r25, 0x89	; 137
 67a:	a1 e8       	ldi	r26, 0x81	; 129
 67c:	be e3       	ldi	r27, 0x3E	; 62
 67e:	84 8b       	std	Z+20, r24	; 0x14
 680:	95 8b       	std	Z+21, r25	; 0x15
 682:	a6 8b       	std	Z+22, r26	; 0x16
 684:	b7 8b       	std	Z+23, r27	; 0x17
 686:	80 e0       	ldi	r24, 0x00	; 0
 688:	90 e8       	ldi	r25, 0x80	; 128
 68a:	a2 e2       	ldi	r26, 0x22	; 34
 68c:	b4 e4       	ldi	r27, 0x44	; 68
 68e:	80 8f       	std	Z+24, r24	; 0x18
 690:	91 8f       	std	Z+25, r25	; 0x19
 692:	a2 8f       	std	Z+26, r26	; 0x1a
 694:	b3 8f       	std	Z+27, r27	; 0x1b
 696:	40 e0       	ldi	r20, 0x00	; 0
 698:	50 e0       	ldi	r21, 0x00	; 0
 69a:	68 e4       	ldi	r22, 0x48	; 72
 69c:	73 e4       	ldi	r23, 0x43	; 67
 69e:	44 8f       	std	Z+28, r20	; 0x1c
 6a0:	55 8f       	std	Z+29, r21	; 0x1d
 6a2:	66 8f       	std	Z+30, r22	; 0x1e
 6a4:	77 8f       	std	Z+31, r23	; 0x1f
 6a6:	10 a2       	std	Z+32, r1	; 0x20
 6a8:	11 a2       	std	Z+33, r1	; 0x21
 6aa:	12 a2       	std	Z+34, r1	; 0x22
 6ac:	13 a2       	std	Z+35, r1	; 0x23
 6ae:	80 a7       	std	Z+40, r24	; 0x28
 6b0:	91 a7       	std	Z+41, r25	; 0x29
 6b2:	a2 a7       	std	Z+42, r26	; 0x2a
 6b4:	b3 a7       	std	Z+43, r27	; 0x2b
 6b6:	08 95       	ret

000006b8 <__subsf3>:
 6b8:	50 58       	subi	r21, 0x80	; 128

000006ba <__addsf3>:
 6ba:	bb 27       	eor	r27, r27
 6bc:	aa 27       	eor	r26, r26
 6be:	0e 94 74 03 	call	0x6e8	; 0x6e8 <__addsf3x>
 6c2:	0c 94 c5 04 	jmp	0x98a	; 0x98a <__fp_round>
 6c6:	0e 94 b7 04 	call	0x96e	; 0x96e <__fp_pscA>
 6ca:	38 f0       	brcs	.+14     	; 0x6da <__addsf3+0x20>
 6cc:	0e 94 be 04 	call	0x97c	; 0x97c <__fp_pscB>
 6d0:	20 f0       	brcs	.+8      	; 0x6da <__addsf3+0x20>
 6d2:	39 f4       	brne	.+14     	; 0x6e2 <__addsf3+0x28>
 6d4:	9f 3f       	cpi	r25, 0xFF	; 255
 6d6:	19 f4       	brne	.+6      	; 0x6de <__addsf3+0x24>
 6d8:	26 f4       	brtc	.+8      	; 0x6e2 <__addsf3+0x28>
 6da:	0c 94 b4 04 	jmp	0x968	; 0x968 <__fp_nan>
 6de:	0e f4       	brtc	.+2      	; 0x6e2 <__addsf3+0x28>
 6e0:	e0 95       	com	r30
 6e2:	e7 fb       	bst	r30, 7
 6e4:	0c 94 ae 04 	jmp	0x95c	; 0x95c <__fp_inf>

000006e8 <__addsf3x>:
 6e8:	e9 2f       	mov	r30, r25
 6ea:	0e 94 d6 04 	call	0x9ac	; 0x9ac <__fp_split3>
 6ee:	58 f3       	brcs	.-42     	; 0x6c6 <__addsf3+0xc>
 6f0:	ba 17       	cp	r27, r26
 6f2:	62 07       	cpc	r22, r18
 6f4:	73 07       	cpc	r23, r19
 6f6:	84 07       	cpc	r24, r20
 6f8:	95 07       	cpc	r25, r21
 6fa:	20 f0       	brcs	.+8      	; 0x704 <__addsf3x+0x1c>
 6fc:	79 f4       	brne	.+30     	; 0x71c <__addsf3x+0x34>
 6fe:	a6 f5       	brtc	.+104    	; 0x768 <__addsf3x+0x80>
 700:	0c 94 f8 04 	jmp	0x9f0	; 0x9f0 <__fp_zero>
 704:	0e f4       	brtc	.+2      	; 0x708 <__addsf3x+0x20>
 706:	e0 95       	com	r30
 708:	0b 2e       	mov	r0, r27
 70a:	ba 2f       	mov	r27, r26
 70c:	a0 2d       	mov	r26, r0
 70e:	0b 01       	movw	r0, r22
 710:	b9 01       	movw	r22, r18
 712:	90 01       	movw	r18, r0
 714:	0c 01       	movw	r0, r24
 716:	ca 01       	movw	r24, r20
 718:	a0 01       	movw	r20, r0
 71a:	11 24       	eor	r1, r1
 71c:	ff 27       	eor	r31, r31
 71e:	59 1b       	sub	r21, r25
 720:	99 f0       	breq	.+38     	; 0x748 <__addsf3x+0x60>
 722:	59 3f       	cpi	r21, 0xF9	; 249
 724:	50 f4       	brcc	.+20     	; 0x73a <__addsf3x+0x52>
 726:	50 3e       	cpi	r21, 0xE0	; 224
 728:	68 f1       	brcs	.+90     	; 0x784 <__addsf3x+0x9c>
 72a:	1a 16       	cp	r1, r26
 72c:	f0 40       	sbci	r31, 0x00	; 0
 72e:	a2 2f       	mov	r26, r18
 730:	23 2f       	mov	r18, r19
 732:	34 2f       	mov	r19, r20
 734:	44 27       	eor	r20, r20
 736:	58 5f       	subi	r21, 0xF8	; 248
 738:	f3 cf       	rjmp	.-26     	; 0x720 <__addsf3x+0x38>
 73a:	46 95       	lsr	r20
 73c:	37 95       	ror	r19
 73e:	27 95       	ror	r18
 740:	a7 95       	ror	r26
 742:	f0 40       	sbci	r31, 0x00	; 0
 744:	53 95       	inc	r21
 746:	c9 f7       	brne	.-14     	; 0x73a <__addsf3x+0x52>
 748:	7e f4       	brtc	.+30     	; 0x768 <__addsf3x+0x80>
 74a:	1f 16       	cp	r1, r31
 74c:	ba 0b       	sbc	r27, r26
 74e:	62 0b       	sbc	r22, r18
 750:	73 0b       	sbc	r23, r19
 752:	84 0b       	sbc	r24, r20
 754:	ba f0       	brmi	.+46     	; 0x784 <__addsf3x+0x9c>
 756:	91 50       	subi	r25, 0x01	; 1
 758:	a1 f0       	breq	.+40     	; 0x782 <__addsf3x+0x9a>
 75a:	ff 0f       	add	r31, r31
 75c:	bb 1f       	adc	r27, r27
 75e:	66 1f       	adc	r22, r22
 760:	77 1f       	adc	r23, r23
 762:	88 1f       	adc	r24, r24
 764:	c2 f7       	brpl	.-16     	; 0x756 <__addsf3x+0x6e>
 766:	0e c0       	rjmp	.+28     	; 0x784 <__addsf3x+0x9c>
 768:	ba 0f       	add	r27, r26
 76a:	62 1f       	adc	r22, r18
 76c:	73 1f       	adc	r23, r19
 76e:	84 1f       	adc	r24, r20
 770:	48 f4       	brcc	.+18     	; 0x784 <__addsf3x+0x9c>
 772:	87 95       	ror	r24
 774:	77 95       	ror	r23
 776:	67 95       	ror	r22
 778:	b7 95       	ror	r27
 77a:	f7 95       	ror	r31
 77c:	9e 3f       	cpi	r25, 0xFE	; 254
 77e:	08 f0       	brcs	.+2      	; 0x782 <__addsf3x+0x9a>
 780:	b0 cf       	rjmp	.-160    	; 0x6e2 <__addsf3+0x28>
 782:	93 95       	inc	r25
 784:	88 0f       	add	r24, r24
 786:	08 f0       	brcs	.+2      	; 0x78a <__addsf3x+0xa2>
 788:	99 27       	eor	r25, r25
 78a:	ee 0f       	add	r30, r30
 78c:	97 95       	ror	r25
 78e:	87 95       	ror	r24
 790:	08 95       	ret

00000792 <__divsf3>:
 792:	0e 94 dd 03 	call	0x7ba	; 0x7ba <__divsf3x>
 796:	0c 94 c5 04 	jmp	0x98a	; 0x98a <__fp_round>
 79a:	0e 94 be 04 	call	0x97c	; 0x97c <__fp_pscB>
 79e:	58 f0       	brcs	.+22     	; 0x7b6 <__divsf3+0x24>
 7a0:	0e 94 b7 04 	call	0x96e	; 0x96e <__fp_pscA>
 7a4:	40 f0       	brcs	.+16     	; 0x7b6 <__divsf3+0x24>
 7a6:	29 f4       	brne	.+10     	; 0x7b2 <__divsf3+0x20>
 7a8:	5f 3f       	cpi	r21, 0xFF	; 255
 7aa:	29 f0       	breq	.+10     	; 0x7b6 <__divsf3+0x24>
 7ac:	0c 94 ae 04 	jmp	0x95c	; 0x95c <__fp_inf>
 7b0:	51 11       	cpse	r21, r1
 7b2:	0c 94 f9 04 	jmp	0x9f2	; 0x9f2 <__fp_szero>
 7b6:	0c 94 b4 04 	jmp	0x968	; 0x968 <__fp_nan>

000007ba <__divsf3x>:
 7ba:	0e 94 d6 04 	call	0x9ac	; 0x9ac <__fp_split3>
 7be:	68 f3       	brcs	.-38     	; 0x79a <__divsf3+0x8>

000007c0 <__divsf3_pse>:
 7c0:	99 23       	and	r25, r25
 7c2:	b1 f3       	breq	.-20     	; 0x7b0 <__divsf3+0x1e>
 7c4:	55 23       	and	r21, r21
 7c6:	91 f3       	breq	.-28     	; 0x7ac <__divsf3+0x1a>
 7c8:	95 1b       	sub	r25, r21
 7ca:	55 0b       	sbc	r21, r21
 7cc:	bb 27       	eor	r27, r27
 7ce:	aa 27       	eor	r26, r26
 7d0:	62 17       	cp	r22, r18
 7d2:	73 07       	cpc	r23, r19
 7d4:	84 07       	cpc	r24, r20
 7d6:	38 f0       	brcs	.+14     	; 0x7e6 <__divsf3_pse+0x26>
 7d8:	9f 5f       	subi	r25, 0xFF	; 255
 7da:	5f 4f       	sbci	r21, 0xFF	; 255
 7dc:	22 0f       	add	r18, r18
 7de:	33 1f       	adc	r19, r19
 7e0:	44 1f       	adc	r20, r20
 7e2:	aa 1f       	adc	r26, r26
 7e4:	a9 f3       	breq	.-22     	; 0x7d0 <__divsf3_pse+0x10>
 7e6:	35 d0       	rcall	.+106    	; 0x852 <__divsf3_pse+0x92>
 7e8:	0e 2e       	mov	r0, r30
 7ea:	3a f0       	brmi	.+14     	; 0x7fa <__divsf3_pse+0x3a>
 7ec:	e0 e8       	ldi	r30, 0x80	; 128
 7ee:	32 d0       	rcall	.+100    	; 0x854 <__divsf3_pse+0x94>
 7f0:	91 50       	subi	r25, 0x01	; 1
 7f2:	50 40       	sbci	r21, 0x00	; 0
 7f4:	e6 95       	lsr	r30
 7f6:	00 1c       	adc	r0, r0
 7f8:	ca f7       	brpl	.-14     	; 0x7ec <__divsf3_pse+0x2c>
 7fa:	2b d0       	rcall	.+86     	; 0x852 <__divsf3_pse+0x92>
 7fc:	fe 2f       	mov	r31, r30
 7fe:	29 d0       	rcall	.+82     	; 0x852 <__divsf3_pse+0x92>
 800:	66 0f       	add	r22, r22
 802:	77 1f       	adc	r23, r23
 804:	88 1f       	adc	r24, r24
 806:	bb 1f       	adc	r27, r27
 808:	26 17       	cp	r18, r22
 80a:	37 07       	cpc	r19, r23
 80c:	48 07       	cpc	r20, r24
 80e:	ab 07       	cpc	r26, r27
 810:	b0 e8       	ldi	r27, 0x80	; 128
 812:	09 f0       	breq	.+2      	; 0x816 <__divsf3_pse+0x56>
 814:	bb 0b       	sbc	r27, r27
 816:	80 2d       	mov	r24, r0
 818:	bf 01       	movw	r22, r30
 81a:	ff 27       	eor	r31, r31
 81c:	93 58       	subi	r25, 0x83	; 131
 81e:	5f 4f       	sbci	r21, 0xFF	; 255
 820:	3a f0       	brmi	.+14     	; 0x830 <__divsf3_pse+0x70>
 822:	9e 3f       	cpi	r25, 0xFE	; 254
 824:	51 05       	cpc	r21, r1
 826:	78 f0       	brcs	.+30     	; 0x846 <__divsf3_pse+0x86>
 828:	0c 94 ae 04 	jmp	0x95c	; 0x95c <__fp_inf>
 82c:	0c 94 f9 04 	jmp	0x9f2	; 0x9f2 <__fp_szero>
 830:	5f 3f       	cpi	r21, 0xFF	; 255
 832:	e4 f3       	brlt	.-8      	; 0x82c <__divsf3_pse+0x6c>
 834:	98 3e       	cpi	r25, 0xE8	; 232
 836:	d4 f3       	brlt	.-12     	; 0x82c <__divsf3_pse+0x6c>
 838:	86 95       	lsr	r24
 83a:	77 95       	ror	r23
 83c:	67 95       	ror	r22
 83e:	b7 95       	ror	r27
 840:	f7 95       	ror	r31
 842:	9f 5f       	subi	r25, 0xFF	; 255
 844:	c9 f7       	brne	.-14     	; 0x838 <__divsf3_pse+0x78>
 846:	88 0f       	add	r24, r24
 848:	91 1d       	adc	r25, r1
 84a:	96 95       	lsr	r25
 84c:	87 95       	ror	r24
 84e:	97 f9       	bld	r25, 7
 850:	08 95       	ret
 852:	e1 e0       	ldi	r30, 0x01	; 1
 854:	66 0f       	add	r22, r22
 856:	77 1f       	adc	r23, r23
 858:	88 1f       	adc	r24, r24
 85a:	bb 1f       	adc	r27, r27
 85c:	62 17       	cp	r22, r18
 85e:	73 07       	cpc	r23, r19
 860:	84 07       	cpc	r24, r20
 862:	ba 07       	cpc	r27, r26
 864:	20 f0       	brcs	.+8      	; 0x86e <__divsf3_pse+0xae>
 866:	62 1b       	sub	r22, r18
 868:	73 0b       	sbc	r23, r19
 86a:	84 0b       	sbc	r24, r20
 86c:	ba 0b       	sbc	r27, r26
 86e:	ee 1f       	adc	r30, r30
 870:	88 f7       	brcc	.-30     	; 0x854 <__divsf3_pse+0x94>
 872:	e0 95       	com	r30
 874:	08 95       	ret

00000876 <__fixsfsi>:
 876:	0e 94 42 04 	call	0x884	; 0x884 <__fixunssfsi>
 87a:	68 94       	set
 87c:	b1 11       	cpse	r27, r1
 87e:	0c 94 f9 04 	jmp	0x9f2	; 0x9f2 <__fp_szero>
 882:	08 95       	ret

00000884 <__fixunssfsi>:
 884:	0e 94 de 04 	call	0x9bc	; 0x9bc <__fp_splitA>
 888:	88 f0       	brcs	.+34     	; 0x8ac <__fixunssfsi+0x28>
 88a:	9f 57       	subi	r25, 0x7F	; 127
 88c:	98 f0       	brcs	.+38     	; 0x8b4 <__fixunssfsi+0x30>
 88e:	b9 2f       	mov	r27, r25
 890:	99 27       	eor	r25, r25
 892:	b7 51       	subi	r27, 0x17	; 23
 894:	b0 f0       	brcs	.+44     	; 0x8c2 <__fixunssfsi+0x3e>
 896:	e1 f0       	breq	.+56     	; 0x8d0 <__fixunssfsi+0x4c>
 898:	66 0f       	add	r22, r22
 89a:	77 1f       	adc	r23, r23
 89c:	88 1f       	adc	r24, r24
 89e:	99 1f       	adc	r25, r25
 8a0:	1a f0       	brmi	.+6      	; 0x8a8 <__fixunssfsi+0x24>
 8a2:	ba 95       	dec	r27
 8a4:	c9 f7       	brne	.-14     	; 0x898 <__fixunssfsi+0x14>
 8a6:	14 c0       	rjmp	.+40     	; 0x8d0 <__fixunssfsi+0x4c>
 8a8:	b1 30       	cpi	r27, 0x01	; 1
 8aa:	91 f0       	breq	.+36     	; 0x8d0 <__fixunssfsi+0x4c>
 8ac:	0e 94 f8 04 	call	0x9f0	; 0x9f0 <__fp_zero>
 8b0:	b1 e0       	ldi	r27, 0x01	; 1
 8b2:	08 95       	ret
 8b4:	0c 94 f8 04 	jmp	0x9f0	; 0x9f0 <__fp_zero>
 8b8:	67 2f       	mov	r22, r23
 8ba:	78 2f       	mov	r23, r24
 8bc:	88 27       	eor	r24, r24
 8be:	b8 5f       	subi	r27, 0xF8	; 248
 8c0:	39 f0       	breq	.+14     	; 0x8d0 <__fixunssfsi+0x4c>
 8c2:	b9 3f       	cpi	r27, 0xF9	; 249
 8c4:	cc f3       	brlt	.-14     	; 0x8b8 <__fixunssfsi+0x34>
 8c6:	86 95       	lsr	r24
 8c8:	77 95       	ror	r23
 8ca:	67 95       	ror	r22
 8cc:	b3 95       	inc	r27
 8ce:	d9 f7       	brne	.-10     	; 0x8c6 <__fixunssfsi+0x42>
 8d0:	3e f4       	brtc	.+14     	; 0x8e0 <__fixunssfsi+0x5c>
 8d2:	90 95       	com	r25
 8d4:	80 95       	com	r24
 8d6:	70 95       	com	r23
 8d8:	61 95       	neg	r22
 8da:	7f 4f       	sbci	r23, 0xFF	; 255
 8dc:	8f 4f       	sbci	r24, 0xFF	; 255
 8de:	9f 4f       	sbci	r25, 0xFF	; 255
 8e0:	08 95       	ret

000008e2 <__floatunsisf>:
 8e2:	e8 94       	clt
 8e4:	09 c0       	rjmp	.+18     	; 0x8f8 <__floatsisf+0x12>

000008e6 <__floatsisf>:
 8e6:	97 fb       	bst	r25, 7
 8e8:	3e f4       	brtc	.+14     	; 0x8f8 <__floatsisf+0x12>
 8ea:	90 95       	com	r25
 8ec:	80 95       	com	r24
 8ee:	70 95       	com	r23
 8f0:	61 95       	neg	r22
 8f2:	7f 4f       	sbci	r23, 0xFF	; 255
 8f4:	8f 4f       	sbci	r24, 0xFF	; 255
 8f6:	9f 4f       	sbci	r25, 0xFF	; 255
 8f8:	99 23       	and	r25, r25
 8fa:	a9 f0       	breq	.+42     	; 0x926 <__stack+0x27>
 8fc:	f9 2f       	mov	r31, r25
 8fe:	96 e9       	ldi	r25, 0x96	; 150
 900:	bb 27       	eor	r27, r27
 902:	93 95       	inc	r25
 904:	f6 95       	lsr	r31
 906:	87 95       	ror	r24
 908:	77 95       	ror	r23
 90a:	67 95       	ror	r22
 90c:	b7 95       	ror	r27
 90e:	f1 11       	cpse	r31, r1
 910:	f8 cf       	rjmp	.-16     	; 0x902 <__stack+0x3>
 912:	fa f4       	brpl	.+62     	; 0x952 <__stack+0x53>
 914:	bb 0f       	add	r27, r27
 916:	11 f4       	brne	.+4      	; 0x91c <__stack+0x1d>
 918:	60 ff       	sbrs	r22, 0
 91a:	1b c0       	rjmp	.+54     	; 0x952 <__stack+0x53>
 91c:	6f 5f       	subi	r22, 0xFF	; 255
 91e:	7f 4f       	sbci	r23, 0xFF	; 255
 920:	8f 4f       	sbci	r24, 0xFF	; 255
 922:	9f 4f       	sbci	r25, 0xFF	; 255
 924:	16 c0       	rjmp	.+44     	; 0x952 <__stack+0x53>
 926:	88 23       	and	r24, r24
 928:	11 f0       	breq	.+4      	; 0x92e <__stack+0x2f>
 92a:	96 e9       	ldi	r25, 0x96	; 150
 92c:	11 c0       	rjmp	.+34     	; 0x950 <__stack+0x51>
 92e:	77 23       	and	r23, r23
 930:	21 f0       	breq	.+8      	; 0x93a <__stack+0x3b>
 932:	9e e8       	ldi	r25, 0x8E	; 142
 934:	87 2f       	mov	r24, r23
 936:	76 2f       	mov	r23, r22
 938:	05 c0       	rjmp	.+10     	; 0x944 <__stack+0x45>
 93a:	66 23       	and	r22, r22
 93c:	71 f0       	breq	.+28     	; 0x95a <__stack+0x5b>
 93e:	96 e8       	ldi	r25, 0x86	; 134
 940:	86 2f       	mov	r24, r22
 942:	70 e0       	ldi	r23, 0x00	; 0
 944:	60 e0       	ldi	r22, 0x00	; 0
 946:	2a f0       	brmi	.+10     	; 0x952 <__stack+0x53>
 948:	9a 95       	dec	r25
 94a:	66 0f       	add	r22, r22
 94c:	77 1f       	adc	r23, r23
 94e:	88 1f       	adc	r24, r24
 950:	da f7       	brpl	.-10     	; 0x948 <__stack+0x49>
 952:	88 0f       	add	r24, r24
 954:	96 95       	lsr	r25
 956:	87 95       	ror	r24
 958:	97 f9       	bld	r25, 7
 95a:	08 95       	ret

0000095c <__fp_inf>:
 95c:	97 f9       	bld	r25, 7
 95e:	9f 67       	ori	r25, 0x7F	; 127
 960:	80 e8       	ldi	r24, 0x80	; 128
 962:	70 e0       	ldi	r23, 0x00	; 0
 964:	60 e0       	ldi	r22, 0x00	; 0
 966:	08 95       	ret

00000968 <__fp_nan>:
 968:	9f ef       	ldi	r25, 0xFF	; 255
 96a:	80 ec       	ldi	r24, 0xC0	; 192
 96c:	08 95       	ret

0000096e <__fp_pscA>:
 96e:	00 24       	eor	r0, r0
 970:	0a 94       	dec	r0
 972:	16 16       	cp	r1, r22
 974:	17 06       	cpc	r1, r23
 976:	18 06       	cpc	r1, r24
 978:	09 06       	cpc	r0, r25
 97a:	08 95       	ret

0000097c <__fp_pscB>:
 97c:	00 24       	eor	r0, r0
 97e:	0a 94       	dec	r0
 980:	12 16       	cp	r1, r18
 982:	13 06       	cpc	r1, r19
 984:	14 06       	cpc	r1, r20
 986:	05 06       	cpc	r0, r21
 988:	08 95       	ret

0000098a <__fp_round>:
 98a:	09 2e       	mov	r0, r25
 98c:	03 94       	inc	r0
 98e:	00 0c       	add	r0, r0
 990:	11 f4       	brne	.+4      	; 0x996 <__fp_round+0xc>
 992:	88 23       	and	r24, r24
 994:	52 f0       	brmi	.+20     	; 0x9aa <__fp_round+0x20>
 996:	bb 0f       	add	r27, r27
 998:	40 f4       	brcc	.+16     	; 0x9aa <__fp_round+0x20>
 99a:	bf 2b       	or	r27, r31
 99c:	11 f4       	brne	.+4      	; 0x9a2 <__fp_round+0x18>
 99e:	60 ff       	sbrs	r22, 0
 9a0:	04 c0       	rjmp	.+8      	; 0x9aa <__fp_round+0x20>
 9a2:	6f 5f       	subi	r22, 0xFF	; 255
 9a4:	7f 4f       	sbci	r23, 0xFF	; 255
 9a6:	8f 4f       	sbci	r24, 0xFF	; 255
 9a8:	9f 4f       	sbci	r25, 0xFF	; 255
 9aa:	08 95       	ret

000009ac <__fp_split3>:
 9ac:	57 fd       	sbrc	r21, 7
 9ae:	90 58       	subi	r25, 0x80	; 128
 9b0:	44 0f       	add	r20, r20
 9b2:	55 1f       	adc	r21, r21
 9b4:	59 f0       	breq	.+22     	; 0x9cc <__fp_splitA+0x10>
 9b6:	5f 3f       	cpi	r21, 0xFF	; 255
 9b8:	71 f0       	breq	.+28     	; 0x9d6 <__fp_splitA+0x1a>
 9ba:	47 95       	ror	r20

000009bc <__fp_splitA>:
 9bc:	88 0f       	add	r24, r24
 9be:	97 fb       	bst	r25, 7
 9c0:	99 1f       	adc	r25, r25
 9c2:	61 f0       	breq	.+24     	; 0x9dc <__fp_splitA+0x20>
 9c4:	9f 3f       	cpi	r25, 0xFF	; 255
 9c6:	79 f0       	breq	.+30     	; 0x9e6 <__fp_splitA+0x2a>
 9c8:	87 95       	ror	r24
 9ca:	08 95       	ret
 9cc:	12 16       	cp	r1, r18
 9ce:	13 06       	cpc	r1, r19
 9d0:	14 06       	cpc	r1, r20
 9d2:	55 1f       	adc	r21, r21
 9d4:	f2 cf       	rjmp	.-28     	; 0x9ba <__fp_split3+0xe>
 9d6:	46 95       	lsr	r20
 9d8:	f1 df       	rcall	.-30     	; 0x9bc <__fp_splitA>
 9da:	08 c0       	rjmp	.+16     	; 0x9ec <__fp_splitA+0x30>
 9dc:	16 16       	cp	r1, r22
 9de:	17 06       	cpc	r1, r23
 9e0:	18 06       	cpc	r1, r24
 9e2:	99 1f       	adc	r25, r25
 9e4:	f1 cf       	rjmp	.-30     	; 0x9c8 <__fp_splitA+0xc>
 9e6:	86 95       	lsr	r24
 9e8:	71 05       	cpc	r23, r1
 9ea:	61 05       	cpc	r22, r1
 9ec:	08 94       	sec
 9ee:	08 95       	ret

000009f0 <__fp_zero>:
 9f0:	e8 94       	clt

000009f2 <__fp_szero>:
 9f2:	bb 27       	eor	r27, r27
 9f4:	66 27       	eor	r22, r22
 9f6:	77 27       	eor	r23, r23
 9f8:	cb 01       	movw	r24, r22
 9fa:	97 f9       	bld	r25, 7
 9fc:	08 95       	ret

000009fe <__mulsf3>:
 9fe:	0e 94 12 05 	call	0xa24	; 0xa24 <__mulsf3x>
 a02:	0c 94 c5 04 	jmp	0x98a	; 0x98a <__fp_round>
 a06:	0e 94 b7 04 	call	0x96e	; 0x96e <__fp_pscA>
 a0a:	38 f0       	brcs	.+14     	; 0xa1a <__mulsf3+0x1c>
 a0c:	0e 94 be 04 	call	0x97c	; 0x97c <__fp_pscB>
 a10:	20 f0       	brcs	.+8      	; 0xa1a <__mulsf3+0x1c>
 a12:	95 23       	and	r25, r21
 a14:	11 f0       	breq	.+4      	; 0xa1a <__mulsf3+0x1c>
 a16:	0c 94 ae 04 	jmp	0x95c	; 0x95c <__fp_inf>
 a1a:	0c 94 b4 04 	jmp	0x968	; 0x968 <__fp_nan>
 a1e:	11 24       	eor	r1, r1
 a20:	0c 94 f9 04 	jmp	0x9f2	; 0x9f2 <__fp_szero>

00000a24 <__mulsf3x>:
 a24:	0e 94 d6 04 	call	0x9ac	; 0x9ac <__fp_split3>
 a28:	70 f3       	brcs	.-36     	; 0xa06 <__mulsf3+0x8>

00000a2a <__mulsf3_pse>:
 a2a:	95 9f       	mul	r25, r21
 a2c:	c1 f3       	breq	.-16     	; 0xa1e <__mulsf3+0x20>
 a2e:	95 0f       	add	r25, r21
 a30:	50 e0       	ldi	r21, 0x00	; 0
 a32:	55 1f       	adc	r21, r21
 a34:	62 9f       	mul	r22, r18
 a36:	f0 01       	movw	r30, r0
 a38:	72 9f       	mul	r23, r18
 a3a:	bb 27       	eor	r27, r27
 a3c:	f0 0d       	add	r31, r0
 a3e:	b1 1d       	adc	r27, r1
 a40:	63 9f       	mul	r22, r19
 a42:	aa 27       	eor	r26, r26
 a44:	f0 0d       	add	r31, r0
 a46:	b1 1d       	adc	r27, r1
 a48:	aa 1f       	adc	r26, r26
 a4a:	64 9f       	mul	r22, r20
 a4c:	66 27       	eor	r22, r22
 a4e:	b0 0d       	add	r27, r0
 a50:	a1 1d       	adc	r26, r1
 a52:	66 1f       	adc	r22, r22
 a54:	82 9f       	mul	r24, r18
 a56:	22 27       	eor	r18, r18
 a58:	b0 0d       	add	r27, r0
 a5a:	a1 1d       	adc	r26, r1
 a5c:	62 1f       	adc	r22, r18
 a5e:	73 9f       	mul	r23, r19
 a60:	b0 0d       	add	r27, r0
 a62:	a1 1d       	adc	r26, r1
 a64:	62 1f       	adc	r22, r18
 a66:	83 9f       	mul	r24, r19
 a68:	a0 0d       	add	r26, r0
 a6a:	61 1d       	adc	r22, r1
 a6c:	22 1f       	adc	r18, r18
 a6e:	74 9f       	mul	r23, r20
 a70:	33 27       	eor	r19, r19
 a72:	a0 0d       	add	r26, r0
 a74:	61 1d       	adc	r22, r1
 a76:	23 1f       	adc	r18, r19
 a78:	84 9f       	mul	r24, r20
 a7a:	60 0d       	add	r22, r0
 a7c:	21 1d       	adc	r18, r1
 a7e:	82 2f       	mov	r24, r18
 a80:	76 2f       	mov	r23, r22
 a82:	6a 2f       	mov	r22, r26
 a84:	11 24       	eor	r1, r1
 a86:	9f 57       	subi	r25, 0x7F	; 127
 a88:	50 40       	sbci	r21, 0x00	; 0
 a8a:	9a f0       	brmi	.+38     	; 0xab2 <__mulsf3_pse+0x88>
 a8c:	f1 f0       	breq	.+60     	; 0xaca <__mulsf3_pse+0xa0>
 a8e:	88 23       	and	r24, r24
 a90:	4a f0       	brmi	.+18     	; 0xaa4 <__mulsf3_pse+0x7a>
 a92:	ee 0f       	add	r30, r30
 a94:	ff 1f       	adc	r31, r31
 a96:	bb 1f       	adc	r27, r27
 a98:	66 1f       	adc	r22, r22
 a9a:	77 1f       	adc	r23, r23
 a9c:	88 1f       	adc	r24, r24
 a9e:	91 50       	subi	r25, 0x01	; 1
 aa0:	50 40       	sbci	r21, 0x00	; 0
 aa2:	a9 f7       	brne	.-22     	; 0xa8e <__mulsf3_pse+0x64>
 aa4:	9e 3f       	cpi	r25, 0xFE	; 254
 aa6:	51 05       	cpc	r21, r1
 aa8:	80 f0       	brcs	.+32     	; 0xaca <__mulsf3_pse+0xa0>
 aaa:	0c 94 ae 04 	jmp	0x95c	; 0x95c <__fp_inf>
 aae:	0c 94 f9 04 	jmp	0x9f2	; 0x9f2 <__fp_szero>
 ab2:	5f 3f       	cpi	r21, 0xFF	; 255
 ab4:	e4 f3       	brlt	.-8      	; 0xaae <__mulsf3_pse+0x84>
 ab6:	98 3e       	cpi	r25, 0xE8	; 232
 ab8:	d4 f3       	brlt	.-12     	; 0xaae <__mulsf3_pse+0x84>
 aba:	86 95       	lsr	r24
 abc:	77 95       	ror	r23
 abe:	67 95       	ror	r22
 ac0:	b7 95       	ror	r27
 ac2:	f7 95       	ror	r31
 ac4:	e7 95       	ror	r30
 ac6:	9f 5f       	subi	r25, 0xFF	; 255
 ac8:	c1 f7       	brne	.-16     	; 0xaba <__mulsf3_pse+0x90>
 aca:	fe 2b       	or	r31, r30
 acc:	88 0f       	add	r24, r24
 ace:	91 1d       	adc	r25, r1
 ad0:	96 95       	lsr	r25
 ad2:	87 95       	ror	r24
 ad4:	97 f9       	bld	r25, 7
 ad6:	08 95       	ret

00000ad8 <__tablejump2__>:
 ad8:	ee 0f       	add	r30, r30
 ada:	ff 1f       	adc	r31, r31
 adc:	05 90       	lpm	r0, Z+
 ade:	f4 91       	lpm	r31, Z
 ae0:	e0 2d       	mov	r30, r0
 ae2:	09 94       	ijmp

00000ae4 <__itoa_ncheck>:
 ae4:	bb 27       	eor	r27, r27
 ae6:	4a 30       	cpi	r20, 0x0A	; 10
 ae8:	31 f4       	brne	.+12     	; 0xaf6 <__itoa_ncheck+0x12>
 aea:	99 23       	and	r25, r25
 aec:	22 f4       	brpl	.+8      	; 0xaf6 <__itoa_ncheck+0x12>
 aee:	bd e2       	ldi	r27, 0x2D	; 45
 af0:	90 95       	com	r25
 af2:	81 95       	neg	r24
 af4:	9f 4f       	sbci	r25, 0xFF	; 255
 af6:	0c 94 7e 05 	jmp	0xafc	; 0xafc <__utoa_common>

00000afa <__utoa_ncheck>:
 afa:	bb 27       	eor	r27, r27

00000afc <__utoa_common>:
 afc:	fb 01       	movw	r30, r22
 afe:	55 27       	eor	r21, r21
 b00:	aa 27       	eor	r26, r26
 b02:	88 0f       	add	r24, r24
 b04:	99 1f       	adc	r25, r25
 b06:	aa 1f       	adc	r26, r26
 b08:	a4 17       	cp	r26, r20
 b0a:	10 f0       	brcs	.+4      	; 0xb10 <__utoa_common+0x14>
 b0c:	a4 1b       	sub	r26, r20
 b0e:	83 95       	inc	r24
 b10:	50 51       	subi	r21, 0x10	; 16
 b12:	b9 f7       	brne	.-18     	; 0xb02 <__utoa_common+0x6>
 b14:	a0 5d       	subi	r26, 0xD0	; 208
 b16:	aa 33       	cpi	r26, 0x3A	; 58
 b18:	08 f0       	brcs	.+2      	; 0xb1c <__utoa_common+0x20>
 b1a:	a9 5d       	subi	r26, 0xD9	; 217
 b1c:	a1 93       	st	Z+, r26
 b1e:	00 97       	sbiw	r24, 0x00	; 0
 b20:	79 f7       	brne	.-34     	; 0xb00 <__utoa_common+0x4>
 b22:	b1 11       	cpse	r27, r1
 b24:	b1 93       	st	Z+, r27
 b26:	11 92       	st	Z+, r1
 b28:	cb 01       	movw	r24, r22
 b2a:	0c 94 97 05 	jmp	0xb2e	; 0xb2e <strrev>

00000b2e <strrev>:
 b2e:	dc 01       	movw	r26, r24
 b30:	fc 01       	movw	r30, r24
 b32:	67 2f       	mov	r22, r23
 b34:	71 91       	ld	r23, Z+
 b36:	77 23       	and	r23, r23
 b38:	e1 f7       	brne	.-8      	; 0xb32 <strrev+0x4>
 b3a:	32 97       	sbiw	r30, 0x02	; 2
 b3c:	04 c0       	rjmp	.+8      	; 0xb46 <strrev+0x18>
 b3e:	7c 91       	ld	r23, X
 b40:	6d 93       	st	X+, r22
 b42:	70 83       	st	Z, r23
 b44:	62 91       	ld	r22, -Z
 b46:	ae 17       	cp	r26, r30
 b48:	bf 07       	cpc	r27, r31
 b4a:	c8 f3       	brcs	.-14     	; 0xb3e <strrev+0x10>
 b4c:	08 95       	ret

00000b4e <_exit>:
 b4e:	f8 94       	cli

00000b50 <__stop_program>:
 b50:	ff cf       	rjmp	.-2      	; 0xb50 <__stop_program>
