
Lutownica.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000d20  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000cac  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000002c  00800100  00800100  00000d20  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000d20  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000d50  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000f0  00000000  00000000  00000d90  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001c96  00000000  00000000  00000e80  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000c7c  00000000  00000000  00002b16  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000082b  00000000  00000000  00003792  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002e0  00000000  00000000  00003fc0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000722  00000000  00000000  000042a0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000107d  00000000  00000000  000049c2  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000110  00000000  00000000  00005a3f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 35 00 	jmp	0x6a	; 0x6a <__ctors_end>
   4:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
   8:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
   c:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  10:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  14:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  18:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  1c:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  20:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  24:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  28:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  2c:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  30:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  34:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  38:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  3c:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  40:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  44:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  48:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  4c:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  50:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  54:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  58:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  5c:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  60:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  64:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>

00000068 <__ctors_start>:
  68:	de 03       	fmulsu	r21, r22

0000006a <__ctors_end>:
  6a:	11 24       	eor	r1, r1
  6c:	1f be       	out	0x3f, r1	; 63
  6e:	cf ef       	ldi	r28, 0xFF	; 255
  70:	d8 e0       	ldi	r29, 0x08	; 8
  72:	de bf       	out	0x3e, r29	; 62
  74:	cd bf       	out	0x3d, r28	; 61

00000076 <__do_clear_bss>:
  76:	21 e0       	ldi	r18, 0x01	; 1
  78:	a0 e0       	ldi	r26, 0x00	; 0
  7a:	b1 e0       	ldi	r27, 0x01	; 1
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	ac 32       	cpi	r26, 0x2C	; 44
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>

00000086 <__do_global_ctors>:
  86:	10 e0       	ldi	r17, 0x00	; 0
  88:	c5 e3       	ldi	r28, 0x35	; 53
  8a:	d0 e0       	ldi	r29, 0x00	; 0
  8c:	04 c0       	rjmp	.+8      	; 0x96 <__do_global_ctors+0x10>
  8e:	21 97       	sbiw	r28, 0x01	; 1
  90:	fe 01       	movw	r30, r28
  92:	0e 94 19 06 	call	0xc32	; 0xc32 <__tablejump2__>
  96:	c4 33       	cpi	r28, 0x34	; 52
  98:	d1 07       	cpc	r29, r17
  9a:	c9 f7       	brne	.-14     	; 0x8e <__do_global_ctors+0x8>
  9c:	0e 94 8b 02 	call	0x516	; 0x516 <main>
  a0:	0c 94 54 06 	jmp	0xca8	; 0xca8 <_exit>

000000a4 <__bad_interrupt>:
  a4:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a8 <_ZN3LCD5DelayEj>:
		WriteCGR((uint8_t)(str[i]));
	};
};

void LCD::WriteChar(char c)
{
  a8:	cf 93       	push	r28
  aa:	df 93       	push	r29
  ac:	00 d0       	rcall	.+0      	; 0xae <_ZN3LCD5DelayEj+0x6>
  ae:	cd b7       	in	r28, 0x3d	; 61
  b0:	de b7       	in	r29, 0x3e	; 62
  b2:	7a 83       	std	Y+2, r23	; 0x02
  b4:	69 83       	std	Y+1, r22	; 0x01
  b6:	89 81       	ldd	r24, Y+1	; 0x01
  b8:	9a 81       	ldd	r25, Y+2	; 0x02
  ba:	9c 01       	movw	r18, r24
  bc:	21 50       	subi	r18, 0x01	; 1
  be:	31 09       	sbc	r19, r1
  c0:	3a 83       	std	Y+2, r19	; 0x02
  c2:	29 83       	std	Y+1, r18	; 0x01
  c4:	89 2b       	or	r24, r25
  c6:	b9 f7       	brne	.-18     	; 0xb6 <_ZN3LCD5DelayEj+0xe>
  c8:	0f 90       	pop	r0
  ca:	0f 90       	pop	r0
  cc:	df 91       	pop	r29
  ce:	cf 91       	pop	r28
  d0:	08 95       	ret

000000d2 <_ZN3LCD7CommandEh>:
  d2:	5a 98       	cbi	0x0b, 2	; 11
  d4:	2b b1       	in	r18, 0x0b	; 11
  d6:	2f 71       	andi	r18, 0x1F	; 31
  d8:	2b b9       	out	0x0b, r18	; 11
  da:	4b b1       	in	r20, 0x0b	; 11
  dc:	50 e2       	ldi	r21, 0x20	; 32
  de:	65 9f       	mul	r22, r21
  e0:	90 01       	movw	r18, r0
  e2:	11 24       	eor	r1, r1
  e4:	24 2b       	or	r18, r20
  e6:	2b b9       	out	0x0b, r18	; 11
  e8:	66 95       	lsr	r22
  ea:	66 95       	lsr	r22
  ec:	66 95       	lsr	r22
  ee:	25 b1       	in	r18, 0x05	; 5
  f0:	20 7e       	andi	r18, 0xE0	; 224
  f2:	25 b9       	out	0x05, r18	; 5
  f4:	65 b9       	out	0x05, r22	; 5
  f6:	5c 9a       	sbi	0x0b, 4	; 11
  f8:	6f ef       	ldi	r22, 0xFF	; 255
  fa:	70 e0       	ldi	r23, 0x00	; 0
  fc:	0e 94 54 00 	call	0xa8	; 0xa8 <_ZN3LCD5DelayEj>
 100:	5c 98       	cbi	0x0b, 4	; 11
 102:	08 95       	ret

00000104 <_ZN3LCD8WriteCGREh>:
 104:	5a 9a       	sbi	0x0b, 2	; 11
 106:	2b b1       	in	r18, 0x0b	; 11
 108:	2f 71       	andi	r18, 0x1F	; 31
 10a:	2b b9       	out	0x0b, r18	; 11
 10c:	4b b1       	in	r20, 0x0b	; 11
 10e:	50 e2       	ldi	r21, 0x20	; 32
 110:	65 9f       	mul	r22, r21
 112:	90 01       	movw	r18, r0
 114:	11 24       	eor	r1, r1
 116:	24 2b       	or	r18, r20
 118:	2b b9       	out	0x0b, r18	; 11
 11a:	66 95       	lsr	r22
 11c:	66 95       	lsr	r22
 11e:	66 95       	lsr	r22
 120:	25 b1       	in	r18, 0x05	; 5
 122:	20 7e       	andi	r18, 0xE0	; 224
 124:	25 b9       	out	0x05, r18	; 5
 126:	65 b9       	out	0x05, r22	; 5
 128:	5c 9a       	sbi	0x0b, 4	; 11
 12a:	6f ef       	ldi	r22, 0xFF	; 255
 12c:	70 e0       	ldi	r23, 0x00	; 0
 12e:	0e 94 54 00 	call	0xa8	; 0xa8 <_ZN3LCD5DelayEj>
 132:	5c 98       	cbi	0x0b, 4	; 11
 134:	5a 98       	cbi	0x0b, 2	; 11
 136:	08 95       	ret

00000138 <_ZN3LCD4InitEv>:
 138:	cf 93       	push	r28
 13a:	df 93       	push	r29
 13c:	ec 01       	movw	r28, r24
 13e:	8a b1       	in	r24, 0x0a	; 10
 140:	8c 61       	ori	r24, 0x1C	; 28
 142:	8a b9       	out	0x0a, r24	; 10
 144:	8b b1       	in	r24, 0x0b	; 11
 146:	83 7e       	andi	r24, 0xE3	; 227
 148:	8b b9       	out	0x0b, r24	; 11
 14a:	8a b1       	in	r24, 0x0a	; 10
 14c:	80 6e       	ori	r24, 0xE0	; 224
 14e:	8a b9       	out	0x0a, r24	; 10
 150:	8b b1       	in	r24, 0x0b	; 11
 152:	8f 71       	andi	r24, 0x1F	; 31
 154:	8b b9       	out	0x0b, r24	; 11
 156:	84 b1       	in	r24, 0x04	; 4
 158:	8f 61       	ori	r24, 0x1F	; 31
 15a:	84 b9       	out	0x04, r24	; 4
 15c:	85 b1       	in	r24, 0x05	; 5
 15e:	80 7e       	andi	r24, 0xE0	; 224
 160:	85 b9       	out	0x05, r24	; 5
 162:	85 b1       	in	r24, 0x05	; 5
 164:	87 60       	ori	r24, 0x07	; 7
 166:	85 b9       	out	0x05, r24	; 5
 168:	5c 9a       	sbi	0x0b, 4	; 11
 16a:	6f ef       	ldi	r22, 0xFF	; 255
 16c:	7f ef       	ldi	r23, 0xFF	; 255
 16e:	ce 01       	movw	r24, r28
 170:	0e 94 54 00 	call	0xa8	; 0xa8 <_ZN3LCD5DelayEj>
 174:	5c 98       	cbi	0x0b, 4	; 11
 176:	85 b1       	in	r24, 0x05	; 5
 178:	89 7f       	andi	r24, 0xF9	; 249
 17a:	85 b9       	out	0x05, r24	; 5
 17c:	8b b1       	in	r24, 0x0b	; 11
 17e:	80 6c       	ori	r24, 0xC0	; 192
 180:	8b b9       	out	0x0b, r24	; 11
 182:	5c 9a       	sbi	0x0b, 4	; 11
 184:	6f ef       	ldi	r22, 0xFF	; 255
 186:	7f e0       	ldi	r23, 0x0F	; 15
 188:	ce 01       	movw	r24, r28
 18a:	0e 94 54 00 	call	0xa8	; 0xa8 <_ZN3LCD5DelayEj>
 18e:	5c 98       	cbi	0x0b, 4	; 11
 190:	5c 9a       	sbi	0x0b, 4	; 11
 192:	6f ef       	ldi	r22, 0xFF	; 255
 194:	7f e0       	ldi	r23, 0x0F	; 15
 196:	ce 01       	movw	r24, r28
 198:	0e 94 54 00 	call	0xa8	; 0xa8 <_ZN3LCD5DelayEj>
 19c:	5c 98       	cbi	0x0b, 4	; 11
 19e:	8b b1       	in	r24, 0x0b	; 11
 1a0:	8f 73       	andi	r24, 0x3F	; 63
 1a2:	8b b9       	out	0x0b, r24	; 11
 1a4:	28 98       	cbi	0x05, 0	; 5
 1a6:	61 e0       	ldi	r22, 0x01	; 1
 1a8:	ce 01       	movw	r24, r28
 1aa:	0e 94 69 00 	call	0xd2	; 0xd2 <_ZN3LCD7CommandEh>
 1ae:	62 e0       	ldi	r22, 0x02	; 2
 1b0:	ce 01       	movw	r24, r28
 1b2:	0e 94 69 00 	call	0xd2	; 0xd2 <_ZN3LCD7CommandEh>
 1b6:	66 e0       	ldi	r22, 0x06	; 6
 1b8:	ce 01       	movw	r24, r28
 1ba:	0e 94 69 00 	call	0xd2	; 0xd2 <_ZN3LCD7CommandEh>
 1be:	6f e0       	ldi	r22, 0x0F	; 15
 1c0:	ce 01       	movw	r24, r28
 1c2:	0e 94 69 00 	call	0xd2	; 0xd2 <_ZN3LCD7CommandEh>
 1c6:	64 e1       	ldi	r22, 0x14	; 20
 1c8:	ce 01       	movw	r24, r28
 1ca:	0e 94 69 00 	call	0xd2	; 0xd2 <_ZN3LCD7CommandEh>
 1ce:	62 e0       	ldi	r22, 0x02	; 2
 1d0:	ce 01       	movw	r24, r28
 1d2:	0e 94 69 00 	call	0xd2	; 0xd2 <_ZN3LCD7CommandEh>
 1d6:	df 91       	pop	r29
 1d8:	cf 91       	pop	r28
 1da:	08 95       	ret

000001dc <_ZN3LCD11WriteStringEPc>:
 1dc:	bf 92       	push	r11
 1de:	cf 92       	push	r12
 1e0:	df 92       	push	r13
 1e2:	ef 92       	push	r14
 1e4:	ff 92       	push	r15
 1e6:	0f 93       	push	r16
 1e8:	1f 93       	push	r17
 1ea:	cf 93       	push	r28
 1ec:	df 93       	push	r29
 1ee:	7c 01       	movw	r14, r24
 1f0:	8b 01       	movw	r16, r22
 1f2:	d4 e1       	ldi	r29, 0x14	; 20
 1f4:	0f 2e       	mov	r0, r31
 1f6:	f4 e1       	ldi	r31, 0x14	; 20
 1f8:	bf 2e       	mov	r11, r31
 1fa:	f0 2d       	mov	r31, r0
 1fc:	68 01       	movw	r12, r16
 1fe:	f8 01       	movw	r30, r16
 200:	80 81       	ld	r24, Z
 202:	8a 30       	cpi	r24, 0x0A	; 10
 204:	71 f4       	brne	.+28     	; 0x222 <_ZN3LCD11WriteStringEPc+0x46>
 206:	8b 2d       	mov	r24, r11
 208:	8d 1b       	sub	r24, r29
 20a:	84 31       	cpi	r24, 0x14	; 20
 20c:	50 f4       	brcc	.+20     	; 0x222 <_ZN3LCD11WriteStringEPc+0x46>
 20e:	dd 23       	and	r29, r29
 210:	91 f0       	breq	.+36     	; 0x236 <_ZN3LCD11WriteStringEPc+0x5a>
 212:	c0 e0       	ldi	r28, 0x00	; 0
 214:	60 e2       	ldi	r22, 0x20	; 32
 216:	c7 01       	movw	r24, r14
 218:	0e 94 82 00 	call	0x104	; 0x104 <_ZN3LCD8WriteCGREh>
 21c:	cf 5f       	subi	r28, 0xFF	; 255
 21e:	dc 13       	cpse	r29, r28
 220:	f9 cf       	rjmp	.-14     	; 0x214 <_ZN3LCD11WriteStringEPc+0x38>
 222:	0f 5f       	subi	r16, 0xFF	; 255
 224:	1f 4f       	sbci	r17, 0xFF	; 255
 226:	f6 01       	movw	r30, r12
 228:	60 81       	ld	r22, Z
 22a:	c7 01       	movw	r24, r14
 22c:	0e 94 82 00 	call	0x104	; 0x104 <_ZN3LCD8WriteCGREh>
 230:	d1 50       	subi	r29, 0x01	; 1
 232:	21 f7       	brne	.-56     	; 0x1fc <_ZN3LCD11WriteStringEPc+0x20>
 234:	09 c0       	rjmp	.+18     	; 0x248 <_ZN3LCD11WriteStringEPc+0x6c>
 236:	0f 5f       	subi	r16, 0xFF	; 255
 238:	1f 4f       	sbci	r17, 0xFF	; 255
 23a:	f6 01       	movw	r30, r12
 23c:	60 81       	ld	r22, Z
 23e:	c7 01       	movw	r24, r14
 240:	0e 94 82 00 	call	0x104	; 0x104 <_ZN3LCD8WriteCGREh>
 244:	d1 50       	subi	r29, 0x01	; 1
 246:	da cf       	rjmp	.-76     	; 0x1fc <_ZN3LCD11WriteStringEPc+0x20>
 248:	df 91       	pop	r29
 24a:	cf 91       	pop	r28
 24c:	1f 91       	pop	r17
 24e:	0f 91       	pop	r16
 250:	ff 90       	pop	r15
 252:	ef 90       	pop	r14
 254:	df 90       	pop	r13
 256:	cf 90       	pop	r12
 258:	bf 90       	pop	r11
 25a:	08 95       	ret

0000025c <_ZN3LCD13GoToFirstLineEv>:
	
};

void LCD::GoToFirstLine(void)
{
	Command(LCD_SET_DDRAM_ADDR| 0);
 25c:	60 e8       	ldi	r22, 0x80	; 128
 25e:	0e 94 69 00 	call	0xd2	; 0xd2 <_ZN3LCD7CommandEh>
 262:	08 95       	ret

00000264 <_ZN3LCD14GoToSecondLineEv>:
};

void LCD::GoToSecondLine(void)
{
	Command(LCD_SET_DDRAM_ADDR| 40);
 264:	68 ea       	ldi	r22, 0xA8	; 168
 266:	0e 94 69 00 	call	0xd2	; 0xd2 <_ZN3LCD7CommandEh>
 26a:	08 95       	ret

0000026c <_ZN3PID7ComputeEv>:
{
	this->kp = kp;
	this->ki = ki;
	this->kd = kd;
	this->kt = dt;
};
 26c:	4f 92       	push	r4
 26e:	5f 92       	push	r5
 270:	6f 92       	push	r6
 272:	7f 92       	push	r7
 274:	8f 92       	push	r8
 276:	9f 92       	push	r9
 278:	af 92       	push	r10
 27a:	bf 92       	push	r11
 27c:	cf 92       	push	r12
 27e:	df 92       	push	r13
 280:	ef 92       	push	r14
 282:	ff 92       	push	r15
 284:	cf 93       	push	r28
 286:	df 93       	push	r29
 288:	00 d0       	rcall	.+0      	; 0x28a <_ZN3PID7ComputeEv+0x1e>
 28a:	00 d0       	rcall	.+0      	; 0x28c <_ZN3PID7ComputeEv+0x20>
 28c:	00 d0       	rcall	.+0      	; 0x28e <_ZN3PID7ComputeEv+0x22>
 28e:	cd b7       	in	r28, 0x3d	; 61
 290:	de b7       	in	r29, 0x3e	; 62
 292:	9e 83       	std	Y+6, r25	; 0x06
 294:	8d 83       	std	Y+5, r24	; 0x05
 296:	fc 01       	movw	r30, r24
 298:	24 a1       	ldd	r18, Z+36	; 0x24
 29a:	35 a1       	ldd	r19, Z+37	; 0x25
 29c:	46 a1       	ldd	r20, Z+38	; 0x26
 29e:	57 a1       	ldd	r21, Z+39	; 0x27
 2a0:	60 a5       	ldd	r22, Z+40	; 0x28
 2a2:	71 a5       	ldd	r23, Z+41	; 0x29
 2a4:	82 a5       	ldd	r24, Z+42	; 0x2a
 2a6:	93 a5       	ldd	r25, Z+43	; 0x2b
 2a8:	0e 94 09 04 	call	0x812	; 0x812 <__subsf3>
 2ac:	6b 01       	movw	r12, r22
 2ae:	7c 01       	movw	r14, r24
 2b0:	ed 81       	ldd	r30, Y+5	; 0x05
 2b2:	fe 81       	ldd	r31, Y+6	; 0x06
 2b4:	60 83       	st	Z, r22
 2b6:	71 83       	std	Z+1, r23	; 0x01
 2b8:	82 83       	std	Z+2, r24	; 0x02
 2ba:	93 83       	std	Z+3, r25	; 0x03
 2bc:	84 88       	ldd	r8, Z+20	; 0x14
 2be:	95 88       	ldd	r9, Z+21	; 0x15
 2c0:	a6 88       	ldd	r10, Z+22	; 0x16
 2c2:	b7 88       	ldd	r11, Z+23	; 0x17
 2c4:	a5 01       	movw	r20, r10
 2c6:	94 01       	movw	r18, r8
 2c8:	0e 94 ac 05 	call	0xb58	; 0xb58 <__mulsf3>
 2cc:	ed 81       	ldd	r30, Y+5	; 0x05
 2ce:	fe 81       	ldd	r31, Y+6	; 0x06
 2d0:	24 85       	ldd	r18, Z+12	; 0x0c
 2d2:	35 85       	ldd	r19, Z+13	; 0x0d
 2d4:	46 85       	ldd	r20, Z+14	; 0x0e
 2d6:	57 85       	ldd	r21, Z+15	; 0x0f
 2d8:	0e 94 0a 04 	call	0x814	; 0x814 <__addsf3>
 2dc:	2b 01       	movw	r4, r22
 2de:	3c 01       	movw	r6, r24
 2e0:	ed 81       	ldd	r30, Y+5	; 0x05
 2e2:	fe 81       	ldd	r31, Y+6	; 0x06
 2e4:	64 87       	std	Z+12, r22	; 0x0c
 2e6:	75 87       	std	Z+13, r23	; 0x0d
 2e8:	86 87       	std	Z+14, r24	; 0x0e
 2ea:	97 87       	std	Z+15, r25	; 0x0f
 2ec:	24 81       	ldd	r18, Z+4	; 0x04
 2ee:	35 81       	ldd	r19, Z+5	; 0x05
 2f0:	46 81       	ldd	r20, Z+6	; 0x06
 2f2:	57 81       	ldd	r21, Z+7	; 0x07
 2f4:	c7 01       	movw	r24, r14
 2f6:	b6 01       	movw	r22, r12
 2f8:	0e 94 09 04 	call	0x812	; 0x812 <__subsf3>
 2fc:	a5 01       	movw	r20, r10
 2fe:	94 01       	movw	r18, r8
 300:	0e 94 76 04 	call	0x8ec	; 0x8ec <__divsf3>
 304:	4b 01       	movw	r8, r22
 306:	5c 01       	movw	r10, r24
 308:	ed 81       	ldd	r30, Y+5	; 0x05
 30a:	fe 81       	ldd	r31, Y+6	; 0x06
 30c:	60 87       	std	Z+8, r22	; 0x08
 30e:	71 87       	std	Z+9, r23	; 0x09
 310:	82 87       	std	Z+10, r24	; 0x0a
 312:	93 87       	std	Z+11, r25	; 0x0b
 314:	20 8d       	ldd	r18, Z+24	; 0x18
 316:	31 8d       	ldd	r19, Z+25	; 0x19
 318:	42 8d       	ldd	r20, Z+26	; 0x1a
 31a:	53 8d       	ldd	r21, Z+27	; 0x1b
 31c:	c7 01       	movw	r24, r14
 31e:	b6 01       	movw	r22, r12
 320:	0e 94 ac 05 	call	0xb58	; 0xb58 <__mulsf3>
 324:	69 83       	std	Y+1, r22	; 0x01
 326:	7a 83       	std	Y+2, r23	; 0x02
 328:	8b 83       	std	Y+3, r24	; 0x03
 32a:	9c 83       	std	Y+4, r25	; 0x04
 32c:	ed 81       	ldd	r30, Y+5	; 0x05
 32e:	fe 81       	ldd	r31, Y+6	; 0x06
 330:	24 8d       	ldd	r18, Z+28	; 0x1c
 332:	35 8d       	ldd	r19, Z+29	; 0x1d
 334:	46 8d       	ldd	r20, Z+30	; 0x1e
 336:	57 8d       	ldd	r21, Z+31	; 0x1f
 338:	c3 01       	movw	r24, r6
 33a:	b2 01       	movw	r22, r4
 33c:	0e 94 ac 05 	call	0xb58	; 0xb58 <__mulsf3>
 340:	9b 01       	movw	r18, r22
 342:	ac 01       	movw	r20, r24
 344:	69 81       	ldd	r22, Y+1	; 0x01
 346:	7a 81       	ldd	r23, Y+2	; 0x02
 348:	8b 81       	ldd	r24, Y+3	; 0x03
 34a:	9c 81       	ldd	r25, Y+4	; 0x04
 34c:	0e 94 0a 04 	call	0x814	; 0x814 <__addsf3>
 350:	2b 01       	movw	r4, r22
 352:	3c 01       	movw	r6, r24
 354:	ed 81       	ldd	r30, Y+5	; 0x05
 356:	fe 81       	ldd	r31, Y+6	; 0x06
 358:	20 a1       	ldd	r18, Z+32	; 0x20
 35a:	31 a1       	ldd	r19, Z+33	; 0x21
 35c:	42 a1       	ldd	r20, Z+34	; 0x22
 35e:	53 a1       	ldd	r21, Z+35	; 0x23
 360:	c5 01       	movw	r24, r10
 362:	b4 01       	movw	r22, r8
 364:	0e 94 ac 05 	call	0xb58	; 0xb58 <__mulsf3>
 368:	9b 01       	movw	r18, r22
 36a:	ac 01       	movw	r20, r24
 36c:	c3 01       	movw	r24, r6
 36e:	b2 01       	movw	r22, r4
 370:	0e 94 0a 04 	call	0x814	; 0x814 <__addsf3>
 374:	ed 81       	ldd	r30, Y+5	; 0x05
 376:	fe 81       	ldd	r31, Y+6	; 0x06
 378:	60 8b       	std	Z+16, r22	; 0x10
 37a:	71 8b       	std	Z+17, r23	; 0x11
 37c:	82 8b       	std	Z+18, r24	; 0x12
 37e:	93 8b       	std	Z+19, r25	; 0x13
 380:	c4 82       	std	Z+4, r12	; 0x04
 382:	d5 82       	std	Z+5, r13	; 0x05
 384:	e6 82       	std	Z+6, r14	; 0x06
 386:	f7 82       	std	Z+7, r15	; 0x07
 388:	26 96       	adiw	r28, 0x06	; 6
 38a:	0f b6       	in	r0, 0x3f	; 63
 38c:	f8 94       	cli
 38e:	de bf       	out	0x3e, r29	; 62
 390:	0f be       	out	0x3f, r0	; 63
 392:	cd bf       	out	0x3d, r28	; 61
 394:	df 91       	pop	r29
 396:	cf 91       	pop	r28
 398:	ff 90       	pop	r15
 39a:	ef 90       	pop	r14
 39c:	df 90       	pop	r13
 39e:	cf 90       	pop	r12
 3a0:	bf 90       	pop	r11
 3a2:	af 90       	pop	r10
 3a4:	9f 90       	pop	r9
 3a6:	8f 90       	pop	r8
 3a8:	7f 90       	pop	r7
 3aa:	6f 90       	pop	r6
 3ac:	5f 90       	pop	r5
 3ae:	4f 90       	pop	r4
 3b0:	08 95       	ret

000003b2 <_ZN3PID11SetSetpointEf>:

void PID::SetSetpoint(float setpoint)
{
	this->setpoint = setpoint;
 3b2:	fc 01       	movw	r30, r24
 3b4:	40 a7       	std	Z+40, r20	; 0x28
 3b6:	51 a7       	std	Z+41, r21	; 0x29
 3b8:	62 a7       	std	Z+42, r22	; 0x2a
 3ba:	73 a7       	std	Z+43, r23	; 0x2b
 3bc:	08 95       	ret

000003be <_ZN3PID4FeedEf>:
};

void PID::Feed(float val)
{
	this->measure = val;
 3be:	fc 01       	movw	r30, r24
 3c0:	44 a3       	std	Z+36, r20	; 0x24
 3c2:	55 a3       	std	Z+37, r21	; 0x25
 3c4:	66 a3       	std	Z+38, r22	; 0x26
 3c6:	77 a3       	std	Z+39, r23	; 0x27
 3c8:	08 95       	ret

000003ca <_ZN3PID6OutputEv>:
};

float PID::Output(void)
{
	return output;
 3ca:	fc 01       	movw	r30, r24
 3cc:	60 89       	ldd	r22, Z+16	; 0x10
 3ce:	71 89       	ldd	r23, Z+17	; 0x11
 3d0:	82 89       	ldd	r24, Z+18	; 0x12
 3d2:	93 89       	ldd	r25, Z+19	; 0x13
};
 3d4:	08 95       	ret

000003d6 <_Z5delaym>:
	float units = (float)(x - a);
	float result = (units * dd) + (float)c;
	return (int32_t)(result);
};

void delay(uint32_t volatile t){
 3d6:	cf 93       	push	r28
 3d8:	df 93       	push	r29
 3da:	00 d0       	rcall	.+0      	; 0x3dc <_Z5delaym+0x6>
 3dc:	00 d0       	rcall	.+0      	; 0x3de <_Z5delaym+0x8>
 3de:	cd b7       	in	r28, 0x3d	; 61
 3e0:	de b7       	in	r29, 0x3e	; 62
 3e2:	69 83       	std	Y+1, r22	; 0x01
 3e4:	7a 83       	std	Y+2, r23	; 0x02
 3e6:	8b 83       	std	Y+3, r24	; 0x03
 3e8:	9c 83       	std	Y+4, r25	; 0x04
	while(t--){};
 3ea:	89 81       	ldd	r24, Y+1	; 0x01
 3ec:	9a 81       	ldd	r25, Y+2	; 0x02
 3ee:	ab 81       	ldd	r26, Y+3	; 0x03
 3f0:	bc 81       	ldd	r27, Y+4	; 0x04
 3f2:	ac 01       	movw	r20, r24
 3f4:	bd 01       	movw	r22, r26
 3f6:	41 50       	subi	r20, 0x01	; 1
 3f8:	51 09       	sbc	r21, r1
 3fa:	61 09       	sbc	r22, r1
 3fc:	71 09       	sbc	r23, r1
 3fe:	49 83       	std	Y+1, r20	; 0x01
 400:	5a 83       	std	Y+2, r21	; 0x02
 402:	6b 83       	std	Y+3, r22	; 0x03
 404:	7c 83       	std	Y+4, r23	; 0x04
 406:	89 2b       	or	r24, r25
 408:	8a 2b       	or	r24, r26
 40a:	8b 2b       	or	r24, r27
 40c:	71 f7       	brne	.-36     	; 0x3ea <_Z5delaym+0x14>
};
 40e:	0f 90       	pop	r0
 410:	0f 90       	pop	r0
 412:	0f 90       	pop	r0
 414:	0f 90       	pop	r0
 416:	df 91       	pop	r29
 418:	cf 91       	pop	r28
 41a:	08 95       	ret

0000041c <_Z8adc_readh>:

uint16_t adc_read(uint8_t pinc){
	ADMUX = (0<<REFS1)|(1<<REFS0)|pinc;
 41c:	80 64       	ori	r24, 0x40	; 64
 41e:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
	ADCSRA |= (1<<ADSC);
 422:	ea e7       	ldi	r30, 0x7A	; 122
 424:	f0 e0       	ldi	r31, 0x00	; 0
 426:	80 81       	ld	r24, Z
 428:	80 64       	ori	r24, 0x40	; 64
 42a:	80 83       	st	Z, r24
	while( ADCSRA & (1 << ADSC )){};
 42c:	80 81       	ld	r24, Z
 42e:	86 fd       	sbrc	r24, 6
 430:	fd cf       	rjmp	.-6      	; 0x42c <_Z8adc_readh+0x10>
	uint8_t lsb = ADCL;
 432:	20 91 78 00 	lds	r18, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
	uint8_t msb = ADCH;
 436:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
	uint16_t t = lsb + (msb<<8);
	return t;
 43a:	90 e0       	ldi	r25, 0x00	; 0
 43c:	98 2f       	mov	r25, r24
 43e:	88 27       	eor	r24, r24
};
 440:	82 0f       	add	r24, r18
 442:	91 1d       	adc	r25, r1
 444:	08 95       	ret

00000446 <_Z4cstrPc>:

void cstr(char* t){
 446:	fc 01       	movw	r30, r24
 448:	9c 01       	movw	r18, r24
 44a:	21 50       	subi	r18, 0x01	; 1
 44c:	3f 4f       	sbci	r19, 0xFF	; 255
	for(uint8_t i=0; i<255; i++){
		if(! (((t[i] >= 48) && (t[i] <=59 )) || (t[i] == '.') || (t[i] == '-')) ){
 44e:	df 01       	movw	r26, r30
 450:	81 91       	ld	r24, Z+
 452:	90 ed       	ldi	r25, 0xD0	; 208
 454:	98 0f       	add	r25, r24
 456:	9c 30       	cpi	r25, 0x0C	; 12
 458:	30 f0       	brcs	.+12     	; 0x466 <_Z4cstrPc+0x20>
 45a:	8d 52       	subi	r24, 0x2D	; 45
 45c:	82 30       	cpi	r24, 0x02	; 2
 45e:	18 f0       	brcs	.+6      	; 0x466 <_Z4cstrPc+0x20>
			t[i] = '\n';
 460:	8a e0       	ldi	r24, 0x0A	; 10
 462:	8c 93       	st	X, r24
			break;
 464:	08 95       	ret
	uint16_t t = lsb + (msb<<8);
	return t;
};

void cstr(char* t){
	for(uint8_t i=0; i<255; i++){
 466:	e2 17       	cp	r30, r18
 468:	f3 07       	cpc	r31, r19
 46a:	89 f7       	brne	.-30     	; 0x44e <_Z4cstrPc+0x8>
 46c:	08 95       	ret

0000046e <_Z6strcpyPcS_>:
			break;
		};
	};
};

void strcpy(char* dst, char* scr){
 46e:	cf 93       	push	r28
 470:	df 93       	push	r29
 472:	dc 01       	movw	r26, r24
	uint8_t first_null = 0;
	uint8_t sec_null = 0;
	
	for(uint8_t i=0; i<253; i++){
		if( dst[i] == '\n' ){
 474:	8c 91       	ld	r24, X
 476:	8a 30       	cpi	r24, 0x0A	; 10
 478:	09 f4       	brne	.+2      	; 0x47c <_Z6strcpyPcS_+0xe>
 47a:	44 c0       	rjmp	.+136    	; 0x504 <_Z6strcpyPcS_+0x96>
 47c:	fd 01       	movw	r30, r26
 47e:	31 96       	adiw	r30, 0x01	; 1

void strcpy(char* dst, char* scr){
	uint8_t first_null = 0;
	uint8_t sec_null = 0;
	
	for(uint8_t i=0; i<253; i++){
 480:	91 e0       	ldi	r25, 0x01	; 1
		if( dst[i] == '\n' ){
 482:	21 91       	ld	r18, Z+
 484:	2a 30       	cpi	r18, 0x0A	; 10
 486:	21 f0       	breq	.+8      	; 0x490 <_Z6strcpyPcS_+0x22>

void strcpy(char* dst, char* scr){
	uint8_t first_null = 0;
	uint8_t sec_null = 0;
	
	for(uint8_t i=0; i<253; i++){
 488:	9f 5f       	subi	r25, 0xFF	; 255
 48a:	9d 3f       	cpi	r25, 0xFD	; 253
 48c:	d1 f7       	brne	.-12     	; 0x482 <_Z6strcpyPcS_+0x14>
 48e:	3a c0       	rjmp	.+116    	; 0x504 <_Z6strcpyPcS_+0x96>
		};
		if(i >= 254)return;
	};
	
	for(uint8_t i=0; i<253; i++){
		if( scr[i] == '\n' ){
 490:	fb 01       	movw	r30, r22
 492:	80 81       	ld	r24, Z
 494:	8a 30       	cpi	r24, 0x0A	; 10
 496:	29 f4       	brne	.+10     	; 0x4a2 <_Z6strcpyPcS_+0x34>
 498:	0d c0       	rjmp	.+26     	; 0x4b4 <_Z6strcpyPcS_+0x46>
 49a:	21 91       	ld	r18, Z+
 49c:	2a 30       	cpi	r18, 0x0A	; 10
 49e:	39 f4       	brne	.+14     	; 0x4ae <_Z6strcpyPcS_+0x40>
 4a0:	09 c0       	rjmp	.+18     	; 0x4b4 <_Z6strcpyPcS_+0x46>
 4a2:	fb 01       	movw	r30, r22
 4a4:	31 96       	adiw	r30, 0x01	; 1
 4a6:	ab 01       	movw	r20, r22
 4a8:	43 50       	subi	r20, 0x03	; 3
 4aa:	5f 4f       	sbci	r21, 0xFF	; 255
 4ac:	f6 cf       	rjmp	.-20     	; 0x49a <_Z6strcpyPcS_+0x2c>
			break;
		};
		if(i >= 254)return;
	};
	
	for(uint8_t i=0; i<253; i++){
 4ae:	4e 17       	cp	r20, r30
 4b0:	5f 07       	cpc	r21, r31
 4b2:	99 f7       	brne	.-26     	; 0x49a <_Z6strcpyPcS_+0x2c>
			break;
		};
		if(i >= 254)return;
	};
	
	dst[first_null] = ' ';
 4b4:	fd 01       	movw	r30, r26
 4b6:	e9 0f       	add	r30, r25
 4b8:	f1 1d       	adc	r31, r1
 4ba:	80 e2       	ldi	r24, 0x20	; 32
 4bc:	80 83       	st	Z, r24
	
	uint8_t n = 0;
	for(uint8_t i = first_null+1; i<255; i++){
 4be:	9f 5f       	subi	r25, 0xFF	; 255
 4c0:	9f 3f       	cpi	r25, 0xFF	; 255
 4c2:	31 f1       	breq	.+76     	; 0x510 <_Z6strcpyPcS_+0xa2>
		dst[i] = scr[n];
 4c4:	fb 01       	movw	r30, r22
 4c6:	80 81       	ld	r24, Z
 4c8:	fd 01       	movw	r30, r26
 4ca:	e9 0f       	add	r30, r25
 4cc:	f1 1d       	adc	r31, r1
 4ce:	80 83       	st	Z, r24
		if( scr[n] == '\n' ){
 4d0:	fb 01       	movw	r30, r22
 4d2:	80 81       	ld	r24, Z
 4d4:	8a 30       	cpi	r24, 0x0A	; 10
 4d6:	e1 f0       	breq	.+56     	; 0x510 <_Z6strcpyPcS_+0xa2>
 4d8:	20 e0       	ldi	r18, 0x00	; 0
 4da:	0b c0       	rjmp	.+22     	; 0x4f2 <_Z6strcpyPcS_+0x84>
	
	dst[first_null] = ' ';
	
	uint8_t n = 0;
	for(uint8_t i = first_null+1; i<255; i++){
		dst[i] = scr[n];
 4dc:	fb 01       	movw	r30, r22
 4de:	e2 0f       	add	r30, r18
 4e0:	f1 1d       	adc	r31, r1
 4e2:	80 81       	ld	r24, Z
 4e4:	ed 01       	movw	r28, r26
 4e6:	c9 0f       	add	r28, r25
 4e8:	d1 1d       	adc	r29, r1
 4ea:	88 83       	st	Y, r24
		if( scr[n] == '\n' ){
 4ec:	30 81       	ld	r19, Z
 4ee:	3a 30       	cpi	r19, 0x0A	; 10
 4f0:	79 f0       	breq	.+30     	; 0x510 <_Z6strcpyPcS_+0xa2>
			break;
		};
		n++;
 4f2:	2f 5f       	subi	r18, 0xFF	; 255
	};
	
	dst[first_null] = ' ';
	
	uint8_t n = 0;
	for(uint8_t i = first_null+1; i<255; i++){
 4f4:	9f 5f       	subi	r25, 0xFF	; 255
 4f6:	9f 3f       	cpi	r25, 0xFF	; 255
 4f8:	89 f7       	brne	.-30     	; 0x4dc <_Z6strcpyPcS_+0x6e>
 4fa:	0a c0       	rjmp	.+20     	; 0x510 <_Z6strcpyPcS_+0xa2>
			break;
		};
		if(i >= 254)return;
	};
	
	dst[first_null] = ' ';
 4fc:	80 e2       	ldi	r24, 0x20	; 32
 4fe:	8c 93       	st	X, r24
	
	uint8_t n = 0;
	for(uint8_t i = first_null+1; i<255; i++){
 500:	91 e0       	ldi	r25, 0x01	; 1
 502:	e0 cf       	rjmp	.-64     	; 0x4c4 <_Z6strcpyPcS_+0x56>
		};
		if(i >= 254)return;
	};
	
	for(uint8_t i=0; i<253; i++){
		if( scr[i] == '\n' ){
 504:	fb 01       	movw	r30, r22
 506:	80 81       	ld	r24, Z
 508:	8a 30       	cpi	r24, 0x0A	; 10
 50a:	c1 f3       	breq	.-16     	; 0x4fc <_Z6strcpyPcS_+0x8e>
 50c:	90 e0       	ldi	r25, 0x00	; 0
 50e:	c9 cf       	rjmp	.-110    	; 0x4a2 <_Z6strcpyPcS_+0x34>
		if( scr[n] == '\n' ){
			break;
		};
		n++;
	};
};
 510:	df 91       	pop	r29
 512:	cf 91       	pop	r28
 514:	08 95       	ret

00000516 <main>:

int main(void)
{
 516:	cf 93       	push	r28
 518:	df 93       	push	r29
 51a:	cd b7       	in	r28, 0x3d	; 61
 51c:	de b7       	in	r29, 0x3e	; 62
 51e:	c6 54       	subi	r28, 0x46	; 70
 520:	d1 40       	sbci	r29, 0x01	; 1
 522:	0f b6       	in	r0, 0x3f	; 63
 524:	f8 94       	cli
 526:	de bf       	out	0x3e, r29	; 62
 528:	0f be       	out	0x3f, r0	; 63
 52a:	cd bf       	out	0x3d, r28	; 61
	LCD lcd;
	lcd.Init();
 52c:	ce 01       	movw	r24, r28
 52e:	01 96       	adiw	r24, 0x01	; 1
 530:	0e 94 9c 00 	call	0x138	; 0x138 <_ZN3LCD4InitEv>

	lcd.Command(1);
 534:	61 e0       	ldi	r22, 0x01	; 1
 536:	ce 01       	movw	r24, r28
 538:	01 96       	adiw	r24, 0x01	; 1
 53a:	0e 94 69 00 	call	0xd2	; 0xd2 <_ZN3LCD7CommandEh>
	lcd.Command(2);
 53e:	62 e0       	ldi	r22, 0x02	; 2
 540:	ce 01       	movw	r24, r28
 542:	01 96       	adiw	r24, 0x01	; 1
 544:	0e 94 69 00 	call	0xd2	; 0xd2 <_ZN3LCD7CommandEh>
	lcd.Command(0x0C);
 548:	6c e0       	ldi	r22, 0x0C	; 12
 54a:	ce 01       	movw	r24, r28
 54c:	01 96       	adiw	r24, 0x01	; 1
 54e:	0e 94 69 00 	call	0xd2	; 0xd2 <_ZN3LCD7CommandEh>

	char str1[20];
	char str2[20];
	char str3[20];

	ADCSRA = (1<<ADEN)|(1<<ADPS2)|(1<<ADPS1)|(1<<ADPS0);
 552:	87 e8       	ldi	r24, 0x87	; 135
 554:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
	uint32_t avg_LTT = 0;
	uint8_t LTT_cnt = 0;

	uint16_t work_point = 580;

	pid.SetSetpoint(work_point);
 558:	40 e0       	ldi	r20, 0x00	; 0
 55a:	50 e0       	ldi	r21, 0x00	; 0
 55c:	61 e1       	ldi	r22, 0x11	; 17
 55e:	74 e4       	ldi	r23, 0x44	; 68
 560:	80 e0       	ldi	r24, 0x00	; 0
 562:	91 e0       	ldi	r25, 0x01	; 1
 564:	0e 94 d9 01 	call	0x3b2	; 0x3b2 <_ZN3PID11SetSetpointEf>
	
	uint8_t pid_en = 0;
 568:	ca 5b       	subi	r28, 0xBA	; 186
 56a:	de 4f       	sbci	r29, 0xFE	; 254
 56c:	18 82       	st	Y, r1
 56e:	c6 54       	subi	r28, 0x46	; 70
 570:	d1 40       	sbci	r29, 0x01	; 1
	uint16_t tavg = 0;
	uint8_t tcnt = 0;
	
	uint32_t longTermTemp[64];
	uint32_t avg_LTT = 0;
	uint8_t LTT_cnt = 0;
 572:	81 2c       	mov	r8, r1
	uint16_t t_adc[4];
	uint16_t tavg = 0;
	uint8_t tcnt = 0;
	
	uint32_t longTermTemp[64];
	uint32_t avg_LTT = 0;
 574:	c1 2c       	mov	r12, r1
 576:	d1 2c       	mov	r13, r1
 578:	76 01       	movw	r14, r12

	ADCSRA = (1<<ADEN)|(1<<ADPS2)|(1<<ADPS1)|(1<<ADPS0);

	uint16_t t_adc[4];
	uint16_t tavg = 0;
	uint8_t tcnt = 0;
 57a:	91 2c       	mov	r9, r1
	char str3[20];

	ADCSRA = (1<<ADEN)|(1<<ADPS2)|(1<<ADPS1)|(1<<ADPS0);

	uint16_t t_adc[4];
	uint16_t tavg = 0;
 57c:	a1 2c       	mov	r10, r1
 57e:	b1 2c       	mov	r11, r1
 580:	8e 01       	movw	r16, r28
 582:	0a 5b       	subi	r16, 0xBA	; 186
 584:	1e 4f       	sbci	r17, 0xFE	; 254
	float da = (float)(b) - (float)(a);
	float dc = (float)(d) - (float)(c);
	float dd = dc / da;
	float units = (float)(x - a);
	float result = (units * dd) + (float)c;
	return (int32_t)(result);
 586:	21 2c       	mov	r2, r1
 588:	31 2c       	mov	r3, r1
	
	uint8_t pid_en = 0;

	while (1)
	{
		CLR_T0;
 58a:	3a 9a       	sbi	0x07, 2	; 7
 58c:	42 98       	cbi	0x08, 2	; 8
		
		while(adc_read(1) > 700){};
 58e:	81 e0       	ldi	r24, 0x01	; 1
 590:	0e 94 0e 02 	call	0x41c	; 0x41c <_Z8adc_readh>
 594:	8d 3b       	cpi	r24, 0xBD	; 189
 596:	92 40       	sbci	r25, 0x02	; 2
 598:	d0 f7       	brcc	.-12     	; 0x58e <main+0x78>
		
		t_adc[tcnt] = adc_read(1);
 59a:	81 e0       	ldi	r24, 0x01	; 1
 59c:	0e 94 0e 02 	call	0x41c	; 0x41c <_Z8adc_readh>
 5a0:	e9 2d       	mov	r30, r9
 5a2:	f0 e0       	ldi	r31, 0x00	; 0
 5a4:	ee 0f       	add	r30, r30
 5a6:	ff 1f       	adc	r31, r31
 5a8:	21 e0       	ldi	r18, 0x01	; 1
 5aa:	30 e0       	ldi	r19, 0x00	; 0
 5ac:	2c 0f       	add	r18, r28
 5ae:	3d 1f       	adc	r19, r29
 5b0:	e2 0f       	add	r30, r18
 5b2:	f3 1f       	adc	r31, r19
 5b4:	96 af       	std	Z+62, r25	; 0x3e
 5b6:	85 af       	std	Z+61, r24	; 0x3d
		tcnt++;
 5b8:	93 94       	inc	r9
		if(tcnt>4){
 5ba:	34 e0       	ldi	r19, 0x04	; 4
 5bc:	39 15       	cp	r19, r9
 5be:	c8 f4       	brcc	.+50     	; 0x5f2 <main+0xdc>
			tcnt = 0;
			tavg = t_adc[0] + t_adc[1] + t_adc[2] + t_adc[3];
 5c0:	ae ac       	ldd	r10, Y+62	; 0x3e
 5c2:	bf ac       	ldd	r11, Y+63	; 0x3f
 5c4:	22 96       	adiw	r28, 0x02	; 2
 5c6:	8e ad       	ldd	r24, Y+62	; 0x3e
 5c8:	9f ad       	ldd	r25, Y+63	; 0x3f
 5ca:	22 97       	sbiw	r28, 0x02	; 2
 5cc:	a8 0e       	add	r10, r24
 5ce:	b9 1e       	adc	r11, r25
 5d0:	24 96       	adiw	r28, 0x04	; 4
 5d2:	8e ad       	ldd	r24, Y+62	; 0x3e
 5d4:	9f ad       	ldd	r25, Y+63	; 0x3f
 5d6:	24 97       	sbiw	r28, 0x04	; 4
 5d8:	a8 0e       	add	r10, r24
 5da:	b9 1e       	adc	r11, r25
 5dc:	26 96       	adiw	r28, 0x06	; 6
 5de:	8e ad       	ldd	r24, Y+62	; 0x3e
 5e0:	9f ad       	ldd	r25, Y+63	; 0x3f
 5e2:	26 97       	sbiw	r28, 0x06	; 6
 5e4:	a8 0e       	add	r10, r24
 5e6:	b9 1e       	adc	r11, r25
			tavg /= 4;
 5e8:	b6 94       	lsr	r11
 5ea:	a7 94       	ror	r10
 5ec:	b6 94       	lsr	r11
 5ee:	a7 94       	ror	r10
		while(adc_read(1) > 700){};
		
		t_adc[tcnt] = adc_read(1);
		tcnt++;
		if(tcnt>4){
			tcnt = 0;
 5f0:	91 2c       	mov	r9, r1
			tavg = t_adc[0] + t_adc[1] + t_adc[2] + t_adc[3];
			tavg /= 4;
		};
		
		longTermTemp[LTT_cnt] = tavg;
 5f2:	e6 e4       	ldi	r30, 0x46	; 70
 5f4:	f0 e0       	ldi	r31, 0x00	; 0
 5f6:	ec 0f       	add	r30, r28
 5f8:	fd 1f       	adc	r31, r29
 5fa:	84 e0       	ldi	r24, 0x04	; 4
 5fc:	88 9e       	mul	r8, r24
 5fe:	e0 0d       	add	r30, r0
 600:	f1 1d       	adc	r31, r1
 602:	11 24       	eor	r1, r1
 604:	c5 01       	movw	r24, r10
 606:	a0 e0       	ldi	r26, 0x00	; 0
 608:	b0 e0       	ldi	r27, 0x00	; 0
 60a:	80 83       	st	Z, r24
 60c:	91 83       	std	Z+1, r25	; 0x01
 60e:	a2 83       	std	Z+2, r26	; 0x02
 610:	b3 83       	std	Z+3, r27	; 0x03
		LTT_cnt++;
 612:	83 94       	inc	r8
		if(LTT_cnt > 64){
 614:	20 e4       	ldi	r18, 0x40	; 64
 616:	28 15       	cp	r18, r8
 618:	08 f4       	brcc	.+2      	; 0x61c <main+0x106>
			LTT_cnt = 0;
 61a:	81 2c       	mov	r8, r1
 61c:	fe 01       	movw	r30, r28
 61e:	ea 5b       	subi	r30, 0xBA	; 186
 620:	ff 4f       	sbci	r31, 0xFF	; 255
		};
		
		for(uint8_t i=0; i<64; i++){
			avg_LTT += longTermTemp[i];
 622:	81 91       	ld	r24, Z+
 624:	91 91       	ld	r25, Z+
 626:	a1 91       	ld	r26, Z+
 628:	b1 91       	ld	r27, Z+
 62a:	c8 0e       	add	r12, r24
 62c:	d9 1e       	adc	r13, r25
 62e:	ea 1e       	adc	r14, r26
 630:	fb 1e       	adc	r15, r27
		LTT_cnt++;
		if(LTT_cnt > 64){
			LTT_cnt = 0;
		};
		
		for(uint8_t i=0; i<64; i++){
 632:	e0 17       	cp	r30, r16
 634:	f1 07       	cpc	r31, r17
 636:	a9 f7       	brne	.-22     	; 0x622 <main+0x10c>
			avg_LTT += longTermTemp[i];
		};
		
		avg_LTT /= 64;
 638:	68 94       	set
 63a:	15 f8       	bld	r1, 5
 63c:	f6 94       	lsr	r15
 63e:	e7 94       	ror	r14
 640:	d7 94       	ror	r13
 642:	c7 94       	ror	r12
 644:	16 94       	lsr	r1
 646:	d1 f7       	brne	.-12     	; 0x63c <main+0x126>
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
 648:	4a e0       	ldi	r20, 0x0A	; 10
 64a:	be 01       	movw	r22, r28
 64c:	66 5d       	subi	r22, 0xD6	; 214
 64e:	7f 4f       	sbci	r23, 0xFF	; 255
 650:	c6 01       	movw	r24, r12
 652:	0e 94 1f 06 	call	0xc3e	; 0xc3e <__itoa_ncheck>
		
		itoa(avg_LTT, str3, 10);
		cstr(str3);
 656:	ce 01       	movw	r24, r28
 658:	8a 96       	adiw	r24, 0x2a	; 42
 65a:	0e 94 23 02 	call	0x446	; 0x446 <_Z4cstrPc>
		
		float r = 0;
		
		if( pid_en == 1 ){
 65e:	ca 5b       	subi	r28, 0xBA	; 186
 660:	de 4f       	sbci	r29, 0xFE	; 254
 662:	38 81       	ld	r19, Y
 664:	c6 54       	subi	r28, 0x46	; 70
 666:	d1 40       	sbci	r29, 0x01	; 1
 668:	31 30       	cpi	r19, 0x01	; 1
 66a:	09 f0       	breq	.+2      	; 0x66e <main+0x158>
 66c:	3f c0       	rjmp	.+126    	; 0x6ec <main+0x1d6>
			pid.Feed((float)(tavg));
 66e:	b5 01       	movw	r22, r10
 670:	80 e0       	ldi	r24, 0x00	; 0
 672:	90 e0       	ldi	r25, 0x00	; 0
 674:	0e 94 1e 05 	call	0xa3c	; 0xa3c <__floatunsisf>
 678:	ab 01       	movw	r20, r22
 67a:	bc 01       	movw	r22, r24
 67c:	80 e0       	ldi	r24, 0x00	; 0
 67e:	91 e0       	ldi	r25, 0x01	; 1
 680:	0e 94 df 01 	call	0x3be	; 0x3be <_ZN3PID4FeedEf>
			pid.Compute();
 684:	80 e0       	ldi	r24, 0x00	; 0
 686:	91 e0       	ldi	r25, 0x01	; 1
 688:	0e 94 36 01 	call	0x26c	; 0x26c <_ZN3PID7ComputeEv>
			r = pid.Output();
 68c:	80 e0       	ldi	r24, 0x00	; 0
 68e:	91 e0       	ldi	r25, 0x01	; 1
 690:	0e 94 e5 01 	call	0x3ca	; 0x3ca <_ZN3PID6OutputEv>
	float da = (float)(b) - (float)(a);
	float dc = (float)(d) - (float)(c);
	float dd = dc / da;
	float units = (float)(x - a);
	float result = (units * dd) + (float)c;
	return (int32_t)(result);
 694:	20 e0       	ldi	r18, 0x00	; 0
 696:	30 e4       	ldi	r19, 0x40	; 64
 698:	4c e9       	ldi	r20, 0x9C	; 156
 69a:	56 e4       	ldi	r21, 0x46	; 70
 69c:	0e 94 0a 04 	call	0x814	; 0x814 <__addsf3>
 6a0:	20 e0       	ldi	r18, 0x00	; 0
 6a2:	30 e4       	ldi	r19, 0x40	; 64
 6a4:	4c e9       	ldi	r20, 0x9C	; 156
 6a6:	56 e4       	ldi	r21, 0x46	; 70
 6a8:	0e 94 09 04 	call	0x812	; 0x812 <__subsf3>
 6ac:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <__fixsfsi>
 6b0:	2b 01       	movw	r4, r22
 6b2:	3c 01       	movw	r6, r24
			r = 10000;
		};
		
		int32_t time = mmap(r, -20000, 20000, -20000, 20000);
		
		if( time >= 20000 ){
 6b4:	80 e2       	ldi	r24, 0x20	; 32
 6b6:	48 16       	cp	r4, r24
 6b8:	8e e4       	ldi	r24, 0x4E	; 78
 6ba:	58 06       	cpc	r5, r24
 6bc:	61 04       	cpc	r6, r1
 6be:	71 04       	cpc	r7, r1
 6c0:	fc f4       	brge	.+62     	; 0x700 <main+0x1ea>
			time = 20000;
		};
		
		if( time <= -20000 ){
 6c2:	21 ee       	ldi	r18, 0xE1	; 225
 6c4:	42 16       	cp	r4, r18
 6c6:	21 eb       	ldi	r18, 0xB1	; 177
 6c8:	52 06       	cpc	r5, r18
 6ca:	2f ef       	ldi	r18, 0xFF	; 255
 6cc:	62 06       	cpc	r6, r18
 6ce:	72 06       	cpc	r7, r18
 6d0:	fc f4       	brge	.+62     	; 0x710 <main+0x1fa>
			time = -20000;
 6d2:	0f 2e       	mov	r0, r31
 6d4:	f0 ee       	ldi	r31, 0xE0	; 224
 6d6:	4f 2e       	mov	r4, r31
 6d8:	f0 2d       	mov	r31, r0
 6da:	0f 2e       	mov	r0, r31
 6dc:	f1 eb       	ldi	r31, 0xB1	; 177
 6de:	5f 2e       	mov	r5, r31
 6e0:	f0 2d       	mov	r31, r0
 6e2:	66 24       	eor	r6, r6
 6e4:	6a 94       	dec	r6
 6e6:	77 24       	eor	r7, r7
 6e8:	7a 94       	dec	r7
 6ea:	12 c0       	rjmp	.+36     	; 0x710 <main+0x1fa>
	float da = (float)(b) - (float)(a);
	float dc = (float)(d) - (float)(c);
	float dd = dc / da;
	float units = (float)(x - a);
	float result = (units * dd) + (float)c;
	return (int32_t)(result);
 6ec:	68 94       	set
 6ee:	44 24       	eor	r4, r4
 6f0:	44 f8       	bld	r4, 4
 6f2:	0f 2e       	mov	r0, r31
 6f4:	f7 e2       	ldi	r31, 0x27	; 39
 6f6:	5f 2e       	mov	r5, r31
 6f8:	f0 2d       	mov	r31, r0
 6fa:	62 2c       	mov	r6, r2
 6fc:	73 2c       	mov	r7, r3
 6fe:	08 c0       	rjmp	.+16     	; 0x710 <main+0x1fa>
		};
		
		int32_t time = mmap(r, -20000, 20000, -20000, 20000);
		
		if( time >= 20000 ){
			time = 20000;
 700:	0f 2e       	mov	r0, r31
 702:	f0 e2       	ldi	r31, 0x20	; 32
 704:	4f 2e       	mov	r4, r31
 706:	fe e4       	ldi	r31, 0x4E	; 78
 708:	5f 2e       	mov	r5, r31
 70a:	61 2c       	mov	r6, r1
 70c:	71 2c       	mov	r7, r1
 70e:	f0 2d       	mov	r31, r0
 710:	4a e0       	ldi	r20, 0x0A	; 10
 712:	be 01       	movw	r22, r28
 714:	6e 5f       	subi	r22, 0xFE	; 254
 716:	7f 4f       	sbci	r23, 0xFF	; 255
 718:	c2 01       	movw	r24, r4
 71a:	0e 94 1f 06 	call	0xc3e	; 0xc3e <__itoa_ncheck>
		if( time <= -20000 ){
			time = -20000;
		};
		
		itoa(time, str1, 10);
		cstr(str1);
 71e:	ce 01       	movw	r24, r28
 720:	02 96       	adiw	r24, 0x02	; 2
 722:	0e 94 23 02 	call	0x446	; 0x446 <_Z4cstrPc>
		
		lcd.GoToFirstLine();
 726:	ce 01       	movw	r24, r28
 728:	01 96       	adiw	r24, 0x01	; 1
 72a:	0e 94 2e 01 	call	0x25c	; 0x25c <_ZN3LCD13GoToFirstLineEv>
		lcd.WriteString(str1);
 72e:	be 01       	movw	r22, r28
 730:	6e 5f       	subi	r22, 0xFE	; 254
 732:	7f 4f       	sbci	r23, 0xFF	; 255
 734:	ce 01       	movw	r24, r28
 736:	01 96       	adiw	r24, 0x01	; 1
 738:	0e 94 ee 00 	call	0x1dc	; 0x1dc <_ZN3LCD11WriteStringEPc>
 73c:	4a e0       	ldi	r20, 0x0A	; 10
 73e:	be 01       	movw	r22, r28
 740:	6a 5e       	subi	r22, 0xEA	; 234
 742:	7f 4f       	sbci	r23, 0xFF	; 255
 744:	c5 01       	movw	r24, r10
 746:	0e 94 1f 06 	call	0xc3e	; 0xc3e <__itoa_ncheck>
		
		itoa((uint16_t)(tavg), str2, 10);
		cstr(str2);
 74a:	ce 01       	movw	r24, r28
 74c:	46 96       	adiw	r24, 0x16	; 22
 74e:	0e 94 23 02 	call	0x446	; 0x446 <_Z4cstrPc>
		
		strcpy(str2, str3);
 752:	be 01       	movw	r22, r28
 754:	66 5d       	subi	r22, 0xD6	; 214
 756:	7f 4f       	sbci	r23, 0xFF	; 255
 758:	ce 01       	movw	r24, r28
 75a:	46 96       	adiw	r24, 0x16	; 22
 75c:	0e 94 37 02 	call	0x46e	; 0x46e <_Z6strcpyPcS_>
		
		lcd.GoToSecondLine();
 760:	ce 01       	movw	r24, r28
 762:	01 96       	adiw	r24, 0x01	; 1
 764:	0e 94 32 01 	call	0x264	; 0x264 <_ZN3LCD14GoToSecondLineEv>
		lcd.WriteString(str2);
 768:	be 01       	movw	r22, r28
 76a:	6a 5e       	subi	r22, 0xEA	; 234
 76c:	7f 4f       	sbci	r23, 0xFF	; 255
 76e:	ce 01       	movw	r24, r28
 770:	01 96       	adiw	r24, 0x01	; 1
 772:	0e 94 ee 00 	call	0x1dc	; 0x1dc <_ZN3LCD11WriteStringEPc>
		
		if(tavg > work_point){
 776:	35 e4       	ldi	r19, 0x45	; 69
 778:	a3 16       	cp	r10, r19
 77a:	32 e0       	ldi	r19, 0x02	; 2
 77c:	b3 06       	cpc	r11, r19
 77e:	98 f0       	brcs	.+38     	; 0x7a6 <main+0x290>
			CLR_T0;
 780:	3a 9a       	sbi	0x07, 2	; 7
 782:	42 98       	cbi	0x08, 2	; 8
			delay(20000-time);
 784:	60 e2       	ldi	r22, 0x20	; 32
 786:	7e e4       	ldi	r23, 0x4E	; 78
 788:	80 e0       	ldi	r24, 0x00	; 0
 78a:	90 e0       	ldi	r25, 0x00	; 0
 78c:	64 19       	sub	r22, r4
 78e:	75 09       	sbc	r23, r5
 790:	86 09       	sbc	r24, r6
 792:	97 09       	sbc	r25, r7
 794:	0e 94 eb 01 	call	0x3d6	; 0x3d6 <_Z5delaym>
			pid_en = 1;
 798:	81 e0       	ldi	r24, 0x01	; 1
 79a:	ca 5b       	subi	r28, 0xBA	; 186
 79c:	de 4f       	sbci	r29, 0xFE	; 254
 79e:	88 83       	st	Y, r24
 7a0:	c6 54       	subi	r28, 0x46	; 70
 7a2:	d1 40       	sbci	r29, 0x01	; 1
 7a4:	f2 ce       	rjmp	.-540    	; 0x58a <main+0x74>
		}else{
			SET_T0;
 7a6:	3a 9a       	sbi	0x07, 2	; 7
 7a8:	42 9a       	sbi	0x08, 2	; 8
			delay(20000+time);
 7aa:	c3 01       	movw	r24, r6
 7ac:	b2 01       	movw	r22, r4
 7ae:	60 5e       	subi	r22, 0xE0	; 224
 7b0:	71 4b       	sbci	r23, 0xB1	; 177
 7b2:	8f 4f       	sbci	r24, 0xFF	; 255
 7b4:	9f 4f       	sbci	r25, 0xFF	; 255
 7b6:	0e 94 eb 01 	call	0x3d6	; 0x3d6 <_Z5delaym>
 7ba:	e7 ce       	rjmp	.-562    	; 0x58a <main+0x74>

000007bc <_GLOBAL__sub_I_pid>:
	float measure;
public:

	float setpoint;
	PID(float _kt, float _kp, float _ki, float _kd, float _val)
	:kt(_kt), kp(_kp), ki(_ki), kd(_kd), measure(_val) {};
 7bc:	e0 e0       	ldi	r30, 0x00	; 0
 7be:	f1 e0       	ldi	r31, 0x01	; 1
 7c0:	8f e8       	ldi	r24, 0x8F	; 143
 7c2:	92 ec       	ldi	r25, 0xC2	; 194
 7c4:	a5 ef       	ldi	r26, 0xF5	; 245
 7c6:	be e3       	ldi	r27, 0x3E	; 62
 7c8:	84 8b       	std	Z+20, r24	; 0x14
 7ca:	95 8b       	std	Z+21, r25	; 0x15
 7cc:	a6 8b       	std	Z+22, r26	; 0x16
 7ce:	b7 8b       	std	Z+23, r27	; 0x17
 7d0:	80 e0       	ldi	r24, 0x00	; 0
 7d2:	90 e0       	ldi	r25, 0x00	; 0
 7d4:	aa ef       	ldi	r26, 0xFA	; 250
 7d6:	b3 e4       	ldi	r27, 0x43	; 67
 7d8:	80 8f       	std	Z+24, r24	; 0x18
 7da:	91 8f       	std	Z+25, r25	; 0x19
 7dc:	a2 8f       	std	Z+26, r26	; 0x1a
 7de:	b3 8f       	std	Z+27, r27	; 0x1b
 7e0:	83 e3       	ldi	r24, 0x33	; 51
 7e2:	93 e3       	ldi	r25, 0x33	; 51
 7e4:	a4 ef       	ldi	r26, 0xF4	; 244
 7e6:	b2 e4       	ldi	r27, 0x42	; 66
 7e8:	84 8f       	std	Z+28, r24	; 0x1c
 7ea:	95 8f       	std	Z+29, r25	; 0x1d
 7ec:	a6 8f       	std	Z+30, r26	; 0x1e
 7ee:	b7 8f       	std	Z+31, r27	; 0x1f
 7f0:	80 e0       	ldi	r24, 0x00	; 0
 7f2:	90 e0       	ldi	r25, 0x00	; 0
 7f4:	a0 e2       	ldi	r26, 0x20	; 32
 7f6:	b1 e4       	ldi	r27, 0x41	; 65
 7f8:	80 a3       	std	Z+32, r24	; 0x20
 7fa:	91 a3       	std	Z+33, r25	; 0x21
 7fc:	a2 a3       	std	Z+34, r26	; 0x22
 7fe:	b3 a3       	std	Z+35, r27	; 0x23
 800:	80 e0       	ldi	r24, 0x00	; 0
 802:	90 e0       	ldi	r25, 0x00	; 0
 804:	af e2       	ldi	r26, 0x2F	; 47
 806:	b4 e4       	ldi	r27, 0x44	; 68
 808:	84 a3       	std	Z+36, r24	; 0x24
 80a:	95 a3       	std	Z+37, r25	; 0x25
 80c:	a6 a3       	std	Z+38, r26	; 0x26
 80e:	b7 a3       	std	Z+39, r27	; 0x27
 810:	08 95       	ret

00000812 <__subsf3>:
 812:	50 58       	subi	r21, 0x80	; 128

00000814 <__addsf3>:
 814:	bb 27       	eor	r27, r27
 816:	aa 27       	eor	r26, r26
 818:	0e 94 21 04 	call	0x842	; 0x842 <__addsf3x>
 81c:	0c 94 72 05 	jmp	0xae4	; 0xae4 <__fp_round>
 820:	0e 94 64 05 	call	0xac8	; 0xac8 <__fp_pscA>
 824:	38 f0       	brcs	.+14     	; 0x834 <__addsf3+0x20>
 826:	0e 94 6b 05 	call	0xad6	; 0xad6 <__fp_pscB>
 82a:	20 f0       	brcs	.+8      	; 0x834 <__addsf3+0x20>
 82c:	39 f4       	brne	.+14     	; 0x83c <__addsf3+0x28>
 82e:	9f 3f       	cpi	r25, 0xFF	; 255
 830:	19 f4       	brne	.+6      	; 0x838 <__addsf3+0x24>
 832:	26 f4       	brtc	.+8      	; 0x83c <__addsf3+0x28>
 834:	0c 94 61 05 	jmp	0xac2	; 0xac2 <__fp_nan>
 838:	0e f4       	brtc	.+2      	; 0x83c <__addsf3+0x28>
 83a:	e0 95       	com	r30
 83c:	e7 fb       	bst	r30, 7
 83e:	0c 94 5b 05 	jmp	0xab6	; 0xab6 <__fp_inf>

00000842 <__addsf3x>:
 842:	e9 2f       	mov	r30, r25
 844:	0e 94 83 05 	call	0xb06	; 0xb06 <__fp_split3>
 848:	58 f3       	brcs	.-42     	; 0x820 <__addsf3+0xc>
 84a:	ba 17       	cp	r27, r26
 84c:	62 07       	cpc	r22, r18
 84e:	73 07       	cpc	r23, r19
 850:	84 07       	cpc	r24, r20
 852:	95 07       	cpc	r25, r21
 854:	20 f0       	brcs	.+8      	; 0x85e <__addsf3x+0x1c>
 856:	79 f4       	brne	.+30     	; 0x876 <__addsf3x+0x34>
 858:	a6 f5       	brtc	.+104    	; 0x8c2 <__addsf3x+0x80>
 85a:	0c 94 a5 05 	jmp	0xb4a	; 0xb4a <__fp_zero>
 85e:	0e f4       	brtc	.+2      	; 0x862 <__addsf3x+0x20>
 860:	e0 95       	com	r30
 862:	0b 2e       	mov	r0, r27
 864:	ba 2f       	mov	r27, r26
 866:	a0 2d       	mov	r26, r0
 868:	0b 01       	movw	r0, r22
 86a:	b9 01       	movw	r22, r18
 86c:	90 01       	movw	r18, r0
 86e:	0c 01       	movw	r0, r24
 870:	ca 01       	movw	r24, r20
 872:	a0 01       	movw	r20, r0
 874:	11 24       	eor	r1, r1
 876:	ff 27       	eor	r31, r31
 878:	59 1b       	sub	r21, r25
 87a:	99 f0       	breq	.+38     	; 0x8a2 <__addsf3x+0x60>
 87c:	59 3f       	cpi	r21, 0xF9	; 249
 87e:	50 f4       	brcc	.+20     	; 0x894 <__addsf3x+0x52>
 880:	50 3e       	cpi	r21, 0xE0	; 224
 882:	68 f1       	brcs	.+90     	; 0x8de <__addsf3x+0x9c>
 884:	1a 16       	cp	r1, r26
 886:	f0 40       	sbci	r31, 0x00	; 0
 888:	a2 2f       	mov	r26, r18
 88a:	23 2f       	mov	r18, r19
 88c:	34 2f       	mov	r19, r20
 88e:	44 27       	eor	r20, r20
 890:	58 5f       	subi	r21, 0xF8	; 248
 892:	f3 cf       	rjmp	.-26     	; 0x87a <__addsf3x+0x38>
 894:	46 95       	lsr	r20
 896:	37 95       	ror	r19
 898:	27 95       	ror	r18
 89a:	a7 95       	ror	r26
 89c:	f0 40       	sbci	r31, 0x00	; 0
 89e:	53 95       	inc	r21
 8a0:	c9 f7       	brne	.-14     	; 0x894 <__addsf3x+0x52>
 8a2:	7e f4       	brtc	.+30     	; 0x8c2 <__addsf3x+0x80>
 8a4:	1f 16       	cp	r1, r31
 8a6:	ba 0b       	sbc	r27, r26
 8a8:	62 0b       	sbc	r22, r18
 8aa:	73 0b       	sbc	r23, r19
 8ac:	84 0b       	sbc	r24, r20
 8ae:	ba f0       	brmi	.+46     	; 0x8de <__addsf3x+0x9c>
 8b0:	91 50       	subi	r25, 0x01	; 1
 8b2:	a1 f0       	breq	.+40     	; 0x8dc <__addsf3x+0x9a>
 8b4:	ff 0f       	add	r31, r31
 8b6:	bb 1f       	adc	r27, r27
 8b8:	66 1f       	adc	r22, r22
 8ba:	77 1f       	adc	r23, r23
 8bc:	88 1f       	adc	r24, r24
 8be:	c2 f7       	brpl	.-16     	; 0x8b0 <__addsf3x+0x6e>
 8c0:	0e c0       	rjmp	.+28     	; 0x8de <__addsf3x+0x9c>
 8c2:	ba 0f       	add	r27, r26
 8c4:	62 1f       	adc	r22, r18
 8c6:	73 1f       	adc	r23, r19
 8c8:	84 1f       	adc	r24, r20
 8ca:	48 f4       	brcc	.+18     	; 0x8de <__addsf3x+0x9c>
 8cc:	87 95       	ror	r24
 8ce:	77 95       	ror	r23
 8d0:	67 95       	ror	r22
 8d2:	b7 95       	ror	r27
 8d4:	f7 95       	ror	r31
 8d6:	9e 3f       	cpi	r25, 0xFE	; 254
 8d8:	08 f0       	brcs	.+2      	; 0x8dc <__addsf3x+0x9a>
 8da:	b0 cf       	rjmp	.-160    	; 0x83c <__addsf3+0x28>
 8dc:	93 95       	inc	r25
 8de:	88 0f       	add	r24, r24
 8e0:	08 f0       	brcs	.+2      	; 0x8e4 <__addsf3x+0xa2>
 8e2:	99 27       	eor	r25, r25
 8e4:	ee 0f       	add	r30, r30
 8e6:	97 95       	ror	r25
 8e8:	87 95       	ror	r24
 8ea:	08 95       	ret

000008ec <__divsf3>:
 8ec:	0e 94 8a 04 	call	0x914	; 0x914 <__divsf3x>
 8f0:	0c 94 72 05 	jmp	0xae4	; 0xae4 <__fp_round>
 8f4:	0e 94 6b 05 	call	0xad6	; 0xad6 <__fp_pscB>
 8f8:	58 f0       	brcs	.+22     	; 0x910 <__stack+0x11>
 8fa:	0e 94 64 05 	call	0xac8	; 0xac8 <__fp_pscA>
 8fe:	40 f0       	brcs	.+16     	; 0x910 <__stack+0x11>
 900:	29 f4       	brne	.+10     	; 0x90c <__stack+0xd>
 902:	5f 3f       	cpi	r21, 0xFF	; 255
 904:	29 f0       	breq	.+10     	; 0x910 <__stack+0x11>
 906:	0c 94 5b 05 	jmp	0xab6	; 0xab6 <__fp_inf>
 90a:	51 11       	cpse	r21, r1
 90c:	0c 94 a6 05 	jmp	0xb4c	; 0xb4c <__fp_szero>
 910:	0c 94 61 05 	jmp	0xac2	; 0xac2 <__fp_nan>

00000914 <__divsf3x>:
 914:	0e 94 83 05 	call	0xb06	; 0xb06 <__fp_split3>
 918:	68 f3       	brcs	.-38     	; 0x8f4 <__divsf3+0x8>

0000091a <__divsf3_pse>:
 91a:	99 23       	and	r25, r25
 91c:	b1 f3       	breq	.-20     	; 0x90a <__stack+0xb>
 91e:	55 23       	and	r21, r21
 920:	91 f3       	breq	.-28     	; 0x906 <__stack+0x7>
 922:	95 1b       	sub	r25, r21
 924:	55 0b       	sbc	r21, r21
 926:	bb 27       	eor	r27, r27
 928:	aa 27       	eor	r26, r26
 92a:	62 17       	cp	r22, r18
 92c:	73 07       	cpc	r23, r19
 92e:	84 07       	cpc	r24, r20
 930:	38 f0       	brcs	.+14     	; 0x940 <__divsf3_pse+0x26>
 932:	9f 5f       	subi	r25, 0xFF	; 255
 934:	5f 4f       	sbci	r21, 0xFF	; 255
 936:	22 0f       	add	r18, r18
 938:	33 1f       	adc	r19, r19
 93a:	44 1f       	adc	r20, r20
 93c:	aa 1f       	adc	r26, r26
 93e:	a9 f3       	breq	.-22     	; 0x92a <__divsf3_pse+0x10>
 940:	35 d0       	rcall	.+106    	; 0x9ac <__divsf3_pse+0x92>
 942:	0e 2e       	mov	r0, r30
 944:	3a f0       	brmi	.+14     	; 0x954 <__divsf3_pse+0x3a>
 946:	e0 e8       	ldi	r30, 0x80	; 128
 948:	32 d0       	rcall	.+100    	; 0x9ae <__divsf3_pse+0x94>
 94a:	91 50       	subi	r25, 0x01	; 1
 94c:	50 40       	sbci	r21, 0x00	; 0
 94e:	e6 95       	lsr	r30
 950:	00 1c       	adc	r0, r0
 952:	ca f7       	brpl	.-14     	; 0x946 <__divsf3_pse+0x2c>
 954:	2b d0       	rcall	.+86     	; 0x9ac <__divsf3_pse+0x92>
 956:	fe 2f       	mov	r31, r30
 958:	29 d0       	rcall	.+82     	; 0x9ac <__divsf3_pse+0x92>
 95a:	66 0f       	add	r22, r22
 95c:	77 1f       	adc	r23, r23
 95e:	88 1f       	adc	r24, r24
 960:	bb 1f       	adc	r27, r27
 962:	26 17       	cp	r18, r22
 964:	37 07       	cpc	r19, r23
 966:	48 07       	cpc	r20, r24
 968:	ab 07       	cpc	r26, r27
 96a:	b0 e8       	ldi	r27, 0x80	; 128
 96c:	09 f0       	breq	.+2      	; 0x970 <__divsf3_pse+0x56>
 96e:	bb 0b       	sbc	r27, r27
 970:	80 2d       	mov	r24, r0
 972:	bf 01       	movw	r22, r30
 974:	ff 27       	eor	r31, r31
 976:	93 58       	subi	r25, 0x83	; 131
 978:	5f 4f       	sbci	r21, 0xFF	; 255
 97a:	3a f0       	brmi	.+14     	; 0x98a <__divsf3_pse+0x70>
 97c:	9e 3f       	cpi	r25, 0xFE	; 254
 97e:	51 05       	cpc	r21, r1
 980:	78 f0       	brcs	.+30     	; 0x9a0 <__divsf3_pse+0x86>
 982:	0c 94 5b 05 	jmp	0xab6	; 0xab6 <__fp_inf>
 986:	0c 94 a6 05 	jmp	0xb4c	; 0xb4c <__fp_szero>
 98a:	5f 3f       	cpi	r21, 0xFF	; 255
 98c:	e4 f3       	brlt	.-8      	; 0x986 <__divsf3_pse+0x6c>
 98e:	98 3e       	cpi	r25, 0xE8	; 232
 990:	d4 f3       	brlt	.-12     	; 0x986 <__divsf3_pse+0x6c>
 992:	86 95       	lsr	r24
 994:	77 95       	ror	r23
 996:	67 95       	ror	r22
 998:	b7 95       	ror	r27
 99a:	f7 95       	ror	r31
 99c:	9f 5f       	subi	r25, 0xFF	; 255
 99e:	c9 f7       	brne	.-14     	; 0x992 <__divsf3_pse+0x78>
 9a0:	88 0f       	add	r24, r24
 9a2:	91 1d       	adc	r25, r1
 9a4:	96 95       	lsr	r25
 9a6:	87 95       	ror	r24
 9a8:	97 f9       	bld	r25, 7
 9aa:	08 95       	ret
 9ac:	e1 e0       	ldi	r30, 0x01	; 1
 9ae:	66 0f       	add	r22, r22
 9b0:	77 1f       	adc	r23, r23
 9b2:	88 1f       	adc	r24, r24
 9b4:	bb 1f       	adc	r27, r27
 9b6:	62 17       	cp	r22, r18
 9b8:	73 07       	cpc	r23, r19
 9ba:	84 07       	cpc	r24, r20
 9bc:	ba 07       	cpc	r27, r26
 9be:	20 f0       	brcs	.+8      	; 0x9c8 <__divsf3_pse+0xae>
 9c0:	62 1b       	sub	r22, r18
 9c2:	73 0b       	sbc	r23, r19
 9c4:	84 0b       	sbc	r24, r20
 9c6:	ba 0b       	sbc	r27, r26
 9c8:	ee 1f       	adc	r30, r30
 9ca:	88 f7       	brcc	.-30     	; 0x9ae <__divsf3_pse+0x94>
 9cc:	e0 95       	com	r30
 9ce:	08 95       	ret

000009d0 <__fixsfsi>:
 9d0:	0e 94 ef 04 	call	0x9de	; 0x9de <__fixunssfsi>
 9d4:	68 94       	set
 9d6:	b1 11       	cpse	r27, r1
 9d8:	0c 94 a6 05 	jmp	0xb4c	; 0xb4c <__fp_szero>
 9dc:	08 95       	ret

000009de <__fixunssfsi>:
 9de:	0e 94 8b 05 	call	0xb16	; 0xb16 <__fp_splitA>
 9e2:	88 f0       	brcs	.+34     	; 0xa06 <__fixunssfsi+0x28>
 9e4:	9f 57       	subi	r25, 0x7F	; 127
 9e6:	98 f0       	brcs	.+38     	; 0xa0e <__fixunssfsi+0x30>
 9e8:	b9 2f       	mov	r27, r25
 9ea:	99 27       	eor	r25, r25
 9ec:	b7 51       	subi	r27, 0x17	; 23
 9ee:	b0 f0       	brcs	.+44     	; 0xa1c <__fixunssfsi+0x3e>
 9f0:	e1 f0       	breq	.+56     	; 0xa2a <__fixunssfsi+0x4c>
 9f2:	66 0f       	add	r22, r22
 9f4:	77 1f       	adc	r23, r23
 9f6:	88 1f       	adc	r24, r24
 9f8:	99 1f       	adc	r25, r25
 9fa:	1a f0       	brmi	.+6      	; 0xa02 <__fixunssfsi+0x24>
 9fc:	ba 95       	dec	r27
 9fe:	c9 f7       	brne	.-14     	; 0x9f2 <__fixunssfsi+0x14>
 a00:	14 c0       	rjmp	.+40     	; 0xa2a <__fixunssfsi+0x4c>
 a02:	b1 30       	cpi	r27, 0x01	; 1
 a04:	91 f0       	breq	.+36     	; 0xa2a <__fixunssfsi+0x4c>
 a06:	0e 94 a5 05 	call	0xb4a	; 0xb4a <__fp_zero>
 a0a:	b1 e0       	ldi	r27, 0x01	; 1
 a0c:	08 95       	ret
 a0e:	0c 94 a5 05 	jmp	0xb4a	; 0xb4a <__fp_zero>
 a12:	67 2f       	mov	r22, r23
 a14:	78 2f       	mov	r23, r24
 a16:	88 27       	eor	r24, r24
 a18:	b8 5f       	subi	r27, 0xF8	; 248
 a1a:	39 f0       	breq	.+14     	; 0xa2a <__fixunssfsi+0x4c>
 a1c:	b9 3f       	cpi	r27, 0xF9	; 249
 a1e:	cc f3       	brlt	.-14     	; 0xa12 <__fixunssfsi+0x34>
 a20:	86 95       	lsr	r24
 a22:	77 95       	ror	r23
 a24:	67 95       	ror	r22
 a26:	b3 95       	inc	r27
 a28:	d9 f7       	brne	.-10     	; 0xa20 <__fixunssfsi+0x42>
 a2a:	3e f4       	brtc	.+14     	; 0xa3a <__fixunssfsi+0x5c>
 a2c:	90 95       	com	r25
 a2e:	80 95       	com	r24
 a30:	70 95       	com	r23
 a32:	61 95       	neg	r22
 a34:	7f 4f       	sbci	r23, 0xFF	; 255
 a36:	8f 4f       	sbci	r24, 0xFF	; 255
 a38:	9f 4f       	sbci	r25, 0xFF	; 255
 a3a:	08 95       	ret

00000a3c <__floatunsisf>:
 a3c:	e8 94       	clt
 a3e:	09 c0       	rjmp	.+18     	; 0xa52 <__floatsisf+0x12>

00000a40 <__floatsisf>:
 a40:	97 fb       	bst	r25, 7
 a42:	3e f4       	brtc	.+14     	; 0xa52 <__floatsisf+0x12>
 a44:	90 95       	com	r25
 a46:	80 95       	com	r24
 a48:	70 95       	com	r23
 a4a:	61 95       	neg	r22
 a4c:	7f 4f       	sbci	r23, 0xFF	; 255
 a4e:	8f 4f       	sbci	r24, 0xFF	; 255
 a50:	9f 4f       	sbci	r25, 0xFF	; 255
 a52:	99 23       	and	r25, r25
 a54:	a9 f0       	breq	.+42     	; 0xa80 <__floatsisf+0x40>
 a56:	f9 2f       	mov	r31, r25
 a58:	96 e9       	ldi	r25, 0x96	; 150
 a5a:	bb 27       	eor	r27, r27
 a5c:	93 95       	inc	r25
 a5e:	f6 95       	lsr	r31
 a60:	87 95       	ror	r24
 a62:	77 95       	ror	r23
 a64:	67 95       	ror	r22
 a66:	b7 95       	ror	r27
 a68:	f1 11       	cpse	r31, r1
 a6a:	f8 cf       	rjmp	.-16     	; 0xa5c <__floatsisf+0x1c>
 a6c:	fa f4       	brpl	.+62     	; 0xaac <__floatsisf+0x6c>
 a6e:	bb 0f       	add	r27, r27
 a70:	11 f4       	brne	.+4      	; 0xa76 <__floatsisf+0x36>
 a72:	60 ff       	sbrs	r22, 0
 a74:	1b c0       	rjmp	.+54     	; 0xaac <__floatsisf+0x6c>
 a76:	6f 5f       	subi	r22, 0xFF	; 255
 a78:	7f 4f       	sbci	r23, 0xFF	; 255
 a7a:	8f 4f       	sbci	r24, 0xFF	; 255
 a7c:	9f 4f       	sbci	r25, 0xFF	; 255
 a7e:	16 c0       	rjmp	.+44     	; 0xaac <__floatsisf+0x6c>
 a80:	88 23       	and	r24, r24
 a82:	11 f0       	breq	.+4      	; 0xa88 <__floatsisf+0x48>
 a84:	96 e9       	ldi	r25, 0x96	; 150
 a86:	11 c0       	rjmp	.+34     	; 0xaaa <__floatsisf+0x6a>
 a88:	77 23       	and	r23, r23
 a8a:	21 f0       	breq	.+8      	; 0xa94 <__floatsisf+0x54>
 a8c:	9e e8       	ldi	r25, 0x8E	; 142
 a8e:	87 2f       	mov	r24, r23
 a90:	76 2f       	mov	r23, r22
 a92:	05 c0       	rjmp	.+10     	; 0xa9e <__floatsisf+0x5e>
 a94:	66 23       	and	r22, r22
 a96:	71 f0       	breq	.+28     	; 0xab4 <__floatsisf+0x74>
 a98:	96 e8       	ldi	r25, 0x86	; 134
 a9a:	86 2f       	mov	r24, r22
 a9c:	70 e0       	ldi	r23, 0x00	; 0
 a9e:	60 e0       	ldi	r22, 0x00	; 0
 aa0:	2a f0       	brmi	.+10     	; 0xaac <__floatsisf+0x6c>
 aa2:	9a 95       	dec	r25
 aa4:	66 0f       	add	r22, r22
 aa6:	77 1f       	adc	r23, r23
 aa8:	88 1f       	adc	r24, r24
 aaa:	da f7       	brpl	.-10     	; 0xaa2 <__floatsisf+0x62>
 aac:	88 0f       	add	r24, r24
 aae:	96 95       	lsr	r25
 ab0:	87 95       	ror	r24
 ab2:	97 f9       	bld	r25, 7
 ab4:	08 95       	ret

00000ab6 <__fp_inf>:
 ab6:	97 f9       	bld	r25, 7
 ab8:	9f 67       	ori	r25, 0x7F	; 127
 aba:	80 e8       	ldi	r24, 0x80	; 128
 abc:	70 e0       	ldi	r23, 0x00	; 0
 abe:	60 e0       	ldi	r22, 0x00	; 0
 ac0:	08 95       	ret

00000ac2 <__fp_nan>:
 ac2:	9f ef       	ldi	r25, 0xFF	; 255
 ac4:	80 ec       	ldi	r24, 0xC0	; 192
 ac6:	08 95       	ret

00000ac8 <__fp_pscA>:
 ac8:	00 24       	eor	r0, r0
 aca:	0a 94       	dec	r0
 acc:	16 16       	cp	r1, r22
 ace:	17 06       	cpc	r1, r23
 ad0:	18 06       	cpc	r1, r24
 ad2:	09 06       	cpc	r0, r25
 ad4:	08 95       	ret

00000ad6 <__fp_pscB>:
 ad6:	00 24       	eor	r0, r0
 ad8:	0a 94       	dec	r0
 ada:	12 16       	cp	r1, r18
 adc:	13 06       	cpc	r1, r19
 ade:	14 06       	cpc	r1, r20
 ae0:	05 06       	cpc	r0, r21
 ae2:	08 95       	ret

00000ae4 <__fp_round>:
 ae4:	09 2e       	mov	r0, r25
 ae6:	03 94       	inc	r0
 ae8:	00 0c       	add	r0, r0
 aea:	11 f4       	brne	.+4      	; 0xaf0 <__fp_round+0xc>
 aec:	88 23       	and	r24, r24
 aee:	52 f0       	brmi	.+20     	; 0xb04 <__fp_round+0x20>
 af0:	bb 0f       	add	r27, r27
 af2:	40 f4       	brcc	.+16     	; 0xb04 <__fp_round+0x20>
 af4:	bf 2b       	or	r27, r31
 af6:	11 f4       	brne	.+4      	; 0xafc <__fp_round+0x18>
 af8:	60 ff       	sbrs	r22, 0
 afa:	04 c0       	rjmp	.+8      	; 0xb04 <__fp_round+0x20>
 afc:	6f 5f       	subi	r22, 0xFF	; 255
 afe:	7f 4f       	sbci	r23, 0xFF	; 255
 b00:	8f 4f       	sbci	r24, 0xFF	; 255
 b02:	9f 4f       	sbci	r25, 0xFF	; 255
 b04:	08 95       	ret

00000b06 <__fp_split3>:
 b06:	57 fd       	sbrc	r21, 7
 b08:	90 58       	subi	r25, 0x80	; 128
 b0a:	44 0f       	add	r20, r20
 b0c:	55 1f       	adc	r21, r21
 b0e:	59 f0       	breq	.+22     	; 0xb26 <__fp_splitA+0x10>
 b10:	5f 3f       	cpi	r21, 0xFF	; 255
 b12:	71 f0       	breq	.+28     	; 0xb30 <__fp_splitA+0x1a>
 b14:	47 95       	ror	r20

00000b16 <__fp_splitA>:
 b16:	88 0f       	add	r24, r24
 b18:	97 fb       	bst	r25, 7
 b1a:	99 1f       	adc	r25, r25
 b1c:	61 f0       	breq	.+24     	; 0xb36 <__fp_splitA+0x20>
 b1e:	9f 3f       	cpi	r25, 0xFF	; 255
 b20:	79 f0       	breq	.+30     	; 0xb40 <__fp_splitA+0x2a>
 b22:	87 95       	ror	r24
 b24:	08 95       	ret
 b26:	12 16       	cp	r1, r18
 b28:	13 06       	cpc	r1, r19
 b2a:	14 06       	cpc	r1, r20
 b2c:	55 1f       	adc	r21, r21
 b2e:	f2 cf       	rjmp	.-28     	; 0xb14 <__fp_split3+0xe>
 b30:	46 95       	lsr	r20
 b32:	f1 df       	rcall	.-30     	; 0xb16 <__fp_splitA>
 b34:	08 c0       	rjmp	.+16     	; 0xb46 <__fp_splitA+0x30>
 b36:	16 16       	cp	r1, r22
 b38:	17 06       	cpc	r1, r23
 b3a:	18 06       	cpc	r1, r24
 b3c:	99 1f       	adc	r25, r25
 b3e:	f1 cf       	rjmp	.-30     	; 0xb22 <__fp_splitA+0xc>
 b40:	86 95       	lsr	r24
 b42:	71 05       	cpc	r23, r1
 b44:	61 05       	cpc	r22, r1
 b46:	08 94       	sec
 b48:	08 95       	ret

00000b4a <__fp_zero>:
 b4a:	e8 94       	clt

00000b4c <__fp_szero>:
 b4c:	bb 27       	eor	r27, r27
 b4e:	66 27       	eor	r22, r22
 b50:	77 27       	eor	r23, r23
 b52:	cb 01       	movw	r24, r22
 b54:	97 f9       	bld	r25, 7
 b56:	08 95       	ret

00000b58 <__mulsf3>:
 b58:	0e 94 bf 05 	call	0xb7e	; 0xb7e <__mulsf3x>
 b5c:	0c 94 72 05 	jmp	0xae4	; 0xae4 <__fp_round>
 b60:	0e 94 64 05 	call	0xac8	; 0xac8 <__fp_pscA>
 b64:	38 f0       	brcs	.+14     	; 0xb74 <__mulsf3+0x1c>
 b66:	0e 94 6b 05 	call	0xad6	; 0xad6 <__fp_pscB>
 b6a:	20 f0       	brcs	.+8      	; 0xb74 <__mulsf3+0x1c>
 b6c:	95 23       	and	r25, r21
 b6e:	11 f0       	breq	.+4      	; 0xb74 <__mulsf3+0x1c>
 b70:	0c 94 5b 05 	jmp	0xab6	; 0xab6 <__fp_inf>
 b74:	0c 94 61 05 	jmp	0xac2	; 0xac2 <__fp_nan>
 b78:	11 24       	eor	r1, r1
 b7a:	0c 94 a6 05 	jmp	0xb4c	; 0xb4c <__fp_szero>

00000b7e <__mulsf3x>:
 b7e:	0e 94 83 05 	call	0xb06	; 0xb06 <__fp_split3>
 b82:	70 f3       	brcs	.-36     	; 0xb60 <__mulsf3+0x8>

00000b84 <__mulsf3_pse>:
 b84:	95 9f       	mul	r25, r21
 b86:	c1 f3       	breq	.-16     	; 0xb78 <__mulsf3+0x20>
 b88:	95 0f       	add	r25, r21
 b8a:	50 e0       	ldi	r21, 0x00	; 0
 b8c:	55 1f       	adc	r21, r21
 b8e:	62 9f       	mul	r22, r18
 b90:	f0 01       	movw	r30, r0
 b92:	72 9f       	mul	r23, r18
 b94:	bb 27       	eor	r27, r27
 b96:	f0 0d       	add	r31, r0
 b98:	b1 1d       	adc	r27, r1
 b9a:	63 9f       	mul	r22, r19
 b9c:	aa 27       	eor	r26, r26
 b9e:	f0 0d       	add	r31, r0
 ba0:	b1 1d       	adc	r27, r1
 ba2:	aa 1f       	adc	r26, r26
 ba4:	64 9f       	mul	r22, r20
 ba6:	66 27       	eor	r22, r22
 ba8:	b0 0d       	add	r27, r0
 baa:	a1 1d       	adc	r26, r1
 bac:	66 1f       	adc	r22, r22
 bae:	82 9f       	mul	r24, r18
 bb0:	22 27       	eor	r18, r18
 bb2:	b0 0d       	add	r27, r0
 bb4:	a1 1d       	adc	r26, r1
 bb6:	62 1f       	adc	r22, r18
 bb8:	73 9f       	mul	r23, r19
 bba:	b0 0d       	add	r27, r0
 bbc:	a1 1d       	adc	r26, r1
 bbe:	62 1f       	adc	r22, r18
 bc0:	83 9f       	mul	r24, r19
 bc2:	a0 0d       	add	r26, r0
 bc4:	61 1d       	adc	r22, r1
 bc6:	22 1f       	adc	r18, r18
 bc8:	74 9f       	mul	r23, r20
 bca:	33 27       	eor	r19, r19
 bcc:	a0 0d       	add	r26, r0
 bce:	61 1d       	adc	r22, r1
 bd0:	23 1f       	adc	r18, r19
 bd2:	84 9f       	mul	r24, r20
 bd4:	60 0d       	add	r22, r0
 bd6:	21 1d       	adc	r18, r1
 bd8:	82 2f       	mov	r24, r18
 bda:	76 2f       	mov	r23, r22
 bdc:	6a 2f       	mov	r22, r26
 bde:	11 24       	eor	r1, r1
 be0:	9f 57       	subi	r25, 0x7F	; 127
 be2:	50 40       	sbci	r21, 0x00	; 0
 be4:	9a f0       	brmi	.+38     	; 0xc0c <__mulsf3_pse+0x88>
 be6:	f1 f0       	breq	.+60     	; 0xc24 <__mulsf3_pse+0xa0>
 be8:	88 23       	and	r24, r24
 bea:	4a f0       	brmi	.+18     	; 0xbfe <__mulsf3_pse+0x7a>
 bec:	ee 0f       	add	r30, r30
 bee:	ff 1f       	adc	r31, r31
 bf0:	bb 1f       	adc	r27, r27
 bf2:	66 1f       	adc	r22, r22
 bf4:	77 1f       	adc	r23, r23
 bf6:	88 1f       	adc	r24, r24
 bf8:	91 50       	subi	r25, 0x01	; 1
 bfa:	50 40       	sbci	r21, 0x00	; 0
 bfc:	a9 f7       	brne	.-22     	; 0xbe8 <__mulsf3_pse+0x64>
 bfe:	9e 3f       	cpi	r25, 0xFE	; 254
 c00:	51 05       	cpc	r21, r1
 c02:	80 f0       	brcs	.+32     	; 0xc24 <__mulsf3_pse+0xa0>
 c04:	0c 94 5b 05 	jmp	0xab6	; 0xab6 <__fp_inf>
 c08:	0c 94 a6 05 	jmp	0xb4c	; 0xb4c <__fp_szero>
 c0c:	5f 3f       	cpi	r21, 0xFF	; 255
 c0e:	e4 f3       	brlt	.-8      	; 0xc08 <__mulsf3_pse+0x84>
 c10:	98 3e       	cpi	r25, 0xE8	; 232
 c12:	d4 f3       	brlt	.-12     	; 0xc08 <__mulsf3_pse+0x84>
 c14:	86 95       	lsr	r24
 c16:	77 95       	ror	r23
 c18:	67 95       	ror	r22
 c1a:	b7 95       	ror	r27
 c1c:	f7 95       	ror	r31
 c1e:	e7 95       	ror	r30
 c20:	9f 5f       	subi	r25, 0xFF	; 255
 c22:	c1 f7       	brne	.-16     	; 0xc14 <__mulsf3_pse+0x90>
 c24:	fe 2b       	or	r31, r30
 c26:	88 0f       	add	r24, r24
 c28:	91 1d       	adc	r25, r1
 c2a:	96 95       	lsr	r25
 c2c:	87 95       	ror	r24
 c2e:	97 f9       	bld	r25, 7
 c30:	08 95       	ret

00000c32 <__tablejump2__>:
 c32:	ee 0f       	add	r30, r30
 c34:	ff 1f       	adc	r31, r31
 c36:	05 90       	lpm	r0, Z+
 c38:	f4 91       	lpm	r31, Z
 c3a:	e0 2d       	mov	r30, r0
 c3c:	09 94       	ijmp

00000c3e <__itoa_ncheck>:
 c3e:	bb 27       	eor	r27, r27
 c40:	4a 30       	cpi	r20, 0x0A	; 10
 c42:	31 f4       	brne	.+12     	; 0xc50 <__itoa_ncheck+0x12>
 c44:	99 23       	and	r25, r25
 c46:	22 f4       	brpl	.+8      	; 0xc50 <__itoa_ncheck+0x12>
 c48:	bd e2       	ldi	r27, 0x2D	; 45
 c4a:	90 95       	com	r25
 c4c:	81 95       	neg	r24
 c4e:	9f 4f       	sbci	r25, 0xFF	; 255
 c50:	0c 94 2b 06 	jmp	0xc56	; 0xc56 <__utoa_common>

00000c54 <__utoa_ncheck>:
 c54:	bb 27       	eor	r27, r27

00000c56 <__utoa_common>:
 c56:	fb 01       	movw	r30, r22
 c58:	55 27       	eor	r21, r21
 c5a:	aa 27       	eor	r26, r26
 c5c:	88 0f       	add	r24, r24
 c5e:	99 1f       	adc	r25, r25
 c60:	aa 1f       	adc	r26, r26
 c62:	a4 17       	cp	r26, r20
 c64:	10 f0       	brcs	.+4      	; 0xc6a <__utoa_common+0x14>
 c66:	a4 1b       	sub	r26, r20
 c68:	83 95       	inc	r24
 c6a:	50 51       	subi	r21, 0x10	; 16
 c6c:	b9 f7       	brne	.-18     	; 0xc5c <__utoa_common+0x6>
 c6e:	a0 5d       	subi	r26, 0xD0	; 208
 c70:	aa 33       	cpi	r26, 0x3A	; 58
 c72:	08 f0       	brcs	.+2      	; 0xc76 <__utoa_common+0x20>
 c74:	a9 5d       	subi	r26, 0xD9	; 217
 c76:	a1 93       	st	Z+, r26
 c78:	00 97       	sbiw	r24, 0x00	; 0
 c7a:	79 f7       	brne	.-34     	; 0xc5a <__utoa_common+0x4>
 c7c:	b1 11       	cpse	r27, r1
 c7e:	b1 93       	st	Z+, r27
 c80:	11 92       	st	Z+, r1
 c82:	cb 01       	movw	r24, r22
 c84:	0c 94 44 06 	jmp	0xc88	; 0xc88 <strrev>

00000c88 <strrev>:
 c88:	dc 01       	movw	r26, r24
 c8a:	fc 01       	movw	r30, r24
 c8c:	67 2f       	mov	r22, r23
 c8e:	71 91       	ld	r23, Z+
 c90:	77 23       	and	r23, r23
 c92:	e1 f7       	brne	.-8      	; 0xc8c <strrev+0x4>
 c94:	32 97       	sbiw	r30, 0x02	; 2
 c96:	04 c0       	rjmp	.+8      	; 0xca0 <strrev+0x18>
 c98:	7c 91       	ld	r23, X
 c9a:	6d 93       	st	X+, r22
 c9c:	70 83       	st	Z, r23
 c9e:	62 91       	ld	r22, -Z
 ca0:	ae 17       	cp	r26, r30
 ca2:	bf 07       	cpc	r27, r31
 ca4:	c8 f3       	brcs	.-14     	; 0xc98 <strrev+0x10>
 ca6:	08 95       	ret

00000ca8 <_exit>:
 ca8:	f8 94       	cli

00000caa <__stop_program>:
 caa:	ff cf       	rjmp	.-2      	; 0xcaa <__stop_program>
