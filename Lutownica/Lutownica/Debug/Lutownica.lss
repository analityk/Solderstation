
Lutownica.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000008  00800100  000008e2  00000976  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000008e2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000002c  00800108  00800108  0000097e  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000097e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000009b0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000150  00000000  00000000  000009f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001e9d  00000000  00000000  00000b40  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000dd7  00000000  00000000  000029dd  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000a0e  00000000  00000000  000037b4  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000364  00000000  00000000  000041c4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000926  00000000  00000000  00004528  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000e24  00000000  00000000  00004e4e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000110  00000000  00000000  00005c72  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 35 00 	jmp	0x6a	; 0x6a <__ctors_end>
   4:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
   8:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
   c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  10:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  14:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  18:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  1c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  20:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  24:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  28:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  2c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  30:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  34:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  38:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  3c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  40:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  44:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  48:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  4c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  50:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  54:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  58:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  5c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  60:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  64:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>

00000068 <__ctors_start>:
  68:	0d 04       	cpc	r0, r13

0000006a <__ctors_end>:
  6a:	11 24       	eor	r1, r1
  6c:	1f be       	out	0x3f, r1	; 63
  6e:	cf ef       	ldi	r28, 0xFF	; 255
  70:	d8 e0       	ldi	r29, 0x08	; 8
  72:	de bf       	out	0x3e, r29	; 62
  74:	cd bf       	out	0x3d, r28	; 61

00000076 <__do_copy_data>:
  76:	11 e0       	ldi	r17, 0x01	; 1
  78:	a0 e0       	ldi	r26, 0x00	; 0
  7a:	b1 e0       	ldi	r27, 0x01	; 1
  7c:	e2 ee       	ldi	r30, 0xE2	; 226
  7e:	f8 e0       	ldi	r31, 0x08	; 8
  80:	02 c0       	rjmp	.+4      	; 0x86 <__do_copy_data+0x10>
  82:	05 90       	lpm	r0, Z+
  84:	0d 92       	st	X+, r0
  86:	a8 30       	cpi	r26, 0x08	; 8
  88:	b1 07       	cpc	r27, r17
  8a:	d9 f7       	brne	.-10     	; 0x82 <__do_copy_data+0xc>

0000008c <__do_clear_bss>:
  8c:	21 e0       	ldi	r18, 0x01	; 1
  8e:	a8 e0       	ldi	r26, 0x08	; 8
  90:	b1 e0       	ldi	r27, 0x01	; 1
  92:	01 c0       	rjmp	.+2      	; 0x96 <.do_clear_bss_start>

00000094 <.do_clear_bss_loop>:
  94:	1d 92       	st	X+, r1

00000096 <.do_clear_bss_start>:
  96:	a4 33       	cpi	r26, 0x34	; 52
  98:	b2 07       	cpc	r27, r18
  9a:	e1 f7       	brne	.-8      	; 0x94 <.do_clear_bss_loop>

0000009c <__do_global_ctors>:
  9c:	10 e0       	ldi	r17, 0x00	; 0
  9e:	c5 e3       	ldi	r28, 0x35	; 53
  a0:	d0 e0       	ldi	r29, 0x00	; 0
  a2:	04 c0       	rjmp	.+8      	; 0xac <__do_global_ctors+0x10>
  a4:	21 97       	sbiw	r28, 0x01	; 1
  a6:	fe 01       	movw	r30, r28
  a8:	0e 94 34 04 	call	0x868	; 0x868 <__tablejump2__>
  ac:	c4 33       	cpi	r28, 0x34	; 52
  ae:	d1 07       	cpc	r29, r17
  b0:	c9 f7       	brne	.-14     	; 0xa4 <__do_global_ctors+0x8>
  b2:	0e 94 9e 03 	call	0x73c	; 0x73c <main>
  b6:	0c 94 6f 04 	jmp	0x8de	; 0x8de <_exit>

000000ba <__bad_interrupt>:
  ba:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000be <_Z8delay_ush>:
ï»¿#include <delays.h>

void delay_us(uint8_t us){
	while(us--){
  be:	9f ef       	ldi	r25, 0xFF	; 255
  c0:	98 0f       	add	r25, r24
  c2:	88 23       	and	r24, r24
  c4:	91 f0       	breq	.+36     	; 0xea <_Z8delay_ush+0x2c>
	...
  e6:	91 50       	subi	r25, 0x01	; 1
  e8:	70 f7       	brcc	.-36     	; 0xc6 <_Z8delay_ush+0x8>
  ea:	08 95       	ret

000000ec <_Z12delay_10x_ush>:
		DELAY_1us;
	};
};

void delay_10x_us(uint8_t us){
	while(us--){
  ec:	9f ef       	ldi	r25, 0xFF	; 255
  ee:	98 0f       	add	r25, r24
  f0:	88 23       	and	r24, r24
  f2:	09 f4       	brne	.+2      	; 0xf6 <_Z12delay_10x_ush+0xa>
  f4:	a3 c0       	rjmp	.+326    	; 0x23c <_Z12delay_10x_ush+0x150>
	...
 236:	91 50       	subi	r25, 0x01	; 1
 238:	08 f0       	brcs	.+2      	; 0x23c <_Z12delay_10x_ush+0x150>
 23a:	5d cf       	rjmp	.-326    	; 0xf6 <_Z12delay_10x_ush+0xa>
 23c:	08 95       	ret

0000023e <_ZN3LCD5DelayEj>:
		WriteCGR((uint8_t)(str[i]));
	};
};

void LCD::WriteChar(char c)
{
 23e:	cf 93       	push	r28
 240:	df 93       	push	r29
 242:	00 d0       	rcall	.+0      	; 0x244 <_ZN3LCD5DelayEj+0x6>
 244:	cd b7       	in	r28, 0x3d	; 61
 246:	de b7       	in	r29, 0x3e	; 62
 248:	7a 83       	std	Y+2, r23	; 0x02
 24a:	69 83       	std	Y+1, r22	; 0x01
 24c:	89 81       	ldd	r24, Y+1	; 0x01
 24e:	9a 81       	ldd	r25, Y+2	; 0x02
 250:	9c 01       	movw	r18, r24
 252:	21 50       	subi	r18, 0x01	; 1
 254:	31 09       	sbc	r19, r1
 256:	3a 83       	std	Y+2, r19	; 0x02
 258:	29 83       	std	Y+1, r18	; 0x01
 25a:	89 2b       	or	r24, r25
 25c:	b9 f7       	brne	.-18     	; 0x24c <_ZN3LCD5DelayEj+0xe>
 25e:	0f 90       	pop	r0
 260:	0f 90       	pop	r0
 262:	df 91       	pop	r29
 264:	cf 91       	pop	r28
 266:	08 95       	ret

00000268 <_ZN3LCD7CommandEh>:
 268:	5a 98       	cbi	0x0b, 2	; 11
 26a:	2b b1       	in	r18, 0x0b	; 11
 26c:	2f 71       	andi	r18, 0x1F	; 31
 26e:	2b b9       	out	0x0b, r18	; 11
 270:	4b b1       	in	r20, 0x0b	; 11
 272:	50 e2       	ldi	r21, 0x20	; 32
 274:	65 9f       	mul	r22, r21
 276:	90 01       	movw	r18, r0
 278:	11 24       	eor	r1, r1
 27a:	24 2b       	or	r18, r20
 27c:	2b b9       	out	0x0b, r18	; 11
 27e:	66 95       	lsr	r22
 280:	66 95       	lsr	r22
 282:	66 95       	lsr	r22
 284:	25 b1       	in	r18, 0x05	; 5
 286:	20 7e       	andi	r18, 0xE0	; 224
 288:	25 b9       	out	0x05, r18	; 5
 28a:	65 b9       	out	0x05, r22	; 5
 28c:	5c 9a       	sbi	0x0b, 4	; 11
 28e:	6f ef       	ldi	r22, 0xFF	; 255
 290:	70 e0       	ldi	r23, 0x00	; 0
 292:	0e 94 1f 01 	call	0x23e	; 0x23e <_ZN3LCD5DelayEj>
 296:	5c 98       	cbi	0x0b, 4	; 11
 298:	08 95       	ret

0000029a <_ZN3LCD8WriteCGREh>:
 29a:	5a 9a       	sbi	0x0b, 2	; 11
 29c:	2b b1       	in	r18, 0x0b	; 11
 29e:	2f 71       	andi	r18, 0x1F	; 31
 2a0:	2b b9       	out	0x0b, r18	; 11
 2a2:	4b b1       	in	r20, 0x0b	; 11
 2a4:	50 e2       	ldi	r21, 0x20	; 32
 2a6:	65 9f       	mul	r22, r21
 2a8:	90 01       	movw	r18, r0
 2aa:	11 24       	eor	r1, r1
 2ac:	24 2b       	or	r18, r20
 2ae:	2b b9       	out	0x0b, r18	; 11
 2b0:	66 95       	lsr	r22
 2b2:	66 95       	lsr	r22
 2b4:	66 95       	lsr	r22
 2b6:	25 b1       	in	r18, 0x05	; 5
 2b8:	20 7e       	andi	r18, 0xE0	; 224
 2ba:	25 b9       	out	0x05, r18	; 5
 2bc:	65 b9       	out	0x05, r22	; 5
 2be:	5c 9a       	sbi	0x0b, 4	; 11
 2c0:	6f ef       	ldi	r22, 0xFF	; 255
 2c2:	70 e0       	ldi	r23, 0x00	; 0
 2c4:	0e 94 1f 01 	call	0x23e	; 0x23e <_ZN3LCD5DelayEj>
 2c8:	5c 98       	cbi	0x0b, 4	; 11
 2ca:	5a 98       	cbi	0x0b, 2	; 11
 2cc:	08 95       	ret

000002ce <_ZN3LCD4InitEv>:
 2ce:	cf 93       	push	r28
 2d0:	df 93       	push	r29
 2d2:	ec 01       	movw	r28, r24
 2d4:	8a b1       	in	r24, 0x0a	; 10
 2d6:	8c 61       	ori	r24, 0x1C	; 28
 2d8:	8a b9       	out	0x0a, r24	; 10
 2da:	8b b1       	in	r24, 0x0b	; 11
 2dc:	83 7e       	andi	r24, 0xE3	; 227
 2de:	8b b9       	out	0x0b, r24	; 11
 2e0:	8a b1       	in	r24, 0x0a	; 10
 2e2:	80 6e       	ori	r24, 0xE0	; 224
 2e4:	8a b9       	out	0x0a, r24	; 10
 2e6:	8b b1       	in	r24, 0x0b	; 11
 2e8:	8f 71       	andi	r24, 0x1F	; 31
 2ea:	8b b9       	out	0x0b, r24	; 11
 2ec:	84 b1       	in	r24, 0x04	; 4
 2ee:	8f 61       	ori	r24, 0x1F	; 31
 2f0:	84 b9       	out	0x04, r24	; 4
 2f2:	85 b1       	in	r24, 0x05	; 5
 2f4:	80 7e       	andi	r24, 0xE0	; 224
 2f6:	85 b9       	out	0x05, r24	; 5
 2f8:	85 b1       	in	r24, 0x05	; 5
 2fa:	87 60       	ori	r24, 0x07	; 7
 2fc:	85 b9       	out	0x05, r24	; 5
 2fe:	5c 9a       	sbi	0x0b, 4	; 11
 300:	6f ef       	ldi	r22, 0xFF	; 255
 302:	7f ef       	ldi	r23, 0xFF	; 255
 304:	ce 01       	movw	r24, r28
 306:	0e 94 1f 01 	call	0x23e	; 0x23e <_ZN3LCD5DelayEj>
 30a:	5c 98       	cbi	0x0b, 4	; 11
 30c:	85 b1       	in	r24, 0x05	; 5
 30e:	89 7f       	andi	r24, 0xF9	; 249
 310:	85 b9       	out	0x05, r24	; 5
 312:	8b b1       	in	r24, 0x0b	; 11
 314:	80 6c       	ori	r24, 0xC0	; 192
 316:	8b b9       	out	0x0b, r24	; 11
 318:	5c 9a       	sbi	0x0b, 4	; 11
 31a:	6f ef       	ldi	r22, 0xFF	; 255
 31c:	7f e0       	ldi	r23, 0x0F	; 15
 31e:	ce 01       	movw	r24, r28
 320:	0e 94 1f 01 	call	0x23e	; 0x23e <_ZN3LCD5DelayEj>
 324:	5c 98       	cbi	0x0b, 4	; 11
 326:	5c 9a       	sbi	0x0b, 4	; 11
 328:	6f ef       	ldi	r22, 0xFF	; 255
 32a:	7f e0       	ldi	r23, 0x0F	; 15
 32c:	ce 01       	movw	r24, r28
 32e:	0e 94 1f 01 	call	0x23e	; 0x23e <_ZN3LCD5DelayEj>
 332:	5c 98       	cbi	0x0b, 4	; 11
 334:	8b b1       	in	r24, 0x0b	; 11
 336:	8f 73       	andi	r24, 0x3F	; 63
 338:	8b b9       	out	0x0b, r24	; 11
 33a:	28 98       	cbi	0x05, 0	; 5
 33c:	61 e0       	ldi	r22, 0x01	; 1
 33e:	ce 01       	movw	r24, r28
 340:	0e 94 34 01 	call	0x268	; 0x268 <_ZN3LCD7CommandEh>
 344:	62 e0       	ldi	r22, 0x02	; 2
 346:	ce 01       	movw	r24, r28
 348:	0e 94 34 01 	call	0x268	; 0x268 <_ZN3LCD7CommandEh>
 34c:	66 e0       	ldi	r22, 0x06	; 6
 34e:	ce 01       	movw	r24, r28
 350:	0e 94 34 01 	call	0x268	; 0x268 <_ZN3LCD7CommandEh>
 354:	6f e0       	ldi	r22, 0x0F	; 15
 356:	ce 01       	movw	r24, r28
 358:	0e 94 34 01 	call	0x268	; 0x268 <_ZN3LCD7CommandEh>
 35c:	64 e1       	ldi	r22, 0x14	; 20
 35e:	ce 01       	movw	r24, r28
 360:	0e 94 34 01 	call	0x268	; 0x268 <_ZN3LCD7CommandEh>
 364:	62 e0       	ldi	r22, 0x02	; 2
 366:	ce 01       	movw	r24, r28
 368:	0e 94 34 01 	call	0x268	; 0x268 <_ZN3LCD7CommandEh>
 36c:	df 91       	pop	r29
 36e:	cf 91       	pop	r28
 370:	08 95       	ret

00000372 <_ZN3LCD11WriteStringEPc>:
 372:	bf 92       	push	r11
 374:	cf 92       	push	r12
 376:	df 92       	push	r13
 378:	ef 92       	push	r14
 37a:	ff 92       	push	r15
 37c:	0f 93       	push	r16
 37e:	1f 93       	push	r17
 380:	cf 93       	push	r28
 382:	df 93       	push	r29
 384:	7c 01       	movw	r14, r24
 386:	8b 01       	movw	r16, r22
 388:	d4 e1       	ldi	r29, 0x14	; 20
 38a:	0f 2e       	mov	r0, r31
 38c:	f4 e1       	ldi	r31, 0x14	; 20
 38e:	bf 2e       	mov	r11, r31
 390:	f0 2d       	mov	r31, r0
 392:	68 01       	movw	r12, r16
 394:	f8 01       	movw	r30, r16
 396:	80 81       	ld	r24, Z
 398:	8a 30       	cpi	r24, 0x0A	; 10
 39a:	71 f4       	brne	.+28     	; 0x3b8 <_ZN3LCD11WriteStringEPc+0x46>
 39c:	8b 2d       	mov	r24, r11
 39e:	8d 1b       	sub	r24, r29
 3a0:	84 31       	cpi	r24, 0x14	; 20
 3a2:	50 f4       	brcc	.+20     	; 0x3b8 <_ZN3LCD11WriteStringEPc+0x46>
 3a4:	dd 23       	and	r29, r29
 3a6:	91 f0       	breq	.+36     	; 0x3cc <_ZN3LCD11WriteStringEPc+0x5a>
 3a8:	c0 e0       	ldi	r28, 0x00	; 0
 3aa:	60 e2       	ldi	r22, 0x20	; 32
 3ac:	c7 01       	movw	r24, r14
 3ae:	0e 94 4d 01 	call	0x29a	; 0x29a <_ZN3LCD8WriteCGREh>
 3b2:	cf 5f       	subi	r28, 0xFF	; 255
 3b4:	dc 13       	cpse	r29, r28
 3b6:	f9 cf       	rjmp	.-14     	; 0x3aa <_ZN3LCD11WriteStringEPc+0x38>
 3b8:	0f 5f       	subi	r16, 0xFF	; 255
 3ba:	1f 4f       	sbci	r17, 0xFF	; 255
 3bc:	f6 01       	movw	r30, r12
 3be:	60 81       	ld	r22, Z
 3c0:	c7 01       	movw	r24, r14
 3c2:	0e 94 4d 01 	call	0x29a	; 0x29a <_ZN3LCD8WriteCGREh>
 3c6:	d1 50       	subi	r29, 0x01	; 1
 3c8:	21 f7       	brne	.-56     	; 0x392 <_ZN3LCD11WriteStringEPc+0x20>
 3ca:	09 c0       	rjmp	.+18     	; 0x3de <_ZN3LCD11WriteStringEPc+0x6c>
 3cc:	0f 5f       	subi	r16, 0xFF	; 255
 3ce:	1f 4f       	sbci	r17, 0xFF	; 255
 3d0:	f6 01       	movw	r30, r12
 3d2:	60 81       	ld	r22, Z
 3d4:	c7 01       	movw	r24, r14
 3d6:	0e 94 4d 01 	call	0x29a	; 0x29a <_ZN3LCD8WriteCGREh>
 3da:	d1 50       	subi	r29, 0x01	; 1
 3dc:	da cf       	rjmp	.-76     	; 0x392 <_ZN3LCD11WriteStringEPc+0x20>
 3de:	df 91       	pop	r29
 3e0:	cf 91       	pop	r28
 3e2:	1f 91       	pop	r17
 3e4:	0f 91       	pop	r16
 3e6:	ff 90       	pop	r15
 3e8:	ef 90       	pop	r14
 3ea:	df 90       	pop	r13
 3ec:	cf 90       	pop	r12
 3ee:	bf 90       	pop	r11
 3f0:	08 95       	ret

000003f2 <_ZN3LCD13GoToFirstLineEv>:
	
};

void LCD::GoToFirstLine(void)
{
	Command(LCD_SET_DDRAM_ADDR| 0);
 3f2:	60 e8       	ldi	r22, 0x80	; 128
 3f4:	0e 94 34 01 	call	0x268	; 0x268 <_ZN3LCD7CommandEh>
 3f8:	08 95       	ret

000003fa <_ZN3LCD14GoToSecondLineEv>:
};

void LCD::GoToSecondLine(void)
{
	Command(LCD_SET_DDRAM_ADDR| 40);
 3fa:	68 ea       	ldi	r22, 0xA8	; 168
 3fc:	0e 94 34 01 	call	0x268	; 0x268 <_ZN3LCD7CommandEh>
 400:	08 95       	ret

00000402 <_Z14ds_pin_set_lowv>:
	DS_PORT &=~(1<<DS_PINxn);
};

void ds_pin_set_hi(void){
	DS_DDR |= (1<<DS_PINxn);
	DS_PORT|= (1<<DS_PINxn);
 402:	38 9a       	sbi	0x07, 0	; 7
 404:	40 98       	cbi	0x08, 0	; 8
 406:	08 95       	ret

00000408 <_Z11ds_pin_hi_zv>:
};

void ds_pin_hi_z(void){
	DS_DDR &=~(1<<DS_PINxn);
 408:	38 98       	cbi	0x07, 0	; 7
	DS_PORT &=~(1<<DS_PINxn);
 40a:	40 98       	cbi	0x08, 0	; 8
 40c:	08 95       	ret

0000040e <_Z12ds_pin_statev>:
};

uint8_t ds_pin_state(void){
	ds_pin_hi_z();
 40e:	0e 94 04 02 	call	0x408	; 0x408 <_Z11ds_pin_hi_zv>
	uint8_t t = DS_PINx;
 412:	86 b1       	in	r24, 0x06	; 6
	if( (t & (1<<DS_PINxn)) == 0){
		return 0;
	}else{
		return 1;
	};
};
 414:	81 70       	andi	r24, 0x01	; 1
 416:	08 95       	ret

00000418 <_ZN11Dallas18B205resetEv>:

uint8_t Dallas18B20::reset(void)
{
 418:	cf 93       	push	r28
	ds_pin_set_low();
 41a:	0e 94 01 02 	call	0x402	; 0x402 <_Z14ds_pin_set_lowv>
	delay_10x_us(50);
 41e:	82 e3       	ldi	r24, 0x32	; 50
 420:	0e 94 76 00 	call	0xec	; 0xec <_Z12delay_10x_ush>
	ds_pin_hi_z();
 424:	0e 94 04 02 	call	0x408	; 0x408 <_Z11ds_pin_hi_zv>
	delay_10x_us(6);
 428:	86 e0       	ldi	r24, 0x06	; 6
 42a:	0e 94 76 00 	call	0xec	; 0xec <_Z12delay_10x_ush>
 42e:	ce e1       	ldi	r28, 0x1E	; 30
	for(uint8_t i=0; i<30; i++){
		if( ds_pin_state() == 1 ){
 430:	0e 94 07 02 	call	0x40e	; 0x40e <_Z12ds_pin_statev>
 434:	81 30       	cpi	r24, 0x01	; 1
 436:	09 f4       	brne	.+2      	; 0x43a <_ZN11Dallas18B205resetEv+0x22>
 438:	a4 c0       	rjmp	.+328    	; 0x582 <_ZN11Dallas18B205resetEv+0x16a>
	...
			return 1;
		};
		DELAY_10us;
 57a:	c1 50       	subi	r28, 0x01	; 1
{
	ds_pin_set_low();
	delay_10x_us(50);
	ds_pin_hi_z();
	delay_10x_us(6);
	for(uint8_t i=0; i<30; i++){
 57c:	09 f0       	breq	.+2      	; 0x580 <_ZN11Dallas18B205resetEv+0x168>
 57e:	58 cf       	rjmp	.-336    	; 0x430 <_ZN11Dallas18B205resetEv+0x18>
		if( ds_pin_state() == 1 ){
			return 1;
		};
		DELAY_10us;
	};
	return 0;
 580:	8c 2f       	mov	r24, r28
};
 582:	cf 91       	pop	r28
 584:	08 95       	ret

00000586 <_ZN11Dallas18B207readbitEv>:
		};
	};
};

uint8_t Dallas18B20::readbit(void)
{
 586:	cf 93       	push	r28
	ds_pin_set_low();
 588:	0e 94 01 02 	call	0x402	; 0x402 <_Z14ds_pin_set_lowv>
	delay_us(6);
 58c:	86 e0       	ldi	r24, 0x06	; 6
 58e:	0e 94 5f 00 	call	0xbe	; 0xbe <_Z8delay_ush>
	ds_pin_hi_z();
 592:	0e 94 04 02 	call	0x408	; 0x408 <_Z11ds_pin_hi_zv>
	delay_us(9);
 596:	89 e0       	ldi	r24, 0x09	; 9
 598:	0e 94 5f 00 	call	0xbe	; 0xbe <_Z8delay_ush>
	
	uint8_t pins = ds_pin_state();
 59c:	0e 94 07 02 	call	0x40e	; 0x40e <_Z12ds_pin_statev>
 5a0:	c8 2f       	mov	r28, r24
	
	delay_us(55);
 5a2:	87 e3       	ldi	r24, 0x37	; 55
 5a4:	0e 94 5f 00 	call	0xbe	; 0xbe <_Z8delay_ush>
	
	return pins;
};
 5a8:	8c 2f       	mov	r24, r28
 5aa:	cf 91       	pop	r28
 5ac:	08 95       	ret

000005ae <_ZN11Dallas18B208readbyteEv>:
	uint8_t lsb = readbyte();
	return (lsb<<8)|msb;
};

uint8_t Dallas18B20::readbyte(void)
{
 5ae:	cf 92       	push	r12
 5b0:	df 92       	push	r13
 5b2:	ff 92       	push	r15
 5b4:	0f 93       	push	r16
 5b6:	1f 93       	push	r17
 5b8:	cf 93       	push	r28
 5ba:	df 93       	push	r29
 5bc:	8c 01       	movw	r16, r24
 5be:	c0 e0       	ldi	r28, 0x00	; 0
 5c0:	d0 e0       	ldi	r29, 0x00	; 0
	uint8_t t = 0;
 5c2:	f1 2c       	mov	r15, r1
	for(uint8_t i=0; i<8; i++){
		if(readbit() == 1){
			t |= (1<<i);
 5c4:	cc 24       	eor	r12, r12
 5c6:	c3 94       	inc	r12
 5c8:	d1 2c       	mov	r13, r1

uint8_t Dallas18B20::readbyte(void)
{
	uint8_t t = 0;
	for(uint8_t i=0; i<8; i++){
		if(readbit() == 1){
 5ca:	c8 01       	movw	r24, r16
 5cc:	0e 94 c3 02 	call	0x586	; 0x586 <_ZN11Dallas18B207readbitEv>
 5d0:	81 30       	cpi	r24, 0x01	; 1
 5d2:	41 f4       	brne	.+16     	; 0x5e4 <_ZN11Dallas18B208readbyteEv+0x36>
			t |= (1<<i);
 5d4:	c6 01       	movw	r24, r12
 5d6:	0c 2e       	mov	r0, r28
 5d8:	02 c0       	rjmp	.+4      	; 0x5de <_ZN11Dallas18B208readbyteEv+0x30>
 5da:	88 0f       	add	r24, r24
 5dc:	99 1f       	adc	r25, r25
 5de:	0a 94       	dec	r0
 5e0:	e2 f7       	brpl	.-8      	; 0x5da <_ZN11Dallas18B208readbyteEv+0x2c>
 5e2:	f8 2a       	or	r15, r24
 5e4:	21 96       	adiw	r28, 0x01	; 1
};

uint8_t Dallas18B20::readbyte(void)
{
	uint8_t t = 0;
	for(uint8_t i=0; i<8; i++){
 5e6:	c8 30       	cpi	r28, 0x08	; 8
 5e8:	d1 05       	cpc	r29, r1
 5ea:	79 f7       	brne	.-34     	; 0x5ca <_ZN11Dallas18B208readbyteEv+0x1c>
		if(readbit() == 1){
			t |= (1<<i);
		};
	};
	return t;
};
 5ec:	8f 2d       	mov	r24, r15
 5ee:	df 91       	pop	r29
 5f0:	cf 91       	pop	r28
 5f2:	1f 91       	pop	r17
 5f4:	0f 91       	pop	r16
 5f6:	ff 90       	pop	r15
 5f8:	df 90       	pop	r13
 5fa:	cf 90       	pop	r12
 5fc:	08 95       	ret

000005fe <_ZN11Dallas18B208writebitEh>:
	return pins;
};

void Dallas18B20::writebit(uint8_t bit)
{
	if(bit == 0){
 5fe:	61 11       	cpse	r22, r1
 600:	08 c0       	rjmp	.+16     	; 0x612 <_ZN11Dallas18B208writebitEh+0x14>
		ds_pin_set_low();
 602:	0e 94 01 02 	call	0x402	; 0x402 <_Z14ds_pin_set_lowv>
		delay_10x_us(7);
 606:	87 e0       	ldi	r24, 0x07	; 7
 608:	0e 94 76 00 	call	0xec	; 0xec <_Z12delay_10x_ush>
		ds_pin_hi_z();
 60c:	0e 94 04 02 	call	0x408	; 0x408 <_Z11ds_pin_hi_zv>
 610:	08 95       	ret
	}else{
		ds_pin_set_low();
 612:	0e 94 01 02 	call	0x402	; 0x402 <_Z14ds_pin_set_lowv>
		delay_us(6);
 616:	86 e0       	ldi	r24, 0x06	; 6
 618:	0e 94 5f 00 	call	0xbe	; 0xbe <_Z8delay_ush>
		ds_pin_hi_z();
 61c:	0e 94 04 02 	call	0x408	; 0x408 <_Z11ds_pin_hi_zv>
		delay_10x_us(6);
 620:	86 e0       	ldi	r24, 0x06	; 6
 622:	0e 94 76 00 	call	0xec	; 0xec <_Z12delay_10x_ush>
 626:	08 95       	ret

00000628 <_ZN11Dallas18B209writebyteEh>:
	};
	return t;
};

void Dallas18B20::writebyte(uint8_t byte)
{
 628:	ef 92       	push	r14
 62a:	ff 92       	push	r15
 62c:	0f 93       	push	r16
 62e:	1f 93       	push	r17
 630:	cf 93       	push	r28
 632:	df 93       	push	r29
 634:	7c 01       	movw	r14, r24
 636:	c0 e0       	ldi	r28, 0x00	; 0
 638:	d0 e0       	ldi	r29, 0x00	; 0
	for(uint8_t i=0; i<8; i++){
		if( (byte &(1<<i)) != 0 ){
 63a:	06 2f       	mov	r16, r22
 63c:	10 e0       	ldi	r17, 0x00	; 0
 63e:	c8 01       	movw	r24, r16
 640:	0c 2e       	mov	r0, r28
 642:	02 c0       	rjmp	.+4      	; 0x648 <_ZN11Dallas18B209writebyteEh+0x20>
 644:	95 95       	asr	r25
 646:	87 95       	ror	r24
 648:	0a 94       	dec	r0
 64a:	e2 f7       	brpl	.-8      	; 0x644 <_ZN11Dallas18B209writebyteEh+0x1c>
 64c:	80 ff       	sbrs	r24, 0
 64e:	05 c0       	rjmp	.+10     	; 0x65a <_ZN11Dallas18B209writebyteEh+0x32>
			writebit(1);
 650:	61 e0       	ldi	r22, 0x01	; 1
 652:	c7 01       	movw	r24, r14
 654:	0e 94 ff 02 	call	0x5fe	; 0x5fe <_ZN11Dallas18B208writebitEh>
 658:	04 c0       	rjmp	.+8      	; 0x662 <_ZN11Dallas18B209writebyteEh+0x3a>
		}else{
			writebit(0);
 65a:	60 e0       	ldi	r22, 0x00	; 0
 65c:	c7 01       	movw	r24, r14
 65e:	0e 94 ff 02 	call	0x5fe	; 0x5fe <_ZN11Dallas18B208writebitEh>
 662:	21 96       	adiw	r28, 0x01	; 1
	return t;
};

void Dallas18B20::writebyte(uint8_t byte)
{
	for(uint8_t i=0; i<8; i++){
 664:	c8 30       	cpi	r28, 0x08	; 8
 666:	d1 05       	cpc	r29, r1
 668:	51 f7       	brne	.-44     	; 0x63e <_ZN11Dallas18B209writebyteEh+0x16>
			writebit(1);
		}else{
			writebit(0);
		};
	};
};
 66a:	df 91       	pop	r29
 66c:	cf 91       	pop	r28
 66e:	1f 91       	pop	r17
 670:	0f 91       	pop	r16
 672:	ff 90       	pop	r15
 674:	ef 90       	pop	r14
 676:	08 95       	ret

00000678 <_ZN11Dallas18B2012CallReadTempEv>:
	};
	return 0;
};

void Dallas18B20::CallReadTemp(void)
{
 678:	cf 93       	push	r28
 67a:	df 93       	push	r29
 67c:	ec 01       	movw	r28, r24
	writebyte(0xCC);
 67e:	6c ec       	ldi	r22, 0xCC	; 204
 680:	0e 94 14 03 	call	0x628	; 0x628 <_ZN11Dallas18B209writebyteEh>
	writebyte(0x44);
 684:	64 e4       	ldi	r22, 0x44	; 68
 686:	ce 01       	movw	r24, r28
 688:	0e 94 14 03 	call	0x628	; 0x628 <_ZN11Dallas18B209writebyteEh>
};
 68c:	df 91       	pop	r29
 68e:	cf 91       	pop	r28
 690:	08 95       	ret

00000692 <_ZN11Dallas18B208ReadTempEv>:

uint16_t Dallas18B20::ReadTemp(void)
{
 692:	1f 93       	push	r17
 694:	cf 93       	push	r28
 696:	df 93       	push	r29
 698:	ec 01       	movw	r28, r24
	writebyte(0xCC);
 69a:	6c ec       	ldi	r22, 0xCC	; 204
 69c:	0e 94 14 03 	call	0x628	; 0x628 <_ZN11Dallas18B209writebyteEh>
	writebyte(0xBE);
 6a0:	6e eb       	ldi	r22, 0xBE	; 190
 6a2:	ce 01       	movw	r24, r28
 6a4:	0e 94 14 03 	call	0x628	; 0x628 <_ZN11Dallas18B209writebyteEh>
	uint8_t msb = readbyte();
 6a8:	ce 01       	movw	r24, r28
 6aa:	0e 94 d7 02 	call	0x5ae	; 0x5ae <_ZN11Dallas18B208readbyteEv>
 6ae:	18 2f       	mov	r17, r24
	uint8_t lsb = readbyte();
 6b0:	ce 01       	movw	r24, r28
 6b2:	0e 94 d7 02 	call	0x5ae	; 0x5ae <_ZN11Dallas18B208readbyteEv>
	return (lsb<<8)|msb;
 6b6:	21 2f       	mov	r18, r17
 6b8:	30 e0       	ldi	r19, 0x00	; 0
};
 6ba:	a9 01       	movw	r20, r18
 6bc:	58 2b       	or	r21, r24
 6be:	ca 01       	movw	r24, r20
 6c0:	df 91       	pop	r29
 6c2:	cf 91       	pop	r28
 6c4:	1f 91       	pop	r17
 6c6:	08 95       	ret

000006c8 <_ZN11Dallas18B20C1Ev>:
	};
};

 Dallas18B20::Dallas18B20()
{
	ds_pin_hi_z();
 6c8:	0e 94 04 02 	call	0x408	; 0x408 <_Z11ds_pin_hi_zv>
 6cc:	08 95       	ret

000006ce <_Z5delaym>:
	d0 = a;
	
	t[0] = d2+48;
	t[1] = d1+48;
	t[2] = d0+48;
};
 6ce:	cf 93       	push	r28
 6d0:	df 93       	push	r29
 6d2:	00 d0       	rcall	.+0      	; 0x6d4 <_Z5delaym+0x6>
 6d4:	00 d0       	rcall	.+0      	; 0x6d6 <_Z5delaym+0x8>
 6d6:	cd b7       	in	r28, 0x3d	; 61
 6d8:	de b7       	in	r29, 0x3e	; 62
 6da:	69 83       	std	Y+1, r22	; 0x01
 6dc:	7a 83       	std	Y+2, r23	; 0x02
 6de:	8b 83       	std	Y+3, r24	; 0x03
 6e0:	9c 83       	std	Y+4, r25	; 0x04
 6e2:	89 81       	ldd	r24, Y+1	; 0x01
 6e4:	9a 81       	ldd	r25, Y+2	; 0x02
 6e6:	ab 81       	ldd	r26, Y+3	; 0x03
 6e8:	bc 81       	ldd	r27, Y+4	; 0x04
 6ea:	ac 01       	movw	r20, r24
 6ec:	bd 01       	movw	r22, r26
 6ee:	41 50       	subi	r20, 0x01	; 1
 6f0:	51 09       	sbc	r21, r1
 6f2:	61 09       	sbc	r22, r1
 6f4:	71 09       	sbc	r23, r1
 6f6:	49 83       	std	Y+1, r20	; 0x01
 6f8:	5a 83       	std	Y+2, r21	; 0x02
 6fa:	6b 83       	std	Y+3, r22	; 0x03
 6fc:	7c 83       	std	Y+4, r23	; 0x04
 6fe:	89 2b       	or	r24, r25
 700:	8a 2b       	or	r24, r26
 702:	8b 2b       	or	r24, r27
 704:	71 f7       	brne	.-36     	; 0x6e2 <_Z5delaym+0x14>
 706:	0f 90       	pop	r0
 708:	0f 90       	pop	r0
 70a:	0f 90       	pop	r0
 70c:	0f 90       	pop	r0
 70e:	df 91       	pop	r29
 710:	cf 91       	pop	r28
 712:	08 95       	ret

00000714 <_Z4cstrPc>:
 714:	fc 01       	movw	r30, r24
 716:	9c 01       	movw	r18, r24
 718:	21 50       	subi	r18, 0x01	; 1
 71a:	3f 4f       	sbci	r19, 0xFF	; 255
 71c:	df 01       	movw	r26, r30
 71e:	81 91       	ld	r24, Z+
 720:	90 ed       	ldi	r25, 0xD0	; 208
 722:	98 0f       	add	r25, r24
 724:	9c 30       	cpi	r25, 0x0C	; 12
 726:	30 f0       	brcs	.+12     	; 0x734 <_Z4cstrPc+0x20>
 728:	8d 52       	subi	r24, 0x2D	; 45
 72a:	82 30       	cpi	r24, 0x02	; 2
 72c:	18 f0       	brcs	.+6      	; 0x734 <_Z4cstrPc+0x20>
 72e:	8a e0       	ldi	r24, 0x0A	; 10
 730:	8c 93       	st	X, r24
 732:	08 95       	ret
 734:	e2 17       	cp	r30, r18
 736:	f3 07       	cpc	r31, r19
 738:	89 f7       	brne	.-30     	; 0x71c <_Z4cstrPc+0x8>
 73a:	08 95       	ret

0000073c <main>:

int main(void)
{
 73c:	cf 93       	push	r28
 73e:	df 93       	push	r29
 740:	cd b7       	in	r28, 0x3d	; 61
 742:	de b7       	in	r29, 0x3e	; 62
 744:	67 97       	sbiw	r28, 0x17	; 23
 746:	0f b6       	in	r0, 0x3f	; 63
 748:	f8 94       	cli
 74a:	de bf       	out	0x3e, r29	; 62
 74c:	0f be       	out	0x3f, r0	; 63
 74e:	cd bf       	out	0x3d, r28	; 61
	LCD lcd;
	lcd.Init();
 750:	ce 01       	movw	r24, r28
 752:	01 96       	adiw	r24, 0x01	; 1
 754:	0e 94 67 01 	call	0x2ce	; 0x2ce <_ZN3LCD4InitEv>

	lcd.Command(1);
 758:	61 e0       	ldi	r22, 0x01	; 1
 75a:	ce 01       	movw	r24, r28
 75c:	01 96       	adiw	r24, 0x01	; 1
 75e:	0e 94 34 01 	call	0x268	; 0x268 <_ZN3LCD7CommandEh>
	lcd.Command(2);
 762:	62 e0       	ldi	r22, 0x02	; 2
 764:	ce 01       	movw	r24, r28
 766:	01 96       	adiw	r24, 0x01	; 1
 768:	0e 94 34 01 	call	0x268	; 0x268 <_ZN3LCD7CommandEh>
	lcd.Command(0x0C);
 76c:	6c e0       	ldi	r22, 0x0C	; 12
 76e:	ce 01       	movw	r24, r28
 770:	01 96       	adiw	r24, 0x01	; 1
 772:	0e 94 34 01 	call	0x268	; 0x268 <_ZN3LCD7CommandEh>

	Dallas18B20 ds18;
 776:	ce 01       	movw	r24, r28
 778:	02 96       	adiw	r24, 0x02	; 2
 77a:	0e 94 64 03 	call	0x6c8	; 0x6c8 <_ZN11Dallas18B20C1Ev>

	char str1[20];
	char str2[20];
	char str3[20];

	ADCSRA = (1<<ADEN)|(1<<ADPS2)|(1<<ADPS1)|(1<<ADPS0);
 77e:	87 e8       	ldi	r24, 0x87	; 135
 780:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
	
	TCCR1B = (1<<CS12)|(1<<CS10);
 784:	85 e0       	ldi	r24, 0x05	; 5
 786:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
	TCNT1 = 0;
 78a:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 78e:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
	uint8_t tcnt = 0;

	int32_t drv_time = 70000;
	
	
	uint8_t volatile preheat = 1;
 792:	81 e0       	ldi	r24, 0x01	; 1
 794:	8f 8b       	std	Y+23, r24	; 0x17
	
	CLR_T0;
 796:	3a 9a       	sbi	0x07, 2	; 7
 798:	42 98       	cbi	0x08, 2	; 8
	uint16_t asd = 0;
	
	while(1){
		if(ds18.reset() == 1){
 79a:	ce 01       	movw	r24, r28
 79c:	02 96       	adiw	r24, 0x02	; 2
 79e:	0e 94 0c 02 	call	0x418	; 0x418 <_ZN11Dallas18B205resetEv>
 7a2:	81 30       	cpi	r24, 0x01	; 1
 7a4:	71 f4       	brne	.+28     	; 0x7c2 <main+0x86>
			ds18.CallReadTemp();
 7a6:	ce 01       	movw	r24, r28
 7a8:	02 96       	adiw	r24, 0x02	; 2
 7aa:	0e 94 3c 03 	call	0x678	; 0x678 <_ZN11Dallas18B2012CallReadTempEv>
			lcd.GoToFirstLine();
 7ae:	ce 01       	movw	r24, r28
 7b0:	01 96       	adiw	r24, 0x01	; 1
 7b2:	0e 94 f9 01 	call	0x3f2	; 0x3f2 <_ZN3LCD13GoToFirstLineEv>
			lcd.WriteString("reset\n");
 7b6:	60 e0       	ldi	r22, 0x00	; 0
 7b8:	71 e0       	ldi	r23, 0x01	; 1
 7ba:	ce 01       	movw	r24, r28
 7bc:	01 96       	adiw	r24, 0x01	; 1
 7be:	0e 94 b9 01 	call	0x372	; 0x372 <_ZN3LCD11WriteStringEPc>
		};
		
		delay(0x14ffff);
 7c2:	6f ef       	ldi	r22, 0xFF	; 255
 7c4:	7f ef       	ldi	r23, 0xFF	; 255
 7c6:	84 e1       	ldi	r24, 0x14	; 20
 7c8:	90 e0       	ldi	r25, 0x00	; 0
 7ca:	0e 94 67 03 	call	0x6ce	; 0x6ce <_Z5delaym>
		
		if(ds18.reset()){
 7ce:	ce 01       	movw	r24, r28
 7d0:	02 96       	adiw	r24, 0x02	; 2
 7d2:	0e 94 0c 02 	call	0x418	; 0x418 <_ZN11Dallas18B205resetEv>
 7d6:	88 23       	and	r24, r24
 7d8:	01 f3       	breq	.-64     	; 0x79a <main+0x5e>
			asd = ds18.ReadTemp() / 16;
 7da:	ce 01       	movw	r24, r28
 7dc:	02 96       	adiw	r24, 0x02	; 2
 7de:	0e 94 49 03 	call	0x692	; 0x692 <_ZN11Dallas18B208ReadTempEv>
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
 7e2:	4a e0       	ldi	r20, 0x0A	; 10
 7e4:	be 01       	movw	r22, r28
 7e6:	6d 5f       	subi	r22, 0xFD	; 253
 7e8:	7f 4f       	sbci	r23, 0xFF	; 255
 7ea:	92 95       	swap	r25
 7ec:	82 95       	swap	r24
 7ee:	8f 70       	andi	r24, 0x0F	; 15
 7f0:	89 27       	eor	r24, r25
 7f2:	9f 70       	andi	r25, 0x0F	; 15
 7f4:	89 27       	eor	r24, r25
 7f6:	0e 94 3a 04 	call	0x874	; 0x874 <__itoa_ncheck>
			itoa(asd, str1, 10);
			cstr(str1);
 7fa:	ce 01       	movw	r24, r28
 7fc:	03 96       	adiw	r24, 0x03	; 3
 7fe:	0e 94 8a 03 	call	0x714	; 0x714 <_Z4cstrPc>
			lcd.GoToSecondLine();
 802:	ce 01       	movw	r24, r28
 804:	01 96       	adiw	r24, 0x01	; 1
 806:	0e 94 fd 01 	call	0x3fa	; 0x3fa <_ZN3LCD14GoToSecondLineEv>
			lcd.WriteString(str1);
 80a:	be 01       	movw	r22, r28
 80c:	6d 5f       	subi	r22, 0xFD	; 253
 80e:	7f 4f       	sbci	r23, 0xFF	; 255
 810:	ce 01       	movw	r24, r28
 812:	01 96       	adiw	r24, 0x01	; 1
 814:	0e 94 b9 01 	call	0x372	; 0x372 <_ZN3LCD11WriteStringEPc>
 818:	c0 cf       	rjmp	.-128    	; 0x79a <main+0x5e>

0000081a <_GLOBAL__sub_I_pid>:
	float measure;
public:

	float setpoint;
	PID(float _kt, float _kp, float _ki, float _kd, float _val)
	:kt(_kt), kp(_kp), ki(_ki), kd(_kd), setpoint(_val) {};
 81a:	e8 e0       	ldi	r30, 0x08	; 8
 81c:	f1 e0       	ldi	r31, 0x01	; 1
 81e:	87 e3       	ldi	r24, 0x37	; 55
 820:	99 e8       	ldi	r25, 0x89	; 137
 822:	a1 e8       	ldi	r26, 0x81	; 129
 824:	be e3       	ldi	r27, 0x3E	; 62
 826:	84 8b       	std	Z+20, r24	; 0x14
 828:	95 8b       	std	Z+21, r25	; 0x15
 82a:	a6 8b       	std	Z+22, r26	; 0x16
 82c:	b7 8b       	std	Z+23, r27	; 0x17
 82e:	80 e0       	ldi	r24, 0x00	; 0
 830:	90 e0       	ldi	r25, 0x00	; 0
 832:	a8 e4       	ldi	r26, 0x48	; 72
 834:	b4 e4       	ldi	r27, 0x44	; 68
 836:	80 8f       	std	Z+24, r24	; 0x18
 838:	91 8f       	std	Z+25, r25	; 0x19
 83a:	a2 8f       	std	Z+26, r26	; 0x1a
 83c:	b3 8f       	std	Z+27, r27	; 0x1b
 83e:	80 e0       	ldi	r24, 0x00	; 0
 840:	90 e0       	ldi	r25, 0x00	; 0
 842:	a8 e4       	ldi	r26, 0x48	; 72
 844:	b3 e4       	ldi	r27, 0x43	; 67
 846:	84 8f       	std	Z+28, r24	; 0x1c
 848:	95 8f       	std	Z+29, r25	; 0x1d
 84a:	a6 8f       	std	Z+30, r26	; 0x1e
 84c:	b7 8f       	std	Z+31, r27	; 0x1f
 84e:	10 a2       	std	Z+32, r1	; 0x20
 850:	11 a2       	std	Z+33, r1	; 0x21
 852:	12 a2       	std	Z+34, r1	; 0x22
 854:	13 a2       	std	Z+35, r1	; 0x23
 856:	80 e0       	ldi	r24, 0x00	; 0
 858:	90 e8       	ldi	r25, 0x80	; 128
 85a:	a2 e2       	ldi	r26, 0x22	; 34
 85c:	b4 e4       	ldi	r27, 0x44	; 68
 85e:	80 a7       	std	Z+40, r24	; 0x28
 860:	91 a7       	std	Z+41, r25	; 0x29
 862:	a2 a7       	std	Z+42, r26	; 0x2a
 864:	b3 a7       	std	Z+43, r27	; 0x2b
 866:	08 95       	ret

00000868 <__tablejump2__>:
 868:	ee 0f       	add	r30, r30
 86a:	ff 1f       	adc	r31, r31
 86c:	05 90       	lpm	r0, Z+
 86e:	f4 91       	lpm	r31, Z
 870:	e0 2d       	mov	r30, r0
 872:	09 94       	ijmp

00000874 <__itoa_ncheck>:
 874:	bb 27       	eor	r27, r27
 876:	4a 30       	cpi	r20, 0x0A	; 10
 878:	31 f4       	brne	.+12     	; 0x886 <__itoa_ncheck+0x12>
 87a:	99 23       	and	r25, r25
 87c:	22 f4       	brpl	.+8      	; 0x886 <__itoa_ncheck+0x12>
 87e:	bd e2       	ldi	r27, 0x2D	; 45
 880:	90 95       	com	r25
 882:	81 95       	neg	r24
 884:	9f 4f       	sbci	r25, 0xFF	; 255
 886:	0c 94 46 04 	jmp	0x88c	; 0x88c <__utoa_common>

0000088a <__utoa_ncheck>:
 88a:	bb 27       	eor	r27, r27

0000088c <__utoa_common>:
 88c:	fb 01       	movw	r30, r22
 88e:	55 27       	eor	r21, r21
 890:	aa 27       	eor	r26, r26
 892:	88 0f       	add	r24, r24
 894:	99 1f       	adc	r25, r25
 896:	aa 1f       	adc	r26, r26
 898:	a4 17       	cp	r26, r20
 89a:	10 f0       	brcs	.+4      	; 0x8a0 <__utoa_common+0x14>
 89c:	a4 1b       	sub	r26, r20
 89e:	83 95       	inc	r24
 8a0:	50 51       	subi	r21, 0x10	; 16
 8a2:	b9 f7       	brne	.-18     	; 0x892 <__utoa_common+0x6>
 8a4:	a0 5d       	subi	r26, 0xD0	; 208
 8a6:	aa 33       	cpi	r26, 0x3A	; 58
 8a8:	08 f0       	brcs	.+2      	; 0x8ac <__utoa_common+0x20>
 8aa:	a9 5d       	subi	r26, 0xD9	; 217
 8ac:	a1 93       	st	Z+, r26
 8ae:	00 97       	sbiw	r24, 0x00	; 0
 8b0:	79 f7       	brne	.-34     	; 0x890 <__utoa_common+0x4>
 8b2:	b1 11       	cpse	r27, r1
 8b4:	b1 93       	st	Z+, r27
 8b6:	11 92       	st	Z+, r1
 8b8:	cb 01       	movw	r24, r22
 8ba:	0c 94 5f 04 	jmp	0x8be	; 0x8be <strrev>

000008be <strrev>:
 8be:	dc 01       	movw	r26, r24
 8c0:	fc 01       	movw	r30, r24
 8c2:	67 2f       	mov	r22, r23
 8c4:	71 91       	ld	r23, Z+
 8c6:	77 23       	and	r23, r23
 8c8:	e1 f7       	brne	.-8      	; 0x8c2 <strrev+0x4>
 8ca:	32 97       	sbiw	r30, 0x02	; 2
 8cc:	04 c0       	rjmp	.+8      	; 0x8d6 <strrev+0x18>
 8ce:	7c 91       	ld	r23, X
 8d0:	6d 93       	st	X+, r22
 8d2:	70 83       	st	Z, r23
 8d4:	62 91       	ld	r22, -Z
 8d6:	ae 17       	cp	r26, r30
 8d8:	bf 07       	cpc	r27, r31
 8da:	c8 f3       	brcs	.-14     	; 0x8ce <strrev+0x10>
 8dc:	08 95       	ret

000008de <_exit>:
 8de:	f8 94       	cli

000008e0 <__stop_program>:
 8e0:	ff cf       	rjmp	.-2      	; 0x8e0 <__stop_program>
