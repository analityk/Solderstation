
Lutownica.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000d50  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000cdc  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000003c  00800100  00800100  00000d50  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000d50  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000d80  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000168  00000000  00000000  00000dc0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000240c  00000000  00000000  00000f28  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000eed  00000000  00000000  00003334  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000b11  00000000  00000000  00004221  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000464  00000000  00000000  00004d34  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000939  00000000  00000000  00005198  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000116a  00000000  00000000  00005ad1  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000128  00000000  00000000  00006c3b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 35 00 	jmp	0x6a	; 0x6a <__ctors_end>
   4:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
   8:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
   c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  10:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  14:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  18:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  1c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  20:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  24:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  28:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  2c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  30:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  34:	0c 94 42 02 	jmp	0x484	; 0x484 <__vector_13>
  38:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  3c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  40:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  44:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  48:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  4c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  50:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  54:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  58:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  5c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  60:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  64:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>

00000068 <__ctors_start>:
  68:	fa 03       	fmulsu	r23, r18

0000006a <__ctors_end>:
  6a:	11 24       	eor	r1, r1
  6c:	1f be       	out	0x3f, r1	; 63
  6e:	cf ef       	ldi	r28, 0xFF	; 255
  70:	d8 e0       	ldi	r29, 0x08	; 8
  72:	de bf       	out	0x3e, r29	; 62
  74:	cd bf       	out	0x3d, r28	; 61

00000076 <__do_copy_data>:
  76:	11 e0       	ldi	r17, 0x01	; 1
  78:	a0 e0       	ldi	r26, 0x00	; 0
  7a:	b1 e0       	ldi	r27, 0x01	; 1
  7c:	ec ed       	ldi	r30, 0xDC	; 220
  7e:	fc e0       	ldi	r31, 0x0C	; 12
  80:	02 c0       	rjmp	.+4      	; 0x86 <__do_copy_data+0x10>
  82:	05 90       	lpm	r0, Z+
  84:	0d 92       	st	X+, r0
  86:	a0 30       	cpi	r26, 0x00	; 0
  88:	b1 07       	cpc	r27, r17
  8a:	d9 f7       	brne	.-10     	; 0x82 <__do_copy_data+0xc>

0000008c <__do_clear_bss>:
  8c:	21 e0       	ldi	r18, 0x01	; 1
  8e:	a0 e0       	ldi	r26, 0x00	; 0
  90:	b1 e0       	ldi	r27, 0x01	; 1
  92:	01 c0       	rjmp	.+2      	; 0x96 <.do_clear_bss_start>

00000094 <.do_clear_bss_loop>:
  94:	1d 92       	st	X+, r1

00000096 <.do_clear_bss_start>:
  96:	ac 33       	cpi	r26, 0x3C	; 60
  98:	b2 07       	cpc	r27, r18
  9a:	e1 f7       	brne	.-8      	; 0x94 <.do_clear_bss_loop>

0000009c <__do_global_ctors>:
  9c:	10 e0       	ldi	r17, 0x00	; 0
  9e:	c5 e3       	ldi	r28, 0x35	; 53
  a0:	d0 e0       	ldi	r29, 0x00	; 0
  a2:	04 c0       	rjmp	.+8      	; 0xac <__do_global_ctors+0x10>
  a4:	21 97       	sbiw	r28, 0x01	; 1
  a6:	fe 01       	movw	r30, r28
  a8:	0e 94 31 06 	call	0xc62	; 0xc62 <__tablejump2__>
  ac:	c4 33       	cpi	r28, 0x34	; 52
  ae:	d1 07       	cpc	r29, r17
  b0:	c9 f7       	brne	.-14     	; 0xa4 <__do_global_ctors+0x8>
  b2:	0e 94 10 03 	call	0x620	; 0x620 <main>
  b6:	0c 94 6c 06 	jmp	0xcd8	; 0xcd8 <_exit>

000000ba <__bad_interrupt>:
  ba:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000be <_ZN3LCD5DelayEj>:
		WriteCGR((uint8_t)(str[i]));
	};
};

void LCD::WriteChar(char c)
{
  be:	cf 93       	push	r28
  c0:	df 93       	push	r29
  c2:	00 d0       	rcall	.+0      	; 0xc4 <_ZN3LCD5DelayEj+0x6>
  c4:	cd b7       	in	r28, 0x3d	; 61
  c6:	de b7       	in	r29, 0x3e	; 62
  c8:	7a 83       	std	Y+2, r23	; 0x02
  ca:	69 83       	std	Y+1, r22	; 0x01
  cc:	89 81       	ldd	r24, Y+1	; 0x01
  ce:	9a 81       	ldd	r25, Y+2	; 0x02
  d0:	9c 01       	movw	r18, r24
  d2:	21 50       	subi	r18, 0x01	; 1
  d4:	31 09       	sbc	r19, r1
  d6:	3a 83       	std	Y+2, r19	; 0x02
  d8:	29 83       	std	Y+1, r18	; 0x01
  da:	89 2b       	or	r24, r25
  dc:	b9 f7       	brne	.-18     	; 0xcc <_ZN3LCD5DelayEj+0xe>
  de:	0f 90       	pop	r0
  e0:	0f 90       	pop	r0
  e2:	df 91       	pop	r29
  e4:	cf 91       	pop	r28
  e6:	08 95       	ret

000000e8 <_ZN3LCD7CommandEh>:
  e8:	5a 98       	cbi	0x0b, 2	; 11
  ea:	2b b1       	in	r18, 0x0b	; 11
  ec:	2f 71       	andi	r18, 0x1F	; 31
  ee:	2b b9       	out	0x0b, r18	; 11
  f0:	4b b1       	in	r20, 0x0b	; 11
  f2:	50 e2       	ldi	r21, 0x20	; 32
  f4:	65 9f       	mul	r22, r21
  f6:	90 01       	movw	r18, r0
  f8:	11 24       	eor	r1, r1
  fa:	24 2b       	or	r18, r20
  fc:	2b b9       	out	0x0b, r18	; 11
  fe:	66 95       	lsr	r22
 100:	66 95       	lsr	r22
 102:	66 95       	lsr	r22
 104:	25 b1       	in	r18, 0x05	; 5
 106:	20 7e       	andi	r18, 0xE0	; 224
 108:	25 b9       	out	0x05, r18	; 5
 10a:	65 b9       	out	0x05, r22	; 5
 10c:	5c 9a       	sbi	0x0b, 4	; 11
 10e:	6f ef       	ldi	r22, 0xFF	; 255
 110:	70 e0       	ldi	r23, 0x00	; 0
 112:	0e 94 5f 00 	call	0xbe	; 0xbe <_ZN3LCD5DelayEj>
 116:	5c 98       	cbi	0x0b, 4	; 11
 118:	08 95       	ret

0000011a <_ZN3LCD8WriteCGREh>:
 11a:	5a 9a       	sbi	0x0b, 2	; 11
 11c:	2b b1       	in	r18, 0x0b	; 11
 11e:	2f 71       	andi	r18, 0x1F	; 31
 120:	2b b9       	out	0x0b, r18	; 11
 122:	4b b1       	in	r20, 0x0b	; 11
 124:	50 e2       	ldi	r21, 0x20	; 32
 126:	65 9f       	mul	r22, r21
 128:	90 01       	movw	r18, r0
 12a:	11 24       	eor	r1, r1
 12c:	24 2b       	or	r18, r20
 12e:	2b b9       	out	0x0b, r18	; 11
 130:	66 95       	lsr	r22
 132:	66 95       	lsr	r22
 134:	66 95       	lsr	r22
 136:	25 b1       	in	r18, 0x05	; 5
 138:	20 7e       	andi	r18, 0xE0	; 224
 13a:	25 b9       	out	0x05, r18	; 5
 13c:	65 b9       	out	0x05, r22	; 5
 13e:	5c 9a       	sbi	0x0b, 4	; 11
 140:	6f ef       	ldi	r22, 0xFF	; 255
 142:	70 e0       	ldi	r23, 0x00	; 0
 144:	0e 94 5f 00 	call	0xbe	; 0xbe <_ZN3LCD5DelayEj>
 148:	5c 98       	cbi	0x0b, 4	; 11
 14a:	5a 98       	cbi	0x0b, 2	; 11
 14c:	08 95       	ret

0000014e <_ZN3LCD4InitEv>:
 14e:	cf 93       	push	r28
 150:	df 93       	push	r29
 152:	ec 01       	movw	r28, r24
 154:	8a b1       	in	r24, 0x0a	; 10
 156:	8c 61       	ori	r24, 0x1C	; 28
 158:	8a b9       	out	0x0a, r24	; 10
 15a:	8b b1       	in	r24, 0x0b	; 11
 15c:	83 7e       	andi	r24, 0xE3	; 227
 15e:	8b b9       	out	0x0b, r24	; 11
 160:	8a b1       	in	r24, 0x0a	; 10
 162:	80 6e       	ori	r24, 0xE0	; 224
 164:	8a b9       	out	0x0a, r24	; 10
 166:	8b b1       	in	r24, 0x0b	; 11
 168:	8f 71       	andi	r24, 0x1F	; 31
 16a:	8b b9       	out	0x0b, r24	; 11
 16c:	84 b1       	in	r24, 0x04	; 4
 16e:	8f 61       	ori	r24, 0x1F	; 31
 170:	84 b9       	out	0x04, r24	; 4
 172:	85 b1       	in	r24, 0x05	; 5
 174:	80 7e       	andi	r24, 0xE0	; 224
 176:	85 b9       	out	0x05, r24	; 5
 178:	85 b1       	in	r24, 0x05	; 5
 17a:	87 60       	ori	r24, 0x07	; 7
 17c:	85 b9       	out	0x05, r24	; 5
 17e:	5c 9a       	sbi	0x0b, 4	; 11
 180:	6f ef       	ldi	r22, 0xFF	; 255
 182:	7f ef       	ldi	r23, 0xFF	; 255
 184:	ce 01       	movw	r24, r28
 186:	0e 94 5f 00 	call	0xbe	; 0xbe <_ZN3LCD5DelayEj>
 18a:	5c 98       	cbi	0x0b, 4	; 11
 18c:	85 b1       	in	r24, 0x05	; 5
 18e:	89 7f       	andi	r24, 0xF9	; 249
 190:	85 b9       	out	0x05, r24	; 5
 192:	8b b1       	in	r24, 0x0b	; 11
 194:	80 6c       	ori	r24, 0xC0	; 192
 196:	8b b9       	out	0x0b, r24	; 11
 198:	5c 9a       	sbi	0x0b, 4	; 11
 19a:	6f ef       	ldi	r22, 0xFF	; 255
 19c:	7f e0       	ldi	r23, 0x0F	; 15
 19e:	ce 01       	movw	r24, r28
 1a0:	0e 94 5f 00 	call	0xbe	; 0xbe <_ZN3LCD5DelayEj>
 1a4:	5c 98       	cbi	0x0b, 4	; 11
 1a6:	5c 9a       	sbi	0x0b, 4	; 11
 1a8:	6f ef       	ldi	r22, 0xFF	; 255
 1aa:	7f e0       	ldi	r23, 0x0F	; 15
 1ac:	ce 01       	movw	r24, r28
 1ae:	0e 94 5f 00 	call	0xbe	; 0xbe <_ZN3LCD5DelayEj>
 1b2:	5c 98       	cbi	0x0b, 4	; 11
 1b4:	8b b1       	in	r24, 0x0b	; 11
 1b6:	8f 73       	andi	r24, 0x3F	; 63
 1b8:	8b b9       	out	0x0b, r24	; 11
 1ba:	28 98       	cbi	0x05, 0	; 5
 1bc:	61 e0       	ldi	r22, 0x01	; 1
 1be:	ce 01       	movw	r24, r28
 1c0:	0e 94 74 00 	call	0xe8	; 0xe8 <_ZN3LCD7CommandEh>
 1c4:	62 e0       	ldi	r22, 0x02	; 2
 1c6:	ce 01       	movw	r24, r28
 1c8:	0e 94 74 00 	call	0xe8	; 0xe8 <_ZN3LCD7CommandEh>
 1cc:	66 e0       	ldi	r22, 0x06	; 6
 1ce:	ce 01       	movw	r24, r28
 1d0:	0e 94 74 00 	call	0xe8	; 0xe8 <_ZN3LCD7CommandEh>
 1d4:	6f e0       	ldi	r22, 0x0F	; 15
 1d6:	ce 01       	movw	r24, r28
 1d8:	0e 94 74 00 	call	0xe8	; 0xe8 <_ZN3LCD7CommandEh>
 1dc:	64 e1       	ldi	r22, 0x14	; 20
 1de:	ce 01       	movw	r24, r28
 1e0:	0e 94 74 00 	call	0xe8	; 0xe8 <_ZN3LCD7CommandEh>
 1e4:	62 e0       	ldi	r22, 0x02	; 2
 1e6:	ce 01       	movw	r24, r28
 1e8:	0e 94 74 00 	call	0xe8	; 0xe8 <_ZN3LCD7CommandEh>
 1ec:	df 91       	pop	r29
 1ee:	cf 91       	pop	r28
 1f0:	08 95       	ret

000001f2 <_ZN3LCD11WriteStringEPc>:
 1f2:	bf 92       	push	r11
 1f4:	cf 92       	push	r12
 1f6:	df 92       	push	r13
 1f8:	ef 92       	push	r14
 1fa:	ff 92       	push	r15
 1fc:	0f 93       	push	r16
 1fe:	1f 93       	push	r17
 200:	cf 93       	push	r28
 202:	df 93       	push	r29
 204:	7c 01       	movw	r14, r24
 206:	8b 01       	movw	r16, r22
 208:	d4 e1       	ldi	r29, 0x14	; 20
 20a:	0f 2e       	mov	r0, r31
 20c:	f4 e1       	ldi	r31, 0x14	; 20
 20e:	bf 2e       	mov	r11, r31
 210:	f0 2d       	mov	r31, r0
 212:	68 01       	movw	r12, r16
 214:	f8 01       	movw	r30, r16
 216:	80 81       	ld	r24, Z
 218:	8a 30       	cpi	r24, 0x0A	; 10
 21a:	71 f4       	brne	.+28     	; 0x238 <_ZN3LCD11WriteStringEPc+0x46>
 21c:	8b 2d       	mov	r24, r11
 21e:	8d 1b       	sub	r24, r29
 220:	84 31       	cpi	r24, 0x14	; 20
 222:	50 f4       	brcc	.+20     	; 0x238 <_ZN3LCD11WriteStringEPc+0x46>
 224:	dd 23       	and	r29, r29
 226:	91 f0       	breq	.+36     	; 0x24c <_ZN3LCD11WriteStringEPc+0x5a>
 228:	c0 e0       	ldi	r28, 0x00	; 0
 22a:	60 e2       	ldi	r22, 0x20	; 32
 22c:	c7 01       	movw	r24, r14
 22e:	0e 94 8d 00 	call	0x11a	; 0x11a <_ZN3LCD8WriteCGREh>
 232:	cf 5f       	subi	r28, 0xFF	; 255
 234:	dc 13       	cpse	r29, r28
 236:	f9 cf       	rjmp	.-14     	; 0x22a <_ZN3LCD11WriteStringEPc+0x38>
 238:	0f 5f       	subi	r16, 0xFF	; 255
 23a:	1f 4f       	sbci	r17, 0xFF	; 255
 23c:	f6 01       	movw	r30, r12
 23e:	60 81       	ld	r22, Z
 240:	c7 01       	movw	r24, r14
 242:	0e 94 8d 00 	call	0x11a	; 0x11a <_ZN3LCD8WriteCGREh>
 246:	d1 50       	subi	r29, 0x01	; 1
 248:	21 f7       	brne	.-56     	; 0x212 <_ZN3LCD11WriteStringEPc+0x20>
 24a:	09 c0       	rjmp	.+18     	; 0x25e <_ZN3LCD11WriteStringEPc+0x6c>
 24c:	0f 5f       	subi	r16, 0xFF	; 255
 24e:	1f 4f       	sbci	r17, 0xFF	; 255
 250:	f6 01       	movw	r30, r12
 252:	60 81       	ld	r22, Z
 254:	c7 01       	movw	r24, r14
 256:	0e 94 8d 00 	call	0x11a	; 0x11a <_ZN3LCD8WriteCGREh>
 25a:	d1 50       	subi	r29, 0x01	; 1
 25c:	da cf       	rjmp	.-76     	; 0x212 <_ZN3LCD11WriteStringEPc+0x20>
 25e:	df 91       	pop	r29
 260:	cf 91       	pop	r28
 262:	1f 91       	pop	r17
 264:	0f 91       	pop	r16
 266:	ff 90       	pop	r15
 268:	ef 90       	pop	r14
 26a:	df 90       	pop	r13
 26c:	cf 90       	pop	r12
 26e:	bf 90       	pop	r11
 270:	08 95       	ret

00000272 <_ZN3LCD13GoToFirstLineEv>:
	
};

void LCD::GoToFirstLine(void)
{
	Command(LCD_SET_DDRAM_ADDR| 0);
 272:	60 e8       	ldi	r22, 0x80	; 128
 274:	0e 94 74 00 	call	0xe8	; 0xe8 <_ZN3LCD7CommandEh>
 278:	08 95       	ret

0000027a <_ZN3LCD14GoToSecondLineEv>:
};

void LCD::GoToSecondLine(void)
{
	Command(LCD_SET_DDRAM_ADDR| 40);
 27a:	68 ea       	ldi	r22, 0xA8	; 168
 27c:	0e 94 74 00 	call	0xe8	; 0xe8 <_ZN3LCD7CommandEh>
 280:	08 95       	ret

00000282 <_Z11ds_pin_hi_zv>:
	writebyte(0xCC);
	writebyte(0xBE);
	uint8_t msb = readbyte();
	uint8_t lsb = readbyte();
	return (lsb<<8)|msb;
};
 282:	38 98       	cbi	0x07, 0	; 7
 284:	40 98       	cbi	0x08, 0	; 8
 286:	08 95       	ret

00000288 <_ZN11Dallas18B20C1Ev>:
	};
};

 Dallas18B20::Dallas18B20()
{
	ds_pin_hi_z();
 288:	0e 94 41 01 	call	0x282	; 0x282 <_Z11ds_pin_hi_zv>
 28c:	08 95       	ret

0000028e <_ZN3PID7ComputeEv>:
	this->kt = dt;
};

void PID::SetSetpoint(float setpoint)
{
	this->setpoint = setpoint;
 28e:	4f 92       	push	r4
 290:	5f 92       	push	r5
 292:	6f 92       	push	r6
 294:	7f 92       	push	r7
 296:	8f 92       	push	r8
 298:	9f 92       	push	r9
 29a:	af 92       	push	r10
 29c:	bf 92       	push	r11
 29e:	cf 92       	push	r12
 2a0:	df 92       	push	r13
 2a2:	ef 92       	push	r14
 2a4:	ff 92       	push	r15
 2a6:	cf 93       	push	r28
 2a8:	df 93       	push	r29
 2aa:	00 d0       	rcall	.+0      	; 0x2ac <_ZN3PID7ComputeEv+0x1e>
 2ac:	00 d0       	rcall	.+0      	; 0x2ae <_ZN3PID7ComputeEv+0x20>
 2ae:	00 d0       	rcall	.+0      	; 0x2b0 <_ZN3PID7ComputeEv+0x22>
 2b0:	cd b7       	in	r28, 0x3d	; 61
 2b2:	de b7       	in	r29, 0x3e	; 62
 2b4:	9e 83       	std	Y+6, r25	; 0x06
 2b6:	8d 83       	std	Y+5, r24	; 0x05
 2b8:	fc 01       	movw	r30, r24
 2ba:	24 a1       	ldd	r18, Z+36	; 0x24
 2bc:	35 a1       	ldd	r19, Z+37	; 0x25
 2be:	46 a1       	ldd	r20, Z+38	; 0x26
 2c0:	57 a1       	ldd	r21, Z+39	; 0x27
 2c2:	60 a5       	ldd	r22, Z+40	; 0x28
 2c4:	71 a5       	ldd	r23, Z+41	; 0x29
 2c6:	82 a5       	ldd	r24, Z+42	; 0x2a
 2c8:	93 a5       	ldd	r25, Z+43	; 0x2b
 2ca:	0e 94 21 04 	call	0x842	; 0x842 <__subsf3>
 2ce:	6b 01       	movw	r12, r22
 2d0:	7c 01       	movw	r14, r24
 2d2:	ed 81       	ldd	r30, Y+5	; 0x05
 2d4:	fe 81       	ldd	r31, Y+6	; 0x06
 2d6:	60 83       	st	Z, r22
 2d8:	71 83       	std	Z+1, r23	; 0x01
 2da:	82 83       	std	Z+2, r24	; 0x02
 2dc:	93 83       	std	Z+3, r25	; 0x03
 2de:	84 88       	ldd	r8, Z+20	; 0x14
 2e0:	95 88       	ldd	r9, Z+21	; 0x15
 2e2:	a6 88       	ldd	r10, Z+22	; 0x16
 2e4:	b7 88       	ldd	r11, Z+23	; 0x17
 2e6:	a5 01       	movw	r20, r10
 2e8:	94 01       	movw	r18, r8
 2ea:	0e 94 c4 05 	call	0xb88	; 0xb88 <__mulsf3>
 2ee:	ed 81       	ldd	r30, Y+5	; 0x05
 2f0:	fe 81       	ldd	r31, Y+6	; 0x06
 2f2:	24 85       	ldd	r18, Z+12	; 0x0c
 2f4:	35 85       	ldd	r19, Z+13	; 0x0d
 2f6:	46 85       	ldd	r20, Z+14	; 0x0e
 2f8:	57 85       	ldd	r21, Z+15	; 0x0f
 2fa:	0e 94 22 04 	call	0x844	; 0x844 <__addsf3>
 2fe:	2b 01       	movw	r4, r22
 300:	3c 01       	movw	r6, r24
 302:	ed 81       	ldd	r30, Y+5	; 0x05
 304:	fe 81       	ldd	r31, Y+6	; 0x06
 306:	64 87       	std	Z+12, r22	; 0x0c
 308:	75 87       	std	Z+13, r23	; 0x0d
 30a:	86 87       	std	Z+14, r24	; 0x0e
 30c:	97 87       	std	Z+15, r25	; 0x0f
 30e:	24 81       	ldd	r18, Z+4	; 0x04
 310:	35 81       	ldd	r19, Z+5	; 0x05
 312:	46 81       	ldd	r20, Z+6	; 0x06
 314:	57 81       	ldd	r21, Z+7	; 0x07
 316:	c7 01       	movw	r24, r14
 318:	b6 01       	movw	r22, r12
 31a:	0e 94 21 04 	call	0x842	; 0x842 <__subsf3>
 31e:	a5 01       	movw	r20, r10
 320:	94 01       	movw	r18, r8
 322:	0e 94 8e 04 	call	0x91c	; 0x91c <__divsf3>
 326:	4b 01       	movw	r8, r22
 328:	5c 01       	movw	r10, r24
 32a:	ed 81       	ldd	r30, Y+5	; 0x05
 32c:	fe 81       	ldd	r31, Y+6	; 0x06
 32e:	60 87       	std	Z+8, r22	; 0x08
 330:	71 87       	std	Z+9, r23	; 0x09
 332:	82 87       	std	Z+10, r24	; 0x0a
 334:	93 87       	std	Z+11, r25	; 0x0b
 336:	20 8d       	ldd	r18, Z+24	; 0x18
 338:	31 8d       	ldd	r19, Z+25	; 0x19
 33a:	42 8d       	ldd	r20, Z+26	; 0x1a
 33c:	53 8d       	ldd	r21, Z+27	; 0x1b
 33e:	c7 01       	movw	r24, r14
 340:	b6 01       	movw	r22, r12
 342:	0e 94 c4 05 	call	0xb88	; 0xb88 <__mulsf3>
 346:	69 83       	std	Y+1, r22	; 0x01
 348:	7a 83       	std	Y+2, r23	; 0x02
 34a:	8b 83       	std	Y+3, r24	; 0x03
 34c:	9c 83       	std	Y+4, r25	; 0x04
 34e:	ed 81       	ldd	r30, Y+5	; 0x05
 350:	fe 81       	ldd	r31, Y+6	; 0x06
 352:	24 8d       	ldd	r18, Z+28	; 0x1c
 354:	35 8d       	ldd	r19, Z+29	; 0x1d
 356:	46 8d       	ldd	r20, Z+30	; 0x1e
 358:	57 8d       	ldd	r21, Z+31	; 0x1f
 35a:	c3 01       	movw	r24, r6
 35c:	b2 01       	movw	r22, r4
 35e:	0e 94 c4 05 	call	0xb88	; 0xb88 <__mulsf3>
 362:	9b 01       	movw	r18, r22
 364:	ac 01       	movw	r20, r24
 366:	69 81       	ldd	r22, Y+1	; 0x01
 368:	7a 81       	ldd	r23, Y+2	; 0x02
 36a:	8b 81       	ldd	r24, Y+3	; 0x03
 36c:	9c 81       	ldd	r25, Y+4	; 0x04
 36e:	0e 94 22 04 	call	0x844	; 0x844 <__addsf3>
 372:	2b 01       	movw	r4, r22
 374:	3c 01       	movw	r6, r24
 376:	ed 81       	ldd	r30, Y+5	; 0x05
 378:	fe 81       	ldd	r31, Y+6	; 0x06
 37a:	20 a1       	ldd	r18, Z+32	; 0x20
 37c:	31 a1       	ldd	r19, Z+33	; 0x21
 37e:	42 a1       	ldd	r20, Z+34	; 0x22
 380:	53 a1       	ldd	r21, Z+35	; 0x23
 382:	c5 01       	movw	r24, r10
 384:	b4 01       	movw	r22, r8
 386:	0e 94 c4 05 	call	0xb88	; 0xb88 <__mulsf3>
 38a:	9b 01       	movw	r18, r22
 38c:	ac 01       	movw	r20, r24
 38e:	c3 01       	movw	r24, r6
 390:	b2 01       	movw	r22, r4
 392:	0e 94 22 04 	call	0x844	; 0x844 <__addsf3>
 396:	ed 81       	ldd	r30, Y+5	; 0x05
 398:	fe 81       	ldd	r31, Y+6	; 0x06
 39a:	60 8b       	std	Z+16, r22	; 0x10
 39c:	71 8b       	std	Z+17, r23	; 0x11
 39e:	82 8b       	std	Z+18, r24	; 0x12
 3a0:	93 8b       	std	Z+19, r25	; 0x13
 3a2:	c4 82       	std	Z+4, r12	; 0x04
 3a4:	d5 82       	std	Z+5, r13	; 0x05
 3a6:	e6 82       	std	Z+6, r14	; 0x06
 3a8:	f7 82       	std	Z+7, r15	; 0x07
 3aa:	26 96       	adiw	r28, 0x06	; 6
 3ac:	0f b6       	in	r0, 0x3f	; 63
 3ae:	f8 94       	cli
 3b0:	de bf       	out	0x3e, r29	; 62
 3b2:	0f be       	out	0x3f, r0	; 63
 3b4:	cd bf       	out	0x3d, r28	; 61
 3b6:	df 91       	pop	r29
 3b8:	cf 91       	pop	r28
 3ba:	ff 90       	pop	r15
 3bc:	ef 90       	pop	r14
 3be:	df 90       	pop	r13
 3c0:	cf 90       	pop	r12
 3c2:	bf 90       	pop	r11
 3c4:	af 90       	pop	r10
 3c6:	9f 90       	pop	r9
 3c8:	8f 90       	pop	r8
 3ca:	7f 90       	pop	r7
 3cc:	6f 90       	pop	r6
 3ce:	5f 90       	pop	r5
 3d0:	4f 90       	pop	r4
 3d2:	08 95       	ret

000003d4 <_ZN3PID4FeedEf>:
};

void PID::Feed(float val)
{
	this->measure = val;
 3d4:	fc 01       	movw	r30, r24
 3d6:	44 a3       	std	Z+36, r20	; 0x24
 3d8:	55 a3       	std	Z+37, r21	; 0x25
 3da:	66 a3       	std	Z+38, r22	; 0x26
 3dc:	77 a3       	std	Z+39, r23	; 0x27
 3de:	08 95       	ret

000003e0 <_ZN3PID6OutputEv>:
};

float PID::Output(void)
{
	return output;
 3e0:	fc 01       	movw	r30, r24
 3e2:	60 89       	ldd	r22, Z+16	; 0x10
 3e4:	71 89       	ldd	r23, Z+17	; 0x11
 3e6:	82 89       	ldd	r24, Z+18	; 0x12
 3e8:	93 89       	ldd	r25, Z+19	; 0x13
};
 3ea:	08 95       	ret

000003ec <_Z5delaym>:
	float units = (float)(x - a);
	float result = (units * dd) + (float)c;
	return (int32_t)(result);
};

void delay(uint32_t volatile t){
 3ec:	cf 93       	push	r28
 3ee:	df 93       	push	r29
 3f0:	00 d0       	rcall	.+0      	; 0x3f2 <_Z5delaym+0x6>
 3f2:	00 d0       	rcall	.+0      	; 0x3f4 <_Z5delaym+0x8>
 3f4:	cd b7       	in	r28, 0x3d	; 61
 3f6:	de b7       	in	r29, 0x3e	; 62
 3f8:	69 83       	std	Y+1, r22	; 0x01
 3fa:	7a 83       	std	Y+2, r23	; 0x02
 3fc:	8b 83       	std	Y+3, r24	; 0x03
 3fe:	9c 83       	std	Y+4, r25	; 0x04
	while(t--){};
 400:	89 81       	ldd	r24, Y+1	; 0x01
 402:	9a 81       	ldd	r25, Y+2	; 0x02
 404:	ab 81       	ldd	r26, Y+3	; 0x03
 406:	bc 81       	ldd	r27, Y+4	; 0x04
 408:	ac 01       	movw	r20, r24
 40a:	bd 01       	movw	r22, r26
 40c:	41 50       	subi	r20, 0x01	; 1
 40e:	51 09       	sbc	r21, r1
 410:	61 09       	sbc	r22, r1
 412:	71 09       	sbc	r23, r1
 414:	49 83       	std	Y+1, r20	; 0x01
 416:	5a 83       	std	Y+2, r21	; 0x02
 418:	6b 83       	std	Y+3, r22	; 0x03
 41a:	7c 83       	std	Y+4, r23	; 0x04
 41c:	89 2b       	or	r24, r25
 41e:	8a 2b       	or	r24, r26
 420:	8b 2b       	or	r24, r27
 422:	71 f7       	brne	.-36     	; 0x400 <__LOCK_REGION_LENGTH__>
};
 424:	0f 90       	pop	r0
 426:	0f 90       	pop	r0
 428:	0f 90       	pop	r0
 42a:	0f 90       	pop	r0
 42c:	df 91       	pop	r29
 42e:	cf 91       	pop	r28
 430:	08 95       	ret

00000432 <_Z8adc_readh>:

uint16_t adc_read(uint8_t pinc){
	ADMUX = (0<<REFS1)|(1<<REFS0)|pinc;
 432:	80 64       	ori	r24, 0x40	; 64
 434:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
	ADCSRA |= (1<<ADSC);
 438:	ea e7       	ldi	r30, 0x7A	; 122
 43a:	f0 e0       	ldi	r31, 0x00	; 0
 43c:	80 81       	ld	r24, Z
 43e:	80 64       	ori	r24, 0x40	; 64
 440:	80 83       	st	Z, r24
	while( ADCSRA & (1 << ADSC )){};
 442:	80 81       	ld	r24, Z
 444:	86 fd       	sbrc	r24, 6
 446:	fd cf       	rjmp	.-6      	; 0x442 <_Z8adc_readh+0x10>
	uint8_t lsb = ADCL;
 448:	20 91 78 00 	lds	r18, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
	uint8_t msb = ADCH;
 44c:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
	uint16_t t = lsb + (msb<<8);
	return t;
 450:	90 e0       	ldi	r25, 0x00	; 0
 452:	98 2f       	mov	r25, r24
 454:	88 27       	eor	r24, r24
};
 456:	82 0f       	add	r24, r18
 458:	91 1d       	adc	r25, r1
 45a:	08 95       	ret

0000045c <_Z4cstrPc>:

void cstr(char* t){
 45c:	fc 01       	movw	r30, r24
 45e:	9c 01       	movw	r18, r24
 460:	21 50       	subi	r18, 0x01	; 1
 462:	3f 4f       	sbci	r19, 0xFF	; 255
	for(uint8_t i=0; i<255; i++){
		if(! (((t[i] >= 48) && (t[i] <=59 )) || (t[i] == '.') || (t[i] == '-')) ){
 464:	df 01       	movw	r26, r30
 466:	81 91       	ld	r24, Z+
 468:	90 ed       	ldi	r25, 0xD0	; 208
 46a:	98 0f       	add	r25, r24
 46c:	9c 30       	cpi	r25, 0x0C	; 12
 46e:	30 f0       	brcs	.+12     	; 0x47c <_Z4cstrPc+0x20>
 470:	8d 52       	subi	r24, 0x2D	; 45
 472:	82 30       	cpi	r24, 0x02	; 2
 474:	18 f0       	brcs	.+6      	; 0x47c <_Z4cstrPc+0x20>
			t[i] = '\n';
 476:	8a e0       	ldi	r24, 0x0A	; 10
 478:	8c 93       	st	X, r24
			break;
 47a:	08 95       	ret
	uint16_t t = lsb + (msb<<8);
	return t;
};

void cstr(char* t){
	for(uint8_t i=0; i<255; i++){
 47c:	e2 17       	cp	r30, r18
 47e:	f3 07       	cpc	r31, r19
 480:	89 f7       	brne	.-30     	; 0x464 <_Z4cstrPc+0x8>
 482:	08 95       	ret

00000484 <__vector_13>:
int32_t volatile drvtm2 = 0;

uint16_t real_tcnt1 = 0;
uint8_t volatile isr = 0;

ISR(TIMER1_OVF_vect){
 484:	1f 92       	push	r1
 486:	0f 92       	push	r0
 488:	0f b6       	in	r0, 0x3f	; 63
 48a:	0f 92       	push	r0
 48c:	11 24       	eor	r1, r1
 48e:	2f 93       	push	r18
 490:	3f 93       	push	r19
 492:	4f 93       	push	r20
 494:	5f 93       	push	r21
 496:	6f 93       	push	r22
 498:	7f 93       	push	r23
 49a:	8f 93       	push	r24
 49c:	9f 93       	push	r25
 49e:	af 93       	push	r26
 4a0:	bf 93       	push	r27
 4a2:	cf 93       	push	r28
 4a4:	df 93       	push	r29
 4a6:	ef 93       	push	r30
 4a8:	ff 93       	push	r31
	isr = 1;
 4aa:	81 e0       	ldi	r24, 0x01	; 1
 4ac:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_end>
	CLR_T0;
 4b0:	3a 9a       	sbi	0x07, 2	; 7
 4b2:	42 98       	cbi	0x08, 2	; 8
	while(adc_read(1) > 550){};
 4b4:	81 e0       	ldi	r24, 0x01	; 1
 4b6:	0e 94 19 02 	call	0x432	; 0x432 <_Z8adc_readh>
 4ba:	87 32       	cpi	r24, 0x27	; 39
 4bc:	92 40       	sbci	r25, 0x02	; 2
 4be:	d0 f7       	brcc	.-12     	; 0x4b4 <__vector_13+0x30>
	
	t_adc[0] = adc_read(1);
 4c0:	81 e0       	ldi	r24, 0x01	; 1
 4c2:	0e 94 19 02 	call	0x432	; 0x432 <_Z8adc_readh>
 4c6:	c7 e0       	ldi	r28, 0x07	; 7
 4c8:	d1 e0       	ldi	r29, 0x01	; 1
 4ca:	99 83       	std	Y+1, r25	; 0x01
 4cc:	88 83       	st	Y, r24
	t_adc[1] = adc_read(1);
 4ce:	81 e0       	ldi	r24, 0x01	; 1
 4d0:	0e 94 19 02 	call	0x432	; 0x432 <_Z8adc_readh>
 4d4:	9b 83       	std	Y+3, r25	; 0x03
 4d6:	8a 83       	std	Y+2, r24	; 0x02
	t_adc[2] = adc_read(1);
 4d8:	81 e0       	ldi	r24, 0x01	; 1
 4da:	0e 94 19 02 	call	0x432	; 0x432 <_Z8adc_readh>
 4de:	9d 83       	std	Y+5, r25	; 0x05
 4e0:	8c 83       	std	Y+4, r24	; 0x04
	t_adc[3] = adc_read(1);
 4e2:	81 e0       	ldi	r24, 0x01	; 1
 4e4:	0e 94 19 02 	call	0x432	; 0x432 <_Z8adc_readh>
 4e8:	9f 83       	std	Y+7, r25	; 0x07
 4ea:	8e 83       	std	Y+6, r24	; 0x06
	
	tavg = t_adc[0] + t_adc[1] + t_adc[2] + t_adc[3];
 4ec:	68 81       	ld	r22, Y
 4ee:	79 81       	ldd	r23, Y+1	; 0x01
 4f0:	8a 81       	ldd	r24, Y+2	; 0x02
 4f2:	9b 81       	ldd	r25, Y+3	; 0x03
 4f4:	4c 81       	ldd	r20, Y+4	; 0x04
 4f6:	5d 81       	ldd	r21, Y+5	; 0x05
 4f8:	2e 81       	ldd	r18, Y+6	; 0x06
 4fa:	3f 81       	ldd	r19, Y+7	; 0x07
 4fc:	86 0f       	add	r24, r22
 4fe:	97 1f       	adc	r25, r23
 500:	84 0f       	add	r24, r20
 502:	95 1f       	adc	r25, r21
 504:	82 0f       	add	r24, r18
 506:	93 1f       	adc	r25, r19
 508:	90 93 06 01 	sts	0x0106, r25	; 0x800106 <tavg+0x1>
 50c:	80 93 05 01 	sts	0x0105, r24	; 0x800105 <tavg>
	tavg /= 4;
 510:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <tavg>
 514:	90 91 06 01 	lds	r25, 0x0106	; 0x800106 <tavg+0x1>
 518:	96 95       	lsr	r25
 51a:	87 95       	ror	r24
 51c:	96 95       	lsr	r25
 51e:	87 95       	ror	r24
 520:	90 93 06 01 	sts	0x0106, r25	; 0x800106 <tavg+0x1>
 524:	80 93 05 01 	sts	0x0105, r24	; 0x800105 <tavg>
	
	pid.Feed((float)(tavg));
 528:	60 91 05 01 	lds	r22, 0x0105	; 0x800105 <tavg>
 52c:	70 91 06 01 	lds	r23, 0x0106	; 0x800106 <tavg+0x1>
 530:	80 e0       	ldi	r24, 0x00	; 0
 532:	90 e0       	ldi	r25, 0x00	; 0
 534:	0e 94 36 05 	call	0xa6c	; 0xa6c <__floatunsisf>
 538:	ab 01       	movw	r20, r22
 53a:	bc 01       	movw	r22, r24
 53c:	80 e1       	ldi	r24, 0x10	; 16
 53e:	91 e0       	ldi	r25, 0x01	; 1
 540:	0e 94 ea 01 	call	0x3d4	; 0x3d4 <_ZN3PID4FeedEf>
	pid.Compute();
 544:	80 e1       	ldi	r24, 0x10	; 16
 546:	91 e0       	ldi	r25, 0x01	; 1
 548:	0e 94 47 01 	call	0x28e	; 0x28e <_ZN3PID7ComputeEv>
	r = pid.Output();
 54c:	80 e1       	ldi	r24, 0x10	; 16
 54e:	91 e0       	ldi	r25, 0x01	; 1
 550:	0e 94 f0 01 	call	0x3e0	; 0x3e0 <_ZN3PID6OutputEv>
 554:	60 93 01 01 	sts	0x0101, r22	; 0x800101 <r>
 558:	70 93 02 01 	sts	0x0102, r23	; 0x800102 <r+0x1>
 55c:	80 93 03 01 	sts	0x0103, r24	; 0x800103 <r+0x2>
 560:	90 93 04 01 	sts	0x0104, r25	; 0x800104 <r+0x3>
	
	int32_t time = mmap(r, -32000, 32000, -32000, 32000);
 564:	60 91 01 01 	lds	r22, 0x0101	; 0x800101 <r>
 568:	70 91 02 01 	lds	r23, 0x0102	; 0x800102 <r+0x1>
 56c:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <r+0x2>
 570:	90 91 04 01 	lds	r25, 0x0104	; 0x800104 <r+0x3>
	float dc = (float)(d) - (float)(c);
	if( dc == 0 || da == 0 )return 0.0;
	float dd = dc / da;
	float units = (float)(x - a);
	float result = (units * dd) + (float)c;
	return (int32_t)(result);
 574:	20 e0       	ldi	r18, 0x00	; 0
 576:	30 e0       	ldi	r19, 0x00	; 0
 578:	4a ef       	ldi	r20, 0xFA	; 250
 57a:	56 e4       	ldi	r21, 0x46	; 70
 57c:	0e 94 22 04 	call	0x844	; 0x844 <__addsf3>
 580:	20 e0       	ldi	r18, 0x00	; 0
 582:	30 e0       	ldi	r19, 0x00	; 0
 584:	4a ef       	ldi	r20, 0xFA	; 250
 586:	56 e4       	ldi	r21, 0x46	; 70
 588:	0e 94 21 04 	call	0x842	; 0x842 <__subsf3>
 58c:	0e 94 00 05 	call	0xa00	; 0xa00 <__fixsfsi>
	pid.Compute();
	r = pid.Output();
	
	int32_t time = mmap(r, -32000, 32000, -32000, 32000);
	
	if( time >= 32000 ){
 590:	61 15       	cp	r22, r1
 592:	2d e7       	ldi	r18, 0x7D	; 125
 594:	72 07       	cpc	r23, r18
 596:	81 05       	cpc	r24, r1
 598:	91 05       	cpc	r25, r1
 59a:	64 f4       	brge	.+24     	; 0x5b4 <__vector_13+0x130>
		time = 32000;
	};
	
	if( time <= -32000 ){
 59c:	61 30       	cpi	r22, 0x01	; 1
 59e:	23 e8       	ldi	r18, 0x83	; 131
 5a0:	72 07       	cpc	r23, r18
 5a2:	2f ef       	ldi	r18, 0xFF	; 255
 5a4:	82 07       	cpc	r24, r18
 5a6:	92 07       	cpc	r25, r18
 5a8:	4c f4       	brge	.+18     	; 0x5bc <__vector_13+0x138>
		time = -32700;
 5aa:	64 e4       	ldi	r22, 0x44	; 68
 5ac:	70 e8       	ldi	r23, 0x80	; 128
 5ae:	8f ef       	ldi	r24, 0xFF	; 255
 5b0:	9f ef       	ldi	r25, 0xFF	; 255
 5b2:	04 c0       	rjmp	.+8      	; 0x5bc <__vector_13+0x138>
	r = pid.Output();
	
	int32_t time = mmap(r, -32000, 32000, -32000, 32000);
	
	if( time >= 32000 ){
		time = 32000;
 5b4:	60 e0       	ldi	r22, 0x00	; 0
 5b6:	7d e7       	ldi	r23, 0x7D	; 125
 5b8:	80 e0       	ldi	r24, 0x00	; 0
 5ba:	90 e0       	ldi	r25, 0x00	; 0
	
	if( time <= -32000 ){
		time = -32700;
	};
	
	if( phase == 0 ){
 5bc:	20 91 0f 01 	lds	r18, 0x010F	; 0x80010f <phase>
 5c0:	21 11       	cpse	r18, r1
 5c2:	0c c0       	rjmp	.+24     	; 0x5dc <__vector_13+0x158>
		TCNT1 = (uint16_t)(32760 + time);
 5c4:	68 50       	subi	r22, 0x08	; 8
 5c6:	70 48       	sbci	r23, 0x80	; 128
 5c8:	70 93 85 00 	sts	0x0085, r23	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 5cc:	60 93 84 00 	sts	0x0084, r22	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
		CLR_T0;
 5d0:	3a 9a       	sbi	0x07, 2	; 7
 5d2:	42 98       	cbi	0x08, 2	; 8
		phase = 1;
 5d4:	81 e0       	ldi	r24, 0x01	; 1
 5d6:	80 93 0f 01 	sts	0x010F, r24	; 0x80010f <phase>
 5da:	0d c0       	rjmp	.+26     	; 0x5f6 <__vector_13+0x172>
	}else{
		TCNT1 = (uint16_t)(32760 - time);
 5dc:	28 ef       	ldi	r18, 0xF8	; 248
 5de:	3f e7       	ldi	r19, 0x7F	; 127
 5e0:	c9 01       	movw	r24, r18
 5e2:	86 1b       	sub	r24, r22
 5e4:	97 0b       	sbc	r25, r23
 5e6:	90 93 85 00 	sts	0x0085, r25	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 5ea:	80 93 84 00 	sts	0x0084, r24	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
		SET_T0;
 5ee:	3a 9a       	sbi	0x07, 2	; 7
 5f0:	42 9a       	sbi	0x08, 2	; 8
		phase = 0;
 5f2:	10 92 0f 01 	sts	0x010F, r1	; 0x80010f <phase>
	};
	isr = 0;
 5f6:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__data_end>
};
 5fa:	ff 91       	pop	r31
 5fc:	ef 91       	pop	r30
 5fe:	df 91       	pop	r29
 600:	cf 91       	pop	r28
 602:	bf 91       	pop	r27
 604:	af 91       	pop	r26
 606:	9f 91       	pop	r25
 608:	8f 91       	pop	r24
 60a:	7f 91       	pop	r23
 60c:	6f 91       	pop	r22
 60e:	5f 91       	pop	r21
 610:	4f 91       	pop	r20
 612:	3f 91       	pop	r19
 614:	2f 91       	pop	r18
 616:	0f 90       	pop	r0
 618:	0f be       	out	0x3f, r0	; 63
 61a:	0f 90       	pop	r0
 61c:	1f 90       	pop	r1
 61e:	18 95       	reti

00000620 <main>:

int main(void)
{
 620:	cf 93       	push	r28
 622:	df 93       	push	r29
 624:	cd b7       	in	r28, 0x3d	; 61
 626:	de b7       	in	r29, 0x3e	; 62
 628:	ab 97       	sbiw	r28, 0x2b	; 43
 62a:	0f b6       	in	r0, 0x3f	; 63
 62c:	f8 94       	cli
 62e:	de bf       	out	0x3e, r29	; 62
 630:	0f be       	out	0x3f, r0	; 63
 632:	cd bf       	out	0x3d, r28	; 61
	LCD lcd;
	lcd.Init();
 634:	ce 01       	movw	r24, r28
 636:	01 96       	adiw	r24, 0x01	; 1
 638:	0e 94 a7 00 	call	0x14e	; 0x14e <_ZN3LCD4InitEv>

	lcd.Command(1);
 63c:	61 e0       	ldi	r22, 0x01	; 1
 63e:	ce 01       	movw	r24, r28
 640:	01 96       	adiw	r24, 0x01	; 1
 642:	0e 94 74 00 	call	0xe8	; 0xe8 <_ZN3LCD7CommandEh>
	lcd.Command(2);
 646:	62 e0       	ldi	r22, 0x02	; 2
 648:	ce 01       	movw	r24, r28
 64a:	01 96       	adiw	r24, 0x01	; 1
 64c:	0e 94 74 00 	call	0xe8	; 0xe8 <_ZN3LCD7CommandEh>
	lcd.Command(0x0C);
 650:	6c e0       	ldi	r22, 0x0C	; 12
 652:	ce 01       	movw	r24, r28
 654:	01 96       	adiw	r24, 0x01	; 1
 656:	0e 94 74 00 	call	0xe8	; 0xe8 <_ZN3LCD7CommandEh>

	Dallas18B20 ds18;
 65a:	ce 01       	movw	r24, r28
 65c:	02 96       	adiw	r24, 0x02	; 2
 65e:	0e 94 44 01 	call	0x288	; 0x288 <_ZN11Dallas18B20C1Ev>

	char str1[20];
	char str2[20];
	char str3[20];

	ADCSRA = (1<<ADEN)|(1<<ADPS2)|(1<<ADPS1)|(1<<ADPS0);
 662:	87 e8       	ldi	r24, 0x87	; 135
 664:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
	
	TCCR1B = (1<<CS11)|(1<<CS10);
 668:	83 e0       	ldi	r24, 0x03	; 3
 66a:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
	TCNT1 = 0;
 66e:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 672:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
	TIMSK1 = (1<<TOIE1);
 676:	81 e0       	ldi	r24, 0x01	; 1
 678:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
	
	
	uint8_t volatile preheat = 1;
 67c:	8b a7       	std	Y+43, r24	; 0x2b
	
	CLR_T0;
 67e:	3a 9a       	sbi	0x07, 2	; 7
 680:	42 98       	cbi	0x08, 2	; 8
	while(preheat){
		CLR_T0;
		
		while(adc_read(1) > 700){};
		
		t_adc[0] = adc_read(1);
 682:	07 e0       	ldi	r16, 0x07	; 7
 684:	11 e0       	ldi	r17, 0x01	; 1
			//lcd.WriteString(str1);
		//};
		//
	//};
	
	while(preheat){
 686:	8b a5       	ldd	r24, Y+43	; 0x2b
 688:	88 23       	and	r24, r24
 68a:	09 f4       	brne	.+2      	; 0x68e <main+0x6e>
 68c:	6b c0       	rjmp	.+214    	; 0x764 <main+0x144>
		CLR_T0;
 68e:	3a 9a       	sbi	0x07, 2	; 7
 690:	42 98       	cbi	0x08, 2	; 8
		
		while(adc_read(1) > 700){};
 692:	81 e0       	ldi	r24, 0x01	; 1
 694:	0e 94 19 02 	call	0x432	; 0x432 <_Z8adc_readh>
 698:	8d 3b       	cpi	r24, 0xBD	; 189
 69a:	92 40       	sbci	r25, 0x02	; 2
 69c:	d0 f7       	brcc	.-12     	; 0x692 <main+0x72>
		
		t_adc[0] = adc_read(1);
 69e:	81 e0       	ldi	r24, 0x01	; 1
 6a0:	0e 94 19 02 	call	0x432	; 0x432 <_Z8adc_readh>
 6a4:	f8 01       	movw	r30, r16
 6a6:	91 83       	std	Z+1, r25	; 0x01
 6a8:	80 83       	st	Z, r24
		t_adc[1] = adc_read(1);
 6aa:	81 e0       	ldi	r24, 0x01	; 1
 6ac:	0e 94 19 02 	call	0x432	; 0x432 <_Z8adc_readh>
 6b0:	f8 01       	movw	r30, r16
 6b2:	93 83       	std	Z+3, r25	; 0x03
 6b4:	82 83       	std	Z+2, r24	; 0x02
		t_adc[2] = adc_read(1);
 6b6:	81 e0       	ldi	r24, 0x01	; 1
 6b8:	0e 94 19 02 	call	0x432	; 0x432 <_Z8adc_readh>
 6bc:	f8 01       	movw	r30, r16
 6be:	95 83       	std	Z+5, r25	; 0x05
 6c0:	84 83       	std	Z+4, r24	; 0x04
		t_adc[3] = adc_read(1);
 6c2:	81 e0       	ldi	r24, 0x01	; 1
 6c4:	0e 94 19 02 	call	0x432	; 0x432 <_Z8adc_readh>
 6c8:	f8 01       	movw	r30, r16
 6ca:	97 83       	std	Z+7, r25	; 0x07
 6cc:	86 83       	std	Z+6, r24	; 0x06
		
		tavg = t_adc[0] + t_adc[1] + t_adc[2] + t_adc[3];
 6ce:	60 81       	ld	r22, Z
 6d0:	71 81       	ldd	r23, Z+1	; 0x01
 6d2:	42 81       	ldd	r20, Z+2	; 0x02
 6d4:	53 81       	ldd	r21, Z+3	; 0x03
 6d6:	24 81       	ldd	r18, Z+4	; 0x04
 6d8:	35 81       	ldd	r19, Z+5	; 0x05
 6da:	86 81       	ldd	r24, Z+6	; 0x06
 6dc:	97 81       	ldd	r25, Z+7	; 0x07
 6de:	46 0f       	add	r20, r22
 6e0:	57 1f       	adc	r21, r23
 6e2:	24 0f       	add	r18, r20
 6e4:	35 1f       	adc	r19, r21
 6e6:	82 0f       	add	r24, r18
 6e8:	93 1f       	adc	r25, r19
 6ea:	90 93 06 01 	sts	0x0106, r25	; 0x800106 <tavg+0x1>
 6ee:	80 93 05 01 	sts	0x0105, r24	; 0x800105 <tavg>
		tavg /= 4;
 6f2:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <tavg>
 6f6:	90 91 06 01 	lds	r25, 0x0106	; 0x800106 <tavg+0x1>
 6fa:	96 95       	lsr	r25
 6fc:	87 95       	ror	r24
 6fe:	96 95       	lsr	r25
 700:	87 95       	ror	r24
 702:	90 93 06 01 	sts	0x0106, r25	; 0x800106 <tavg+0x1>
 706:	80 93 05 01 	sts	0x0105, r24	; 0x800105 <tavg>
		
		itoa(tavg, str1, 10);
 70a:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <tavg>
 70e:	90 91 06 01 	lds	r25, 0x0106	; 0x800106 <tavg+0x1>
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
 712:	4a e0       	ldi	r20, 0x0A	; 10
 714:	be 01       	movw	r22, r28
 716:	6d 5f       	subi	r22, 0xFD	; 253
 718:	7f 4f       	sbci	r23, 0xFF	; 255
 71a:	0e 94 37 06 	call	0xc6e	; 0xc6e <__itoa_ncheck>
		cstr(str1);
 71e:	ce 01       	movw	r24, r28
 720:	03 96       	adiw	r24, 0x03	; 3
 722:	0e 94 2e 02 	call	0x45c	; 0x45c <_Z4cstrPc>
		
		lcd.GoToFirstLine();
 726:	ce 01       	movw	r24, r28
 728:	01 96       	adiw	r24, 0x01	; 1
 72a:	0e 94 39 01 	call	0x272	; 0x272 <_ZN3LCD13GoToFirstLineEv>
		lcd.WriteString(str1);
 72e:	be 01       	movw	r22, r28
 730:	6d 5f       	subi	r22, 0xFD	; 253
 732:	7f 4f       	sbci	r23, 0xFF	; 255
 734:	ce 01       	movw	r24, r28
 736:	01 96       	adiw	r24, 0x01	; 1
 738:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <_ZN3LCD11WriteStringEPc>
		
		if(tavg >= work_point){
 73c:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <tavg>
 740:	90 91 06 01 	lds	r25, 0x0106	; 0x800106 <tavg+0x1>
 744:	82 3c       	cpi	r24, 0xC2	; 194
 746:	91 40       	sbci	r25, 0x01	; 1
 748:	20 f0       	brcs	.+8      	; 0x752 <main+0x132>
			CLR_T0;
 74a:	3a 9a       	sbi	0x07, 2	; 7
 74c:	42 98       	cbi	0x08, 2	; 8
			preheat = 0;
 74e:	1b a6       	std	Y+43, r1	; 0x2b
 750:	9a cf       	rjmp	.-204    	; 0x686 <main+0x66>
		}else{
			SET_T0;
 752:	3a 9a       	sbi	0x07, 2	; 7
 754:	42 9a       	sbi	0x08, 2	; 8
			delay(20000);
 756:	60 e2       	ldi	r22, 0x20	; 32
 758:	7e e4       	ldi	r23, 0x4E	; 78
 75a:	80 e0       	ldi	r24, 0x00	; 0
 75c:	90 e0       	ldi	r25, 0x00	; 0
 75e:	0e 94 f6 01 	call	0x3ec	; 0x3ec <_Z5delaym>
 762:	91 cf       	rjmp	.-222    	; 0x686 <main+0x66>
		};
	};
	
	CLR_T0;
 764:	3a 9a       	sbi	0x07, 2	; 7
 766:	42 98       	cbi	0x08, 2	; 8
	
	sei();
 768:	78 94       	sei
	
	
	while (1)
	{
		if(isr == 0){
 76a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_end>
 76e:	81 11       	cpse	r24, r1
 770:	3a c0       	rjmp	.+116    	; 0x7e6 <main+0x1c6>
			itoa((uint16_t)(r), str1, 10);
 772:	60 91 01 01 	lds	r22, 0x0101	; 0x800101 <r>
 776:	70 91 02 01 	lds	r23, 0x0102	; 0x800102 <r+0x1>
 77a:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <r+0x2>
 77e:	90 91 04 01 	lds	r25, 0x0104	; 0x800104 <r+0x3>
 782:	0e 94 07 05 	call	0xa0e	; 0xa0e <__fixunssfsi>
 786:	dc 01       	movw	r26, r24
 788:	cb 01       	movw	r24, r22
 78a:	4a e0       	ldi	r20, 0x0A	; 10
 78c:	be 01       	movw	r22, r28
 78e:	6d 5f       	subi	r22, 0xFD	; 253
 790:	7f 4f       	sbci	r23, 0xFF	; 255
 792:	0e 94 37 06 	call	0xc6e	; 0xc6e <__itoa_ncheck>
		
		
			cstr(str1);
 796:	ce 01       	movw	r24, r28
 798:	03 96       	adiw	r24, 0x03	; 3
 79a:	0e 94 2e 02 	call	0x45c	; 0x45c <_Z4cstrPc>
		
			lcd.GoToFirstLine();
 79e:	ce 01       	movw	r24, r28
 7a0:	01 96       	adiw	r24, 0x01	; 1
 7a2:	0e 94 39 01 	call	0x272	; 0x272 <_ZN3LCD13GoToFirstLineEv>
			lcd.WriteString(str1);
 7a6:	be 01       	movw	r22, r28
 7a8:	6d 5f       	subi	r22, 0xFD	; 253
 7aa:	7f 4f       	sbci	r23, 0xFF	; 255
 7ac:	ce 01       	movw	r24, r28
 7ae:	01 96       	adiw	r24, 0x01	; 1
 7b0:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <_ZN3LCD11WriteStringEPc>
		
		
			itoa((uint16_t)(tavg), str2, 10);
 7b4:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <tavg>
 7b8:	90 91 06 01 	lds	r25, 0x0106	; 0x800106 <tavg+0x1>
 7bc:	4a e0       	ldi	r20, 0x0A	; 10
 7be:	be 01       	movw	r22, r28
 7c0:	69 5e       	subi	r22, 0xE9	; 233
 7c2:	7f 4f       	sbci	r23, 0xFF	; 255
 7c4:	0e 94 37 06 	call	0xc6e	; 0xc6e <__itoa_ncheck>
		
		
			cstr(str2);
 7c8:	ce 01       	movw	r24, r28
 7ca:	47 96       	adiw	r24, 0x17	; 23
 7cc:	0e 94 2e 02 	call	0x45c	; 0x45c <_Z4cstrPc>
		
			lcd.GoToSecondLine();
 7d0:	ce 01       	movw	r24, r28
 7d2:	01 96       	adiw	r24, 0x01	; 1
 7d4:	0e 94 3d 01 	call	0x27a	; 0x27a <_ZN3LCD14GoToSecondLineEv>
			lcd.WriteString(str2);
 7d8:	be 01       	movw	r22, r28
 7da:	69 5e       	subi	r22, 0xE9	; 233
 7dc:	7f 4f       	sbci	r23, 0xFF	; 255
 7de:	ce 01       	movw	r24, r28
 7e0:	01 96       	adiw	r24, 0x01	; 1
 7e2:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <_ZN3LCD11WriteStringEPc>
		};
		delay(0xFFFF);
 7e6:	6f ef       	ldi	r22, 0xFF	; 255
 7e8:	7f ef       	ldi	r23, 0xFF	; 255
 7ea:	80 e0       	ldi	r24, 0x00	; 0
 7ec:	90 e0       	ldi	r25, 0x00	; 0
 7ee:	0e 94 f6 01 	call	0x3ec	; 0x3ec <_Z5delaym>
	CLR_T0;
	
	sei();
	
	
	while (1)
 7f2:	bb cf       	rjmp	.-138    	; 0x76a <main+0x14a>

000007f4 <_GLOBAL__sub_I_pid>:
	float measure;
public:

	float setpoint;
	PID(float _kt, float _kp, float _ki, float _kd, float _val)
	:kt(_kt), kp(_kp), ki(_ki), kd(_kd), setpoint(_val) {};
 7f4:	e0 e1       	ldi	r30, 0x10	; 16
 7f6:	f1 e0       	ldi	r31, 0x01	; 1
 7f8:	8a eb       	ldi	r24, 0xBA	; 186
 7fa:	99 e4       	ldi	r25, 0x49	; 73
 7fc:	ac e8       	ldi	r26, 0x8C	; 140
 7fe:	be e3       	ldi	r27, 0x3E	; 62
 800:	84 8b       	std	Z+20, r24	; 0x14
 802:	95 8b       	std	Z+21, r25	; 0x15
 804:	a6 8b       	std	Z+22, r26	; 0x16
 806:	b7 8b       	std	Z+23, r27	; 0x17
 808:	80 e0       	ldi	r24, 0x00	; 0
 80a:	90 e0       	ldi	r25, 0x00	; 0
 80c:	a6 e1       	ldi	r26, 0x16	; 22
 80e:	b3 e4       	ldi	r27, 0x43	; 67
 810:	80 8f       	std	Z+24, r24	; 0x18
 812:	91 8f       	std	Z+25, r25	; 0x19
 814:	a2 8f       	std	Z+26, r26	; 0x1a
 816:	b3 8f       	std	Z+27, r27	; 0x1b
 818:	80 e0       	ldi	r24, 0x00	; 0
 81a:	90 e0       	ldi	r25, 0x00	; 0
 81c:	a8 e4       	ldi	r26, 0x48	; 72
 81e:	b2 e4       	ldi	r27, 0x42	; 66
 820:	84 8f       	std	Z+28, r24	; 0x1c
 822:	95 8f       	std	Z+29, r25	; 0x1d
 824:	a6 8f       	std	Z+30, r26	; 0x1e
 826:	b7 8f       	std	Z+31, r27	; 0x1f
 828:	10 a2       	std	Z+32, r1	; 0x20
 82a:	11 a2       	std	Z+33, r1	; 0x21
 82c:	12 a2       	std	Z+34, r1	; 0x22
 82e:	13 a2       	std	Z+35, r1	; 0x23
 830:	80 e0       	ldi	r24, 0x00	; 0
 832:	90 e0       	ldi	r25, 0x00	; 0
 834:	a1 ee       	ldi	r26, 0xE1	; 225
 836:	b3 e4       	ldi	r27, 0x43	; 67
 838:	80 a7       	std	Z+40, r24	; 0x28
 83a:	91 a7       	std	Z+41, r25	; 0x29
 83c:	a2 a7       	std	Z+42, r26	; 0x2a
 83e:	b3 a7       	std	Z+43, r27	; 0x2b
 840:	08 95       	ret

00000842 <__subsf3>:
 842:	50 58       	subi	r21, 0x80	; 128

00000844 <__addsf3>:
 844:	bb 27       	eor	r27, r27
 846:	aa 27       	eor	r26, r26
 848:	0e 94 39 04 	call	0x872	; 0x872 <__addsf3x>
 84c:	0c 94 8a 05 	jmp	0xb14	; 0xb14 <__fp_round>
 850:	0e 94 7c 05 	call	0xaf8	; 0xaf8 <__fp_pscA>
 854:	38 f0       	brcs	.+14     	; 0x864 <__addsf3+0x20>
 856:	0e 94 83 05 	call	0xb06	; 0xb06 <__fp_pscB>
 85a:	20 f0       	brcs	.+8      	; 0x864 <__addsf3+0x20>
 85c:	39 f4       	brne	.+14     	; 0x86c <__addsf3+0x28>
 85e:	9f 3f       	cpi	r25, 0xFF	; 255
 860:	19 f4       	brne	.+6      	; 0x868 <__addsf3+0x24>
 862:	26 f4       	brtc	.+8      	; 0x86c <__addsf3+0x28>
 864:	0c 94 79 05 	jmp	0xaf2	; 0xaf2 <__fp_nan>
 868:	0e f4       	brtc	.+2      	; 0x86c <__addsf3+0x28>
 86a:	e0 95       	com	r30
 86c:	e7 fb       	bst	r30, 7
 86e:	0c 94 73 05 	jmp	0xae6	; 0xae6 <__fp_inf>

00000872 <__addsf3x>:
 872:	e9 2f       	mov	r30, r25
 874:	0e 94 9b 05 	call	0xb36	; 0xb36 <__fp_split3>
 878:	58 f3       	brcs	.-42     	; 0x850 <__addsf3+0xc>
 87a:	ba 17       	cp	r27, r26
 87c:	62 07       	cpc	r22, r18
 87e:	73 07       	cpc	r23, r19
 880:	84 07       	cpc	r24, r20
 882:	95 07       	cpc	r25, r21
 884:	20 f0       	brcs	.+8      	; 0x88e <__addsf3x+0x1c>
 886:	79 f4       	brne	.+30     	; 0x8a6 <__addsf3x+0x34>
 888:	a6 f5       	brtc	.+104    	; 0x8f2 <__addsf3x+0x80>
 88a:	0c 94 bd 05 	jmp	0xb7a	; 0xb7a <__fp_zero>
 88e:	0e f4       	brtc	.+2      	; 0x892 <__addsf3x+0x20>
 890:	e0 95       	com	r30
 892:	0b 2e       	mov	r0, r27
 894:	ba 2f       	mov	r27, r26
 896:	a0 2d       	mov	r26, r0
 898:	0b 01       	movw	r0, r22
 89a:	b9 01       	movw	r22, r18
 89c:	90 01       	movw	r18, r0
 89e:	0c 01       	movw	r0, r24
 8a0:	ca 01       	movw	r24, r20
 8a2:	a0 01       	movw	r20, r0
 8a4:	11 24       	eor	r1, r1
 8a6:	ff 27       	eor	r31, r31
 8a8:	59 1b       	sub	r21, r25
 8aa:	99 f0       	breq	.+38     	; 0x8d2 <__addsf3x+0x60>
 8ac:	59 3f       	cpi	r21, 0xF9	; 249
 8ae:	50 f4       	brcc	.+20     	; 0x8c4 <__addsf3x+0x52>
 8b0:	50 3e       	cpi	r21, 0xE0	; 224
 8b2:	68 f1       	brcs	.+90     	; 0x90e <__stack+0xf>
 8b4:	1a 16       	cp	r1, r26
 8b6:	f0 40       	sbci	r31, 0x00	; 0
 8b8:	a2 2f       	mov	r26, r18
 8ba:	23 2f       	mov	r18, r19
 8bc:	34 2f       	mov	r19, r20
 8be:	44 27       	eor	r20, r20
 8c0:	58 5f       	subi	r21, 0xF8	; 248
 8c2:	f3 cf       	rjmp	.-26     	; 0x8aa <__addsf3x+0x38>
 8c4:	46 95       	lsr	r20
 8c6:	37 95       	ror	r19
 8c8:	27 95       	ror	r18
 8ca:	a7 95       	ror	r26
 8cc:	f0 40       	sbci	r31, 0x00	; 0
 8ce:	53 95       	inc	r21
 8d0:	c9 f7       	brne	.-14     	; 0x8c4 <__addsf3x+0x52>
 8d2:	7e f4       	brtc	.+30     	; 0x8f2 <__addsf3x+0x80>
 8d4:	1f 16       	cp	r1, r31
 8d6:	ba 0b       	sbc	r27, r26
 8d8:	62 0b       	sbc	r22, r18
 8da:	73 0b       	sbc	r23, r19
 8dc:	84 0b       	sbc	r24, r20
 8de:	ba f0       	brmi	.+46     	; 0x90e <__stack+0xf>
 8e0:	91 50       	subi	r25, 0x01	; 1
 8e2:	a1 f0       	breq	.+40     	; 0x90c <__stack+0xd>
 8e4:	ff 0f       	add	r31, r31
 8e6:	bb 1f       	adc	r27, r27
 8e8:	66 1f       	adc	r22, r22
 8ea:	77 1f       	adc	r23, r23
 8ec:	88 1f       	adc	r24, r24
 8ee:	c2 f7       	brpl	.-16     	; 0x8e0 <__addsf3x+0x6e>
 8f0:	0e c0       	rjmp	.+28     	; 0x90e <__stack+0xf>
 8f2:	ba 0f       	add	r27, r26
 8f4:	62 1f       	adc	r22, r18
 8f6:	73 1f       	adc	r23, r19
 8f8:	84 1f       	adc	r24, r20
 8fa:	48 f4       	brcc	.+18     	; 0x90e <__stack+0xf>
 8fc:	87 95       	ror	r24
 8fe:	77 95       	ror	r23
 900:	67 95       	ror	r22
 902:	b7 95       	ror	r27
 904:	f7 95       	ror	r31
 906:	9e 3f       	cpi	r25, 0xFE	; 254
 908:	08 f0       	brcs	.+2      	; 0x90c <__stack+0xd>
 90a:	b0 cf       	rjmp	.-160    	; 0x86c <__addsf3+0x28>
 90c:	93 95       	inc	r25
 90e:	88 0f       	add	r24, r24
 910:	08 f0       	brcs	.+2      	; 0x914 <__stack+0x15>
 912:	99 27       	eor	r25, r25
 914:	ee 0f       	add	r30, r30
 916:	97 95       	ror	r25
 918:	87 95       	ror	r24
 91a:	08 95       	ret

0000091c <__divsf3>:
 91c:	0e 94 a2 04 	call	0x944	; 0x944 <__divsf3x>
 920:	0c 94 8a 05 	jmp	0xb14	; 0xb14 <__fp_round>
 924:	0e 94 83 05 	call	0xb06	; 0xb06 <__fp_pscB>
 928:	58 f0       	brcs	.+22     	; 0x940 <__divsf3+0x24>
 92a:	0e 94 7c 05 	call	0xaf8	; 0xaf8 <__fp_pscA>
 92e:	40 f0       	brcs	.+16     	; 0x940 <__divsf3+0x24>
 930:	29 f4       	brne	.+10     	; 0x93c <__divsf3+0x20>
 932:	5f 3f       	cpi	r21, 0xFF	; 255
 934:	29 f0       	breq	.+10     	; 0x940 <__divsf3+0x24>
 936:	0c 94 73 05 	jmp	0xae6	; 0xae6 <__fp_inf>
 93a:	51 11       	cpse	r21, r1
 93c:	0c 94 be 05 	jmp	0xb7c	; 0xb7c <__fp_szero>
 940:	0c 94 79 05 	jmp	0xaf2	; 0xaf2 <__fp_nan>

00000944 <__divsf3x>:
 944:	0e 94 9b 05 	call	0xb36	; 0xb36 <__fp_split3>
 948:	68 f3       	brcs	.-38     	; 0x924 <__divsf3+0x8>

0000094a <__divsf3_pse>:
 94a:	99 23       	and	r25, r25
 94c:	b1 f3       	breq	.-20     	; 0x93a <__divsf3+0x1e>
 94e:	55 23       	and	r21, r21
 950:	91 f3       	breq	.-28     	; 0x936 <__divsf3+0x1a>
 952:	95 1b       	sub	r25, r21
 954:	55 0b       	sbc	r21, r21
 956:	bb 27       	eor	r27, r27
 958:	aa 27       	eor	r26, r26
 95a:	62 17       	cp	r22, r18
 95c:	73 07       	cpc	r23, r19
 95e:	84 07       	cpc	r24, r20
 960:	38 f0       	brcs	.+14     	; 0x970 <__divsf3_pse+0x26>
 962:	9f 5f       	subi	r25, 0xFF	; 255
 964:	5f 4f       	sbci	r21, 0xFF	; 255
 966:	22 0f       	add	r18, r18
 968:	33 1f       	adc	r19, r19
 96a:	44 1f       	adc	r20, r20
 96c:	aa 1f       	adc	r26, r26
 96e:	a9 f3       	breq	.-22     	; 0x95a <__divsf3_pse+0x10>
 970:	35 d0       	rcall	.+106    	; 0x9dc <__divsf3_pse+0x92>
 972:	0e 2e       	mov	r0, r30
 974:	3a f0       	brmi	.+14     	; 0x984 <__divsf3_pse+0x3a>
 976:	e0 e8       	ldi	r30, 0x80	; 128
 978:	32 d0       	rcall	.+100    	; 0x9de <__divsf3_pse+0x94>
 97a:	91 50       	subi	r25, 0x01	; 1
 97c:	50 40       	sbci	r21, 0x00	; 0
 97e:	e6 95       	lsr	r30
 980:	00 1c       	adc	r0, r0
 982:	ca f7       	brpl	.-14     	; 0x976 <__divsf3_pse+0x2c>
 984:	2b d0       	rcall	.+86     	; 0x9dc <__divsf3_pse+0x92>
 986:	fe 2f       	mov	r31, r30
 988:	29 d0       	rcall	.+82     	; 0x9dc <__divsf3_pse+0x92>
 98a:	66 0f       	add	r22, r22
 98c:	77 1f       	adc	r23, r23
 98e:	88 1f       	adc	r24, r24
 990:	bb 1f       	adc	r27, r27
 992:	26 17       	cp	r18, r22
 994:	37 07       	cpc	r19, r23
 996:	48 07       	cpc	r20, r24
 998:	ab 07       	cpc	r26, r27
 99a:	b0 e8       	ldi	r27, 0x80	; 128
 99c:	09 f0       	breq	.+2      	; 0x9a0 <__divsf3_pse+0x56>
 99e:	bb 0b       	sbc	r27, r27
 9a0:	80 2d       	mov	r24, r0
 9a2:	bf 01       	movw	r22, r30
 9a4:	ff 27       	eor	r31, r31
 9a6:	93 58       	subi	r25, 0x83	; 131
 9a8:	5f 4f       	sbci	r21, 0xFF	; 255
 9aa:	3a f0       	brmi	.+14     	; 0x9ba <__divsf3_pse+0x70>
 9ac:	9e 3f       	cpi	r25, 0xFE	; 254
 9ae:	51 05       	cpc	r21, r1
 9b0:	78 f0       	brcs	.+30     	; 0x9d0 <__divsf3_pse+0x86>
 9b2:	0c 94 73 05 	jmp	0xae6	; 0xae6 <__fp_inf>
 9b6:	0c 94 be 05 	jmp	0xb7c	; 0xb7c <__fp_szero>
 9ba:	5f 3f       	cpi	r21, 0xFF	; 255
 9bc:	e4 f3       	brlt	.-8      	; 0x9b6 <__divsf3_pse+0x6c>
 9be:	98 3e       	cpi	r25, 0xE8	; 232
 9c0:	d4 f3       	brlt	.-12     	; 0x9b6 <__divsf3_pse+0x6c>
 9c2:	86 95       	lsr	r24
 9c4:	77 95       	ror	r23
 9c6:	67 95       	ror	r22
 9c8:	b7 95       	ror	r27
 9ca:	f7 95       	ror	r31
 9cc:	9f 5f       	subi	r25, 0xFF	; 255
 9ce:	c9 f7       	brne	.-14     	; 0x9c2 <__divsf3_pse+0x78>
 9d0:	88 0f       	add	r24, r24
 9d2:	91 1d       	adc	r25, r1
 9d4:	96 95       	lsr	r25
 9d6:	87 95       	ror	r24
 9d8:	97 f9       	bld	r25, 7
 9da:	08 95       	ret
 9dc:	e1 e0       	ldi	r30, 0x01	; 1
 9de:	66 0f       	add	r22, r22
 9e0:	77 1f       	adc	r23, r23
 9e2:	88 1f       	adc	r24, r24
 9e4:	bb 1f       	adc	r27, r27
 9e6:	62 17       	cp	r22, r18
 9e8:	73 07       	cpc	r23, r19
 9ea:	84 07       	cpc	r24, r20
 9ec:	ba 07       	cpc	r27, r26
 9ee:	20 f0       	brcs	.+8      	; 0x9f8 <__divsf3_pse+0xae>
 9f0:	62 1b       	sub	r22, r18
 9f2:	73 0b       	sbc	r23, r19
 9f4:	84 0b       	sbc	r24, r20
 9f6:	ba 0b       	sbc	r27, r26
 9f8:	ee 1f       	adc	r30, r30
 9fa:	88 f7       	brcc	.-30     	; 0x9de <__divsf3_pse+0x94>
 9fc:	e0 95       	com	r30
 9fe:	08 95       	ret

00000a00 <__fixsfsi>:
 a00:	0e 94 07 05 	call	0xa0e	; 0xa0e <__fixunssfsi>
 a04:	68 94       	set
 a06:	b1 11       	cpse	r27, r1
 a08:	0c 94 be 05 	jmp	0xb7c	; 0xb7c <__fp_szero>
 a0c:	08 95       	ret

00000a0e <__fixunssfsi>:
 a0e:	0e 94 a3 05 	call	0xb46	; 0xb46 <__fp_splitA>
 a12:	88 f0       	brcs	.+34     	; 0xa36 <__fixunssfsi+0x28>
 a14:	9f 57       	subi	r25, 0x7F	; 127
 a16:	98 f0       	brcs	.+38     	; 0xa3e <__fixunssfsi+0x30>
 a18:	b9 2f       	mov	r27, r25
 a1a:	99 27       	eor	r25, r25
 a1c:	b7 51       	subi	r27, 0x17	; 23
 a1e:	b0 f0       	brcs	.+44     	; 0xa4c <__fixunssfsi+0x3e>
 a20:	e1 f0       	breq	.+56     	; 0xa5a <__fixunssfsi+0x4c>
 a22:	66 0f       	add	r22, r22
 a24:	77 1f       	adc	r23, r23
 a26:	88 1f       	adc	r24, r24
 a28:	99 1f       	adc	r25, r25
 a2a:	1a f0       	brmi	.+6      	; 0xa32 <__fixunssfsi+0x24>
 a2c:	ba 95       	dec	r27
 a2e:	c9 f7       	brne	.-14     	; 0xa22 <__fixunssfsi+0x14>
 a30:	14 c0       	rjmp	.+40     	; 0xa5a <__fixunssfsi+0x4c>
 a32:	b1 30       	cpi	r27, 0x01	; 1
 a34:	91 f0       	breq	.+36     	; 0xa5a <__fixunssfsi+0x4c>
 a36:	0e 94 bd 05 	call	0xb7a	; 0xb7a <__fp_zero>
 a3a:	b1 e0       	ldi	r27, 0x01	; 1
 a3c:	08 95       	ret
 a3e:	0c 94 bd 05 	jmp	0xb7a	; 0xb7a <__fp_zero>
 a42:	67 2f       	mov	r22, r23
 a44:	78 2f       	mov	r23, r24
 a46:	88 27       	eor	r24, r24
 a48:	b8 5f       	subi	r27, 0xF8	; 248
 a4a:	39 f0       	breq	.+14     	; 0xa5a <__fixunssfsi+0x4c>
 a4c:	b9 3f       	cpi	r27, 0xF9	; 249
 a4e:	cc f3       	brlt	.-14     	; 0xa42 <__fixunssfsi+0x34>
 a50:	86 95       	lsr	r24
 a52:	77 95       	ror	r23
 a54:	67 95       	ror	r22
 a56:	b3 95       	inc	r27
 a58:	d9 f7       	brne	.-10     	; 0xa50 <__fixunssfsi+0x42>
 a5a:	3e f4       	brtc	.+14     	; 0xa6a <__fixunssfsi+0x5c>
 a5c:	90 95       	com	r25
 a5e:	80 95       	com	r24
 a60:	70 95       	com	r23
 a62:	61 95       	neg	r22
 a64:	7f 4f       	sbci	r23, 0xFF	; 255
 a66:	8f 4f       	sbci	r24, 0xFF	; 255
 a68:	9f 4f       	sbci	r25, 0xFF	; 255
 a6a:	08 95       	ret

00000a6c <__floatunsisf>:
 a6c:	e8 94       	clt
 a6e:	09 c0       	rjmp	.+18     	; 0xa82 <__floatsisf+0x12>

00000a70 <__floatsisf>:
 a70:	97 fb       	bst	r25, 7
 a72:	3e f4       	brtc	.+14     	; 0xa82 <__floatsisf+0x12>
 a74:	90 95       	com	r25
 a76:	80 95       	com	r24
 a78:	70 95       	com	r23
 a7a:	61 95       	neg	r22
 a7c:	7f 4f       	sbci	r23, 0xFF	; 255
 a7e:	8f 4f       	sbci	r24, 0xFF	; 255
 a80:	9f 4f       	sbci	r25, 0xFF	; 255
 a82:	99 23       	and	r25, r25
 a84:	a9 f0       	breq	.+42     	; 0xab0 <__floatsisf+0x40>
 a86:	f9 2f       	mov	r31, r25
 a88:	96 e9       	ldi	r25, 0x96	; 150
 a8a:	bb 27       	eor	r27, r27
 a8c:	93 95       	inc	r25
 a8e:	f6 95       	lsr	r31
 a90:	87 95       	ror	r24
 a92:	77 95       	ror	r23
 a94:	67 95       	ror	r22
 a96:	b7 95       	ror	r27
 a98:	f1 11       	cpse	r31, r1
 a9a:	f8 cf       	rjmp	.-16     	; 0xa8c <__floatsisf+0x1c>
 a9c:	fa f4       	brpl	.+62     	; 0xadc <__floatsisf+0x6c>
 a9e:	bb 0f       	add	r27, r27
 aa0:	11 f4       	brne	.+4      	; 0xaa6 <__floatsisf+0x36>
 aa2:	60 ff       	sbrs	r22, 0
 aa4:	1b c0       	rjmp	.+54     	; 0xadc <__floatsisf+0x6c>
 aa6:	6f 5f       	subi	r22, 0xFF	; 255
 aa8:	7f 4f       	sbci	r23, 0xFF	; 255
 aaa:	8f 4f       	sbci	r24, 0xFF	; 255
 aac:	9f 4f       	sbci	r25, 0xFF	; 255
 aae:	16 c0       	rjmp	.+44     	; 0xadc <__floatsisf+0x6c>
 ab0:	88 23       	and	r24, r24
 ab2:	11 f0       	breq	.+4      	; 0xab8 <__floatsisf+0x48>
 ab4:	96 e9       	ldi	r25, 0x96	; 150
 ab6:	11 c0       	rjmp	.+34     	; 0xada <__floatsisf+0x6a>
 ab8:	77 23       	and	r23, r23
 aba:	21 f0       	breq	.+8      	; 0xac4 <__floatsisf+0x54>
 abc:	9e e8       	ldi	r25, 0x8E	; 142
 abe:	87 2f       	mov	r24, r23
 ac0:	76 2f       	mov	r23, r22
 ac2:	05 c0       	rjmp	.+10     	; 0xace <__floatsisf+0x5e>
 ac4:	66 23       	and	r22, r22
 ac6:	71 f0       	breq	.+28     	; 0xae4 <__floatsisf+0x74>
 ac8:	96 e8       	ldi	r25, 0x86	; 134
 aca:	86 2f       	mov	r24, r22
 acc:	70 e0       	ldi	r23, 0x00	; 0
 ace:	60 e0       	ldi	r22, 0x00	; 0
 ad0:	2a f0       	brmi	.+10     	; 0xadc <__floatsisf+0x6c>
 ad2:	9a 95       	dec	r25
 ad4:	66 0f       	add	r22, r22
 ad6:	77 1f       	adc	r23, r23
 ad8:	88 1f       	adc	r24, r24
 ada:	da f7       	brpl	.-10     	; 0xad2 <__floatsisf+0x62>
 adc:	88 0f       	add	r24, r24
 ade:	96 95       	lsr	r25
 ae0:	87 95       	ror	r24
 ae2:	97 f9       	bld	r25, 7
 ae4:	08 95       	ret

00000ae6 <__fp_inf>:
 ae6:	97 f9       	bld	r25, 7
 ae8:	9f 67       	ori	r25, 0x7F	; 127
 aea:	80 e8       	ldi	r24, 0x80	; 128
 aec:	70 e0       	ldi	r23, 0x00	; 0
 aee:	60 e0       	ldi	r22, 0x00	; 0
 af0:	08 95       	ret

00000af2 <__fp_nan>:
 af2:	9f ef       	ldi	r25, 0xFF	; 255
 af4:	80 ec       	ldi	r24, 0xC0	; 192
 af6:	08 95       	ret

00000af8 <__fp_pscA>:
 af8:	00 24       	eor	r0, r0
 afa:	0a 94       	dec	r0
 afc:	16 16       	cp	r1, r22
 afe:	17 06       	cpc	r1, r23
 b00:	18 06       	cpc	r1, r24
 b02:	09 06       	cpc	r0, r25
 b04:	08 95       	ret

00000b06 <__fp_pscB>:
 b06:	00 24       	eor	r0, r0
 b08:	0a 94       	dec	r0
 b0a:	12 16       	cp	r1, r18
 b0c:	13 06       	cpc	r1, r19
 b0e:	14 06       	cpc	r1, r20
 b10:	05 06       	cpc	r0, r21
 b12:	08 95       	ret

00000b14 <__fp_round>:
 b14:	09 2e       	mov	r0, r25
 b16:	03 94       	inc	r0
 b18:	00 0c       	add	r0, r0
 b1a:	11 f4       	brne	.+4      	; 0xb20 <__fp_round+0xc>
 b1c:	88 23       	and	r24, r24
 b1e:	52 f0       	brmi	.+20     	; 0xb34 <__fp_round+0x20>
 b20:	bb 0f       	add	r27, r27
 b22:	40 f4       	brcc	.+16     	; 0xb34 <__fp_round+0x20>
 b24:	bf 2b       	or	r27, r31
 b26:	11 f4       	brne	.+4      	; 0xb2c <__fp_round+0x18>
 b28:	60 ff       	sbrs	r22, 0
 b2a:	04 c0       	rjmp	.+8      	; 0xb34 <__fp_round+0x20>
 b2c:	6f 5f       	subi	r22, 0xFF	; 255
 b2e:	7f 4f       	sbci	r23, 0xFF	; 255
 b30:	8f 4f       	sbci	r24, 0xFF	; 255
 b32:	9f 4f       	sbci	r25, 0xFF	; 255
 b34:	08 95       	ret

00000b36 <__fp_split3>:
 b36:	57 fd       	sbrc	r21, 7
 b38:	90 58       	subi	r25, 0x80	; 128
 b3a:	44 0f       	add	r20, r20
 b3c:	55 1f       	adc	r21, r21
 b3e:	59 f0       	breq	.+22     	; 0xb56 <__fp_splitA+0x10>
 b40:	5f 3f       	cpi	r21, 0xFF	; 255
 b42:	71 f0       	breq	.+28     	; 0xb60 <__fp_splitA+0x1a>
 b44:	47 95       	ror	r20

00000b46 <__fp_splitA>:
 b46:	88 0f       	add	r24, r24
 b48:	97 fb       	bst	r25, 7
 b4a:	99 1f       	adc	r25, r25
 b4c:	61 f0       	breq	.+24     	; 0xb66 <__fp_splitA+0x20>
 b4e:	9f 3f       	cpi	r25, 0xFF	; 255
 b50:	79 f0       	breq	.+30     	; 0xb70 <__fp_splitA+0x2a>
 b52:	87 95       	ror	r24
 b54:	08 95       	ret
 b56:	12 16       	cp	r1, r18
 b58:	13 06       	cpc	r1, r19
 b5a:	14 06       	cpc	r1, r20
 b5c:	55 1f       	adc	r21, r21
 b5e:	f2 cf       	rjmp	.-28     	; 0xb44 <__fp_split3+0xe>
 b60:	46 95       	lsr	r20
 b62:	f1 df       	rcall	.-30     	; 0xb46 <__fp_splitA>
 b64:	08 c0       	rjmp	.+16     	; 0xb76 <__fp_splitA+0x30>
 b66:	16 16       	cp	r1, r22
 b68:	17 06       	cpc	r1, r23
 b6a:	18 06       	cpc	r1, r24
 b6c:	99 1f       	adc	r25, r25
 b6e:	f1 cf       	rjmp	.-30     	; 0xb52 <__fp_splitA+0xc>
 b70:	86 95       	lsr	r24
 b72:	71 05       	cpc	r23, r1
 b74:	61 05       	cpc	r22, r1
 b76:	08 94       	sec
 b78:	08 95       	ret

00000b7a <__fp_zero>:
 b7a:	e8 94       	clt

00000b7c <__fp_szero>:
 b7c:	bb 27       	eor	r27, r27
 b7e:	66 27       	eor	r22, r22
 b80:	77 27       	eor	r23, r23
 b82:	cb 01       	movw	r24, r22
 b84:	97 f9       	bld	r25, 7
 b86:	08 95       	ret

00000b88 <__mulsf3>:
 b88:	0e 94 d7 05 	call	0xbae	; 0xbae <__mulsf3x>
 b8c:	0c 94 8a 05 	jmp	0xb14	; 0xb14 <__fp_round>
 b90:	0e 94 7c 05 	call	0xaf8	; 0xaf8 <__fp_pscA>
 b94:	38 f0       	brcs	.+14     	; 0xba4 <__mulsf3+0x1c>
 b96:	0e 94 83 05 	call	0xb06	; 0xb06 <__fp_pscB>
 b9a:	20 f0       	brcs	.+8      	; 0xba4 <__mulsf3+0x1c>
 b9c:	95 23       	and	r25, r21
 b9e:	11 f0       	breq	.+4      	; 0xba4 <__mulsf3+0x1c>
 ba0:	0c 94 73 05 	jmp	0xae6	; 0xae6 <__fp_inf>
 ba4:	0c 94 79 05 	jmp	0xaf2	; 0xaf2 <__fp_nan>
 ba8:	11 24       	eor	r1, r1
 baa:	0c 94 be 05 	jmp	0xb7c	; 0xb7c <__fp_szero>

00000bae <__mulsf3x>:
 bae:	0e 94 9b 05 	call	0xb36	; 0xb36 <__fp_split3>
 bb2:	70 f3       	brcs	.-36     	; 0xb90 <__mulsf3+0x8>

00000bb4 <__mulsf3_pse>:
 bb4:	95 9f       	mul	r25, r21
 bb6:	c1 f3       	breq	.-16     	; 0xba8 <__mulsf3+0x20>
 bb8:	95 0f       	add	r25, r21
 bba:	50 e0       	ldi	r21, 0x00	; 0
 bbc:	55 1f       	adc	r21, r21
 bbe:	62 9f       	mul	r22, r18
 bc0:	f0 01       	movw	r30, r0
 bc2:	72 9f       	mul	r23, r18
 bc4:	bb 27       	eor	r27, r27
 bc6:	f0 0d       	add	r31, r0
 bc8:	b1 1d       	adc	r27, r1
 bca:	63 9f       	mul	r22, r19
 bcc:	aa 27       	eor	r26, r26
 bce:	f0 0d       	add	r31, r0
 bd0:	b1 1d       	adc	r27, r1
 bd2:	aa 1f       	adc	r26, r26
 bd4:	64 9f       	mul	r22, r20
 bd6:	66 27       	eor	r22, r22
 bd8:	b0 0d       	add	r27, r0
 bda:	a1 1d       	adc	r26, r1
 bdc:	66 1f       	adc	r22, r22
 bde:	82 9f       	mul	r24, r18
 be0:	22 27       	eor	r18, r18
 be2:	b0 0d       	add	r27, r0
 be4:	a1 1d       	adc	r26, r1
 be6:	62 1f       	adc	r22, r18
 be8:	73 9f       	mul	r23, r19
 bea:	b0 0d       	add	r27, r0
 bec:	a1 1d       	adc	r26, r1
 bee:	62 1f       	adc	r22, r18
 bf0:	83 9f       	mul	r24, r19
 bf2:	a0 0d       	add	r26, r0
 bf4:	61 1d       	adc	r22, r1
 bf6:	22 1f       	adc	r18, r18
 bf8:	74 9f       	mul	r23, r20
 bfa:	33 27       	eor	r19, r19
 bfc:	a0 0d       	add	r26, r0
 bfe:	61 1d       	adc	r22, r1
 c00:	23 1f       	adc	r18, r19
 c02:	84 9f       	mul	r24, r20
 c04:	60 0d       	add	r22, r0
 c06:	21 1d       	adc	r18, r1
 c08:	82 2f       	mov	r24, r18
 c0a:	76 2f       	mov	r23, r22
 c0c:	6a 2f       	mov	r22, r26
 c0e:	11 24       	eor	r1, r1
 c10:	9f 57       	subi	r25, 0x7F	; 127
 c12:	50 40       	sbci	r21, 0x00	; 0
 c14:	9a f0       	brmi	.+38     	; 0xc3c <__mulsf3_pse+0x88>
 c16:	f1 f0       	breq	.+60     	; 0xc54 <__mulsf3_pse+0xa0>
 c18:	88 23       	and	r24, r24
 c1a:	4a f0       	brmi	.+18     	; 0xc2e <__mulsf3_pse+0x7a>
 c1c:	ee 0f       	add	r30, r30
 c1e:	ff 1f       	adc	r31, r31
 c20:	bb 1f       	adc	r27, r27
 c22:	66 1f       	adc	r22, r22
 c24:	77 1f       	adc	r23, r23
 c26:	88 1f       	adc	r24, r24
 c28:	91 50       	subi	r25, 0x01	; 1
 c2a:	50 40       	sbci	r21, 0x00	; 0
 c2c:	a9 f7       	brne	.-22     	; 0xc18 <__mulsf3_pse+0x64>
 c2e:	9e 3f       	cpi	r25, 0xFE	; 254
 c30:	51 05       	cpc	r21, r1
 c32:	80 f0       	brcs	.+32     	; 0xc54 <__mulsf3_pse+0xa0>
 c34:	0c 94 73 05 	jmp	0xae6	; 0xae6 <__fp_inf>
 c38:	0c 94 be 05 	jmp	0xb7c	; 0xb7c <__fp_szero>
 c3c:	5f 3f       	cpi	r21, 0xFF	; 255
 c3e:	e4 f3       	brlt	.-8      	; 0xc38 <__mulsf3_pse+0x84>
 c40:	98 3e       	cpi	r25, 0xE8	; 232
 c42:	d4 f3       	brlt	.-12     	; 0xc38 <__mulsf3_pse+0x84>
 c44:	86 95       	lsr	r24
 c46:	77 95       	ror	r23
 c48:	67 95       	ror	r22
 c4a:	b7 95       	ror	r27
 c4c:	f7 95       	ror	r31
 c4e:	e7 95       	ror	r30
 c50:	9f 5f       	subi	r25, 0xFF	; 255
 c52:	c1 f7       	brne	.-16     	; 0xc44 <__mulsf3_pse+0x90>
 c54:	fe 2b       	or	r31, r30
 c56:	88 0f       	add	r24, r24
 c58:	91 1d       	adc	r25, r1
 c5a:	96 95       	lsr	r25
 c5c:	87 95       	ror	r24
 c5e:	97 f9       	bld	r25, 7
 c60:	08 95       	ret

00000c62 <__tablejump2__>:
 c62:	ee 0f       	add	r30, r30
 c64:	ff 1f       	adc	r31, r31
 c66:	05 90       	lpm	r0, Z+
 c68:	f4 91       	lpm	r31, Z
 c6a:	e0 2d       	mov	r30, r0
 c6c:	09 94       	ijmp

00000c6e <__itoa_ncheck>:
 c6e:	bb 27       	eor	r27, r27
 c70:	4a 30       	cpi	r20, 0x0A	; 10
 c72:	31 f4       	brne	.+12     	; 0xc80 <__itoa_ncheck+0x12>
 c74:	99 23       	and	r25, r25
 c76:	22 f4       	brpl	.+8      	; 0xc80 <__itoa_ncheck+0x12>
 c78:	bd e2       	ldi	r27, 0x2D	; 45
 c7a:	90 95       	com	r25
 c7c:	81 95       	neg	r24
 c7e:	9f 4f       	sbci	r25, 0xFF	; 255
 c80:	0c 94 43 06 	jmp	0xc86	; 0xc86 <__utoa_common>

00000c84 <__utoa_ncheck>:
 c84:	bb 27       	eor	r27, r27

00000c86 <__utoa_common>:
 c86:	fb 01       	movw	r30, r22
 c88:	55 27       	eor	r21, r21
 c8a:	aa 27       	eor	r26, r26
 c8c:	88 0f       	add	r24, r24
 c8e:	99 1f       	adc	r25, r25
 c90:	aa 1f       	adc	r26, r26
 c92:	a4 17       	cp	r26, r20
 c94:	10 f0       	brcs	.+4      	; 0xc9a <__utoa_common+0x14>
 c96:	a4 1b       	sub	r26, r20
 c98:	83 95       	inc	r24
 c9a:	50 51       	subi	r21, 0x10	; 16
 c9c:	b9 f7       	brne	.-18     	; 0xc8c <__utoa_common+0x6>
 c9e:	a0 5d       	subi	r26, 0xD0	; 208
 ca0:	aa 33       	cpi	r26, 0x3A	; 58
 ca2:	08 f0       	brcs	.+2      	; 0xca6 <__utoa_common+0x20>
 ca4:	a9 5d       	subi	r26, 0xD9	; 217
 ca6:	a1 93       	st	Z+, r26
 ca8:	00 97       	sbiw	r24, 0x00	; 0
 caa:	79 f7       	brne	.-34     	; 0xc8a <__utoa_common+0x4>
 cac:	b1 11       	cpse	r27, r1
 cae:	b1 93       	st	Z+, r27
 cb0:	11 92       	st	Z+, r1
 cb2:	cb 01       	movw	r24, r22
 cb4:	0c 94 5c 06 	jmp	0xcb8	; 0xcb8 <strrev>

00000cb8 <strrev>:
 cb8:	dc 01       	movw	r26, r24
 cba:	fc 01       	movw	r30, r24
 cbc:	67 2f       	mov	r22, r23
 cbe:	71 91       	ld	r23, Z+
 cc0:	77 23       	and	r23, r23
 cc2:	e1 f7       	brne	.-8      	; 0xcbc <strrev+0x4>
 cc4:	32 97       	sbiw	r30, 0x02	; 2
 cc6:	04 c0       	rjmp	.+8      	; 0xcd0 <strrev+0x18>
 cc8:	7c 91       	ld	r23, X
 cca:	6d 93       	st	X+, r22
 ccc:	70 83       	st	Z, r23
 cce:	62 91       	ld	r22, -Z
 cd0:	ae 17       	cp	r26, r30
 cd2:	bf 07       	cpc	r27, r31
 cd4:	c8 f3       	brcs	.-14     	; 0xcc8 <strrev+0x10>
 cd6:	08 95       	ret

00000cd8 <_exit>:
 cd8:	f8 94       	cli

00000cda <__stop_program>:
 cda:	ff cf       	rjmp	.-2      	; 0xcda <__stop_program>
